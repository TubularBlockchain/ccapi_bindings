/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.3.0
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

// source: /Users/los/dev/tubular/ccapi/binding/build/go/swig_interface.i

package ccapi

/*
#define intgo swig_intgo
typedef void *swig_voidp;

#include <stddef.h>
#include <stdint.h>


typedef long long intgo;
typedef unsigned long long uintgo;



typedef struct { char *p; intgo n; } _gostring_;
typedef struct { void* array; intgo len; intgo cap; } _goslice_;


typedef _gostring_ swig_type_1;
typedef _gostring_ swig_type_2;
typedef _gostring_ swig_type_3;
typedef _gostring_ swig_type_4;
typedef _gostring_ swig_type_5;
typedef _gostring_ swig_type_6;
typedef _gostring_ swig_type_7;
typedef _gostring_ swig_type_8;
typedef _gostring_ swig_type_9;
typedef _gostring_ swig_type_10;
typedef _gostring_ swig_type_11;
typedef long long swig_type_12;
typedef long long swig_type_13;
typedef long long swig_type_14;
typedef long long swig_type_15;
typedef long long swig_type_16;
typedef long long swig_type_17;
typedef long long swig_type_18;
typedef long long swig_type_19;
typedef long long swig_type_20;
typedef long long swig_type_21;
typedef long long swig_type_22;
typedef long long swig_type_23;
typedef long long swig_type_24;
typedef long long swig_type_25;
typedef long long swig_type_26;
typedef long long swig_type_27;
typedef long long swig_type_28;
typedef long long swig_type_29;
typedef _gostring_ swig_type_30;
typedef _gostring_ swig_type_31;
typedef _gostring_ swig_type_32;
typedef long long swig_type_33;
typedef long long swig_type_34;
typedef long long swig_type_35;
typedef long long swig_type_36;
typedef _gostring_ swig_type_37;
typedef _gostring_ swig_type_38;
typedef _gostring_ swig_type_39;
typedef _gostring_ swig_type_40;
typedef long long swig_type_41;
typedef long long swig_type_42;
typedef long long swig_type_43;
typedef long long swig_type_44;
typedef long long swig_type_45;
typedef long long swig_type_46;
typedef long long swig_type_47;
typedef long long swig_type_48;
typedef long long swig_type_49;
typedef long long swig_type_50;
typedef long long swig_type_51;
typedef long long swig_type_52;
typedef _gostring_ swig_type_53;
typedef _gostring_ swig_type_54;
typedef _gostring_ swig_type_55;
typedef _gostring_ swig_type_56;
typedef _gostring_ swig_type_57;
typedef _gostring_ swig_type_58;
typedef _gostring_ swig_type_59;
typedef _gostring_ swig_type_60;
typedef _gostring_ swig_type_61;
typedef _gostring_ swig_type_62;
typedef _gostring_ swig_type_63;
typedef _gostring_ swig_type_64;
typedef _gostring_ swig_type_65;
typedef _gostring_ swig_type_66;
typedef _gostring_ swig_type_67;
typedef _gostring_ swig_type_68;
typedef _gostring_ swig_type_69;
typedef _gostring_ swig_type_70;
typedef _gostring_ swig_type_71;
typedef _gostring_ swig_type_72;
typedef _gostring_ swig_type_73;
typedef _gostring_ swig_type_74;
typedef _gostring_ swig_type_75;
typedef _gostring_ swig_type_76;
typedef _gostring_ swig_type_77;
typedef _gostring_ swig_type_78;
typedef _gostring_ swig_type_79;
typedef _gostring_ swig_type_80;
typedef _gostring_ swig_type_81;
typedef _gostring_ swig_type_82;
typedef _gostring_ swig_type_83;
typedef _gostring_ swig_type_84;
typedef _gostring_ swig_type_85;
typedef _gostring_ swig_type_86;
typedef _gostring_ swig_type_87;
typedef _gostring_ swig_type_88;
typedef _gostring_ swig_type_89;
typedef _gostring_ swig_type_90;
typedef _gostring_ swig_type_91;
typedef _gostring_ swig_type_92;
typedef _gostring_ swig_type_93;
typedef _gostring_ swig_type_94;
typedef _gostring_ swig_type_95;
typedef _gostring_ swig_type_96;
typedef _gostring_ swig_type_97;
typedef _gostring_ swig_type_98;
typedef _gostring_ swig_type_99;
typedef _gostring_ swig_type_100;
typedef _gostring_ swig_type_101;
typedef _gostring_ swig_type_102;
typedef _gostring_ swig_type_103;
typedef _gostring_ swig_type_104;
typedef _gostring_ swig_type_105;
typedef _gostring_ swig_type_106;
typedef _gostring_ swig_type_107;
typedef _gostring_ swig_type_108;
typedef _gostring_ swig_type_109;
typedef _gostring_ swig_type_110;
typedef _gostring_ swig_type_111;
typedef _gostring_ swig_type_112;
typedef _gostring_ swig_type_113;
typedef _gostring_ swig_type_114;
typedef _gostring_ swig_type_115;
typedef _gostring_ swig_type_116;
typedef _gostring_ swig_type_117;
typedef _gostring_ swig_type_118;
typedef _gostring_ swig_type_119;
typedef _gostring_ swig_type_120;
typedef _gostring_ swig_type_121;
typedef _gostring_ swig_type_122;
typedef _gostring_ swig_type_123;
typedef _gostring_ swig_type_124;
typedef _gostring_ swig_type_125;
typedef _gostring_ swig_type_126;
typedef _gostring_ swig_type_127;
typedef _gostring_ swig_type_128;
typedef _gostring_ swig_type_129;
typedef _gostring_ swig_type_130;
typedef _gostring_ swig_type_131;
typedef _gostring_ swig_type_132;
typedef _gostring_ swig_type_133;
typedef _gostring_ swig_type_134;
typedef _gostring_ swig_type_135;
typedef _gostring_ swig_type_136;
typedef _gostring_ swig_type_137;
typedef _gostring_ swig_type_138;
typedef _gostring_ swig_type_139;
typedef _gostring_ swig_type_140;
typedef _gostring_ swig_type_141;
typedef _gostring_ swig_type_142;
typedef _gostring_ swig_type_143;
typedef _gostring_ swig_type_144;
typedef long long swig_type_145;
typedef long long swig_type_146;
typedef long long swig_type_147;
typedef long long swig_type_148;
typedef long long swig_type_149;
typedef long long swig_type_150;
typedef long long swig_type_151;
typedef long long swig_type_152;
typedef long long swig_type_153;
typedef long long swig_type_154;
typedef long long swig_type_155;
typedef long long swig_type_156;
typedef long long swig_type_157;
typedef long long swig_type_158;
typedef long long swig_type_159;
typedef long long swig_type_160;
typedef long long swig_type_161;
typedef long long swig_type_162;
typedef long long swig_type_163;
typedef long long swig_type_164;
typedef _gostring_ swig_type_165;
typedef _gostring_ swig_type_166;
typedef _gostring_ swig_type_167;
typedef _gostring_ swig_type_168;
typedef _gostring_ swig_type_169;
typedef _gostring_ swig_type_170;
typedef _gostring_ swig_type_171;
typedef _gostring_ swig_type_172;
typedef _gostring_ swig_type_173;
typedef _gostring_ swig_type_174;
typedef _gostring_ swig_type_175;
typedef _gostring_ swig_type_176;
typedef _gostring_ swig_type_177;
typedef _gostring_ swig_type_178;
typedef _gostring_ swig_type_179;
typedef _gostring_ swig_type_180;
typedef _gostring_ swig_type_181;
typedef _gostring_ swig_type_182;
typedef _gostring_ swig_type_183;
typedef _gostring_ swig_type_184;
typedef _gostring_ swig_type_185;
typedef _gostring_ swig_type_186;
typedef _gostring_ swig_type_187;
typedef _gostring_ swig_type_188;
typedef _gostring_ swig_type_189;
typedef _gostring_ swig_type_190;
typedef _gostring_ swig_type_191;
typedef _gostring_ swig_type_192;
typedef _gostring_ swig_type_193;
typedef _gostring_ swig_type_194;
typedef _gostring_ swig_type_195;
typedef _gostring_ swig_type_196;
typedef _gostring_ swig_type_197;
typedef _gostring_ swig_type_198;
typedef _gostring_ swig_type_199;
typedef _gostring_ swig_type_200;
typedef _gostring_ swig_type_201;
typedef _gostring_ swig_type_202;
typedef _gostring_ swig_type_203;
typedef _gostring_ swig_type_204;
typedef _gostring_ swig_type_205;
typedef _gostring_ swig_type_206;
typedef long long swig_type_207;
typedef long long swig_type_208;
extern void _wrap_Swig_free_ccapi_00042a34e9364138(uintptr_t arg1);
extern uintptr_t _wrap_Swig_malloc_ccapi_00042a34e9364138(swig_intgo arg1);
extern uintptr_t _wrap_new_MapStringString__SWIG_0_ccapi_00042a34e9364138(void);
extern uintptr_t _wrap_new_MapStringString__SWIG_1_ccapi_00042a34e9364138(uintptr_t arg1);
extern swig_intgo _wrap_MapStringString_size_ccapi_00042a34e9364138(uintptr_t arg1);
extern _Bool _wrap_MapStringString_empty_ccapi_00042a34e9364138(uintptr_t arg1);
extern void _wrap_MapStringString_clear_ccapi_00042a34e9364138(uintptr_t arg1);
extern swig_type_1 _wrap_MapStringString_get_ccapi_00042a34e9364138(uintptr_t arg1, swig_type_2 arg2);
extern void _wrap_MapStringString_set_ccapi_00042a34e9364138(uintptr_t arg1, swig_type_3 arg2, swig_type_4 arg3);
extern void _wrap_MapStringString_del_ccapi_00042a34e9364138(uintptr_t arg1, swig_type_5 arg2);
extern _Bool _wrap_MapStringString_has_key_ccapi_00042a34e9364138(uintptr_t arg1, swig_type_6 arg2);
extern void _wrap_delete_MapStringString_ccapi_00042a34e9364138(uintptr_t arg1);
extern uintptr_t _wrap_new_MapIntString__SWIG_0_ccapi_00042a34e9364138(void);
extern uintptr_t _wrap_new_MapIntString__SWIG_1_ccapi_00042a34e9364138(uintptr_t arg1);
extern swig_intgo _wrap_MapIntString_size_ccapi_00042a34e9364138(uintptr_t arg1);
extern _Bool _wrap_MapIntString_empty_ccapi_00042a34e9364138(uintptr_t arg1);
extern void _wrap_MapIntString_clear_ccapi_00042a34e9364138(uintptr_t arg1);
extern swig_type_7 _wrap_MapIntString_get_ccapi_00042a34e9364138(uintptr_t arg1, swig_intgo arg2);
extern void _wrap_MapIntString_set_ccapi_00042a34e9364138(uintptr_t arg1, swig_intgo arg2, swig_type_8 arg3);
extern void _wrap_MapIntString_del_ccapi_00042a34e9364138(uintptr_t arg1, swig_intgo arg2);
extern _Bool _wrap_MapIntString_has_key_ccapi_00042a34e9364138(uintptr_t arg1, swig_intgo arg2);
extern void _wrap_delete_MapIntString_ccapi_00042a34e9364138(uintptr_t arg1);
extern uintptr_t _wrap_new_PairIntString__SWIG_0_ccapi_00042a34e9364138(void);
extern uintptr_t _wrap_new_PairIntString__SWIG_1_ccapi_00042a34e9364138(swig_intgo arg1, swig_type_9 arg2);
extern uintptr_t _wrap_new_PairIntString__SWIG_2_ccapi_00042a34e9364138(uintptr_t arg1);
extern void _wrap_PairIntString_first_set_ccapi_00042a34e9364138(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_PairIntString_first_get_ccapi_00042a34e9364138(uintptr_t arg1);
extern void _wrap_PairIntString_second_set_ccapi_00042a34e9364138(uintptr_t arg1, swig_type_10 arg2);
extern swig_type_11 _wrap_PairIntString_second_get_ccapi_00042a34e9364138(uintptr_t arg1);
extern void _wrap_delete_PairIntString_ccapi_00042a34e9364138(uintptr_t arg1);
extern uintptr_t _wrap_new_PairLongLongLongLong__SWIG_0_ccapi_00042a34e9364138(void);
extern uintptr_t _wrap_new_PairLongLongLongLong__SWIG_1_ccapi_00042a34e9364138(swig_type_12 arg1, swig_type_13 arg2);
extern uintptr_t _wrap_new_PairLongLongLongLong__SWIG_2_ccapi_00042a34e9364138(uintptr_t arg1);
extern void _wrap_PairLongLongLongLong_first_set_ccapi_00042a34e9364138(uintptr_t arg1, swig_type_14 arg2);
extern swig_type_15 _wrap_PairLongLongLongLong_first_get_ccapi_00042a34e9364138(uintptr_t arg1);
extern void _wrap_PairLongLongLongLong_second_set_ccapi_00042a34e9364138(uintptr_t arg1, swig_type_16 arg2);
extern swig_type_17 _wrap_PairLongLongLongLong_second_get_ccapi_00042a34e9364138(uintptr_t arg1);
extern void _wrap_delete_PairLongLongLongLong_ccapi_00042a34e9364138(uintptr_t arg1);
extern uintptr_t _wrap_new_VectorPairIntString__SWIG_0_ccapi_00042a34e9364138(void);
extern uintptr_t _wrap_new_VectorPairIntString__SWIG_1_ccapi_00042a34e9364138(swig_type_18 arg1);
extern uintptr_t _wrap_new_VectorPairIntString__SWIG_2_ccapi_00042a34e9364138(uintptr_t arg1);
extern swig_type_19 _wrap_VectorPairIntString_size_ccapi_00042a34e9364138(uintptr_t arg1);
extern swig_type_20 _wrap_VectorPairIntString_capacity_ccapi_00042a34e9364138(uintptr_t arg1);
extern void _wrap_VectorPairIntString_reserve_ccapi_00042a34e9364138(uintptr_t arg1, swig_type_21 arg2);
extern _Bool _wrap_VectorPairIntString_isEmpty_ccapi_00042a34e9364138(uintptr_t arg1);
extern void _wrap_VectorPairIntString_clear_ccapi_00042a34e9364138(uintptr_t arg1);
extern void _wrap_VectorPairIntString_add_ccapi_00042a34e9364138(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_VectorPairIntString_get_ccapi_00042a34e9364138(uintptr_t arg1, swig_intgo arg2);
extern void _wrap_VectorPairIntString_set_ccapi_00042a34e9364138(uintptr_t arg1, swig_intgo arg2, uintptr_t arg3);
extern void _wrap_delete_VectorPairIntString_ccapi_00042a34e9364138(uintptr_t arg1);
extern uintptr_t _wrap_new_ElementList__SWIG_0_ccapi_00042a34e9364138(void);
extern uintptr_t _wrap_new_ElementList__SWIG_1_ccapi_00042a34e9364138(swig_type_22 arg1);
extern uintptr_t _wrap_new_ElementList__SWIG_2_ccapi_00042a34e9364138(uintptr_t arg1);
extern swig_type_23 _wrap_ElementList_size_ccapi_00042a34e9364138(uintptr_t arg1);
extern swig_type_24 _wrap_ElementList_capacity_ccapi_00042a34e9364138(uintptr_t arg1);
extern void _wrap_ElementList_reserve_ccapi_00042a34e9364138(uintptr_t arg1, swig_type_25 arg2);
extern _Bool _wrap_ElementList_isEmpty_ccapi_00042a34e9364138(uintptr_t arg1);
extern void _wrap_ElementList_clear_ccapi_00042a34e9364138(uintptr_t arg1);
extern void _wrap_ElementList_add_ccapi_00042a34e9364138(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_ElementList_get_ccapi_00042a34e9364138(uintptr_t arg1, swig_intgo arg2);
extern void _wrap_ElementList_set_ccapi_00042a34e9364138(uintptr_t arg1, swig_intgo arg2, uintptr_t arg3);
extern void _wrap_delete_ElementList_ccapi_00042a34e9364138(uintptr_t arg1);
extern uintptr_t _wrap_new_VectorString__SWIG_0_ccapi_00042a34e9364138(void);
extern uintptr_t _wrap_new_VectorString__SWIG_1_ccapi_00042a34e9364138(swig_type_26 arg1);
extern uintptr_t _wrap_new_VectorString__SWIG_2_ccapi_00042a34e9364138(uintptr_t arg1);
extern swig_type_27 _wrap_VectorString_size_ccapi_00042a34e9364138(uintptr_t arg1);
extern swig_type_28 _wrap_VectorString_capacity_ccapi_00042a34e9364138(uintptr_t arg1);
extern void _wrap_VectorString_reserve_ccapi_00042a34e9364138(uintptr_t arg1, swig_type_29 arg2);
extern _Bool _wrap_VectorString_isEmpty_ccapi_00042a34e9364138(uintptr_t arg1);
extern void _wrap_VectorString_clear_ccapi_00042a34e9364138(uintptr_t arg1);
extern void _wrap_VectorString_add_ccapi_00042a34e9364138(uintptr_t arg1, swig_type_30 arg2);
extern swig_type_31 _wrap_VectorString_get_ccapi_00042a34e9364138(uintptr_t arg1, swig_intgo arg2);
extern void _wrap_VectorString_set_ccapi_00042a34e9364138(uintptr_t arg1, swig_intgo arg2, swig_type_32 arg3);
extern void _wrap_delete_VectorString_ccapi_00042a34e9364138(uintptr_t arg1);
extern uintptr_t _wrap_new_MessageList__SWIG_0_ccapi_00042a34e9364138(void);
extern uintptr_t _wrap_new_MessageList__SWIG_1_ccapi_00042a34e9364138(swig_type_33 arg1);
extern uintptr_t _wrap_new_MessageList__SWIG_2_ccapi_00042a34e9364138(uintptr_t arg1);
extern swig_type_34 _wrap_MessageList_size_ccapi_00042a34e9364138(uintptr_t arg1);
extern swig_type_35 _wrap_MessageList_capacity_ccapi_00042a34e9364138(uintptr_t arg1);
extern void _wrap_MessageList_reserve_ccapi_00042a34e9364138(uintptr_t arg1, swig_type_36 arg2);
extern _Bool _wrap_MessageList_isEmpty_ccapi_00042a34e9364138(uintptr_t arg1);
extern void _wrap_MessageList_clear_ccapi_00042a34e9364138(uintptr_t arg1);
extern void _wrap_MessageList_add_ccapi_00042a34e9364138(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_MessageList_get_ccapi_00042a34e9364138(uintptr_t arg1, swig_intgo arg2);
extern void _wrap_MessageList_set_ccapi_00042a34e9364138(uintptr_t arg1, swig_intgo arg2, uintptr_t arg3);
extern void _wrap_delete_MessageList_ccapi_00042a34e9364138(uintptr_t arg1);
extern uintptr_t _wrap_new_MapStringMapStringString__SWIG_0_ccapi_00042a34e9364138(void);
extern uintptr_t _wrap_new_MapStringMapStringString__SWIG_1_ccapi_00042a34e9364138(uintptr_t arg1);
extern swig_intgo _wrap_MapStringMapStringString_size_ccapi_00042a34e9364138(uintptr_t arg1);
extern _Bool _wrap_MapStringMapStringString_empty_ccapi_00042a34e9364138(uintptr_t arg1);
extern void _wrap_MapStringMapStringString_clear_ccapi_00042a34e9364138(uintptr_t arg1);
extern uintptr_t _wrap_MapStringMapStringString_get_ccapi_00042a34e9364138(uintptr_t arg1, swig_type_37 arg2);
extern void _wrap_MapStringMapStringString_set_ccapi_00042a34e9364138(uintptr_t arg1, swig_type_38 arg2, uintptr_t arg3);
extern void _wrap_MapStringMapStringString_del_ccapi_00042a34e9364138(uintptr_t arg1, swig_type_39 arg2);
extern _Bool _wrap_MapStringMapStringString_has_key_ccapi_00042a34e9364138(uintptr_t arg1, swig_type_40 arg2);
extern void _wrap_delete_MapStringMapStringString_ccapi_00042a34e9364138(uintptr_t arg1);
extern uintptr_t _wrap_new_EventList__SWIG_0_ccapi_00042a34e9364138(void);
extern uintptr_t _wrap_new_EventList__SWIG_1_ccapi_00042a34e9364138(swig_type_41 arg1);
extern uintptr_t _wrap_new_EventList__SWIG_2_ccapi_00042a34e9364138(uintptr_t arg1);
extern swig_type_42 _wrap_EventList_size_ccapi_00042a34e9364138(uintptr_t arg1);
extern swig_type_43 _wrap_EventList_capacity_ccapi_00042a34e9364138(uintptr_t arg1);
extern void _wrap_EventList_reserve_ccapi_00042a34e9364138(uintptr_t arg1, swig_type_44 arg2);
extern _Bool _wrap_EventList_isEmpty_ccapi_00042a34e9364138(uintptr_t arg1);
extern void _wrap_EventList_clear_ccapi_00042a34e9364138(uintptr_t arg1);
extern void _wrap_EventList_add_ccapi_00042a34e9364138(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_EventList_get_ccapi_00042a34e9364138(uintptr_t arg1, swig_intgo arg2);
extern void _wrap_EventList_set_ccapi_00042a34e9364138(uintptr_t arg1, swig_intgo arg2, uintptr_t arg3);
extern void _wrap_delete_EventList_ccapi_00042a34e9364138(uintptr_t arg1);
extern uintptr_t _wrap_new_SubscriptionList__SWIG_0_ccapi_00042a34e9364138(void);
extern uintptr_t _wrap_new_SubscriptionList__SWIG_1_ccapi_00042a34e9364138(swig_type_45 arg1);
extern uintptr_t _wrap_new_SubscriptionList__SWIG_2_ccapi_00042a34e9364138(uintptr_t arg1);
extern swig_type_46 _wrap_SubscriptionList_size_ccapi_00042a34e9364138(uintptr_t arg1);
extern swig_type_47 _wrap_SubscriptionList_capacity_ccapi_00042a34e9364138(uintptr_t arg1);
extern void _wrap_SubscriptionList_reserve_ccapi_00042a34e9364138(uintptr_t arg1, swig_type_48 arg2);
extern _Bool _wrap_SubscriptionList_isEmpty_ccapi_00042a34e9364138(uintptr_t arg1);
extern void _wrap_SubscriptionList_clear_ccapi_00042a34e9364138(uintptr_t arg1);
extern void _wrap_SubscriptionList_add_ccapi_00042a34e9364138(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_SubscriptionList_get_ccapi_00042a34e9364138(uintptr_t arg1, swig_intgo arg2);
extern void _wrap_SubscriptionList_set_ccapi_00042a34e9364138(uintptr_t arg1, swig_intgo arg2, uintptr_t arg3);
extern void _wrap_delete_SubscriptionList_ccapi_00042a34e9364138(uintptr_t arg1);
extern uintptr_t _wrap_new_RequestList__SWIG_0_ccapi_00042a34e9364138(void);
extern uintptr_t _wrap_new_RequestList__SWIG_1_ccapi_00042a34e9364138(swig_type_49 arg1);
extern uintptr_t _wrap_new_RequestList__SWIG_2_ccapi_00042a34e9364138(uintptr_t arg1);
extern swig_type_50 _wrap_RequestList_size_ccapi_00042a34e9364138(uintptr_t arg1);
extern swig_type_51 _wrap_RequestList_capacity_ccapi_00042a34e9364138(uintptr_t arg1);
extern void _wrap_RequestList_reserve_ccapi_00042a34e9364138(uintptr_t arg1, swig_type_52 arg2);
extern _Bool _wrap_RequestList_isEmpty_ccapi_00042a34e9364138(uintptr_t arg1);
extern void _wrap_RequestList_clear_ccapi_00042a34e9364138(uintptr_t arg1);
extern void _wrap_RequestList_add_ccapi_00042a34e9364138(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_RequestList_get_ccapi_00042a34e9364138(uintptr_t arg1, swig_intgo arg2);
extern void _wrap_RequestList_set_ccapi_00042a34e9364138(uintptr_t arg1, swig_intgo arg2, uintptr_t arg3);
extern void _wrap_delete_RequestList_ccapi_00042a34e9364138(uintptr_t arg1);
extern uintptr_t _wrap_new_Element__SWIG_0_ccapi_00042a34e9364138(_Bool arg1);
extern uintptr_t _wrap_new_Element__SWIG_1_ccapi_00042a34e9364138(void);
extern void _wrap_Element_insert__SWIG_0_ccapi_00042a34e9364138(uintptr_t arg1, swig_type_53 arg2, swig_type_54 arg3);
extern void _wrap_Element_insert__SWIG_1_ccapi_00042a34e9364138(uintptr_t arg1, swig_intgo arg2, swig_type_55 arg3);
extern void _wrap_Element_emplace__SWIG_0_ccapi_00042a34e9364138(uintptr_t arg1, swig_voidp arg2, swig_voidp arg3);
extern void _wrap_Element_emplace__SWIG_1_ccapi_00042a34e9364138(uintptr_t arg1, swig_intgo arg2, swig_voidp arg3);
extern _Bool _wrap_Element_has__SWIG_0_ccapi_00042a34e9364138(uintptr_t arg1, swig_type_56 arg2);
extern _Bool _wrap_Element_has__SWIG_1_ccapi_00042a34e9364138(uintptr_t arg1, swig_intgo arg2);
extern swig_type_57 _wrap_Element_getValue__SWIG_0_ccapi_00042a34e9364138(uintptr_t arg1, swig_type_58 arg2, swig_type_59 arg3);
extern swig_type_60 _wrap_Element_getValue__SWIG_1_ccapi_00042a34e9364138(uintptr_t arg1, swig_type_61 arg2);
extern swig_type_62 _wrap_Element_getValue__SWIG_2_ccapi_00042a34e9364138(uintptr_t arg1, swig_intgo arg2, swig_type_63 arg3);
extern swig_type_64 _wrap_Element_getValue__SWIG_3_ccapi_00042a34e9364138(uintptr_t arg1, swig_intgo arg2);
extern swig_type_65 _wrap_Element_toString_ccapi_00042a34e9364138(uintptr_t arg1);
extern swig_type_66 _wrap_Element_toStringPretty__SWIG_0_ccapi_00042a34e9364138(uintptr_t arg1, swig_intgo arg2, swig_intgo arg3, _Bool arg4);
extern swig_type_67 _wrap_Element_toStringPretty__SWIG_1_ccapi_00042a34e9364138(uintptr_t arg1, swig_intgo arg2, swig_intgo arg3);
extern swig_type_68 _wrap_Element_toStringPretty__SWIG_2_ccapi_00042a34e9364138(uintptr_t arg1, swig_intgo arg2);
extern swig_type_69 _wrap_Element_toStringPretty__SWIG_3_ccapi_00042a34e9364138(uintptr_t arg1);
extern uintptr_t _wrap_Element_getNameValueMap_ccapi_00042a34e9364138(uintptr_t arg1);
extern uintptr_t _wrap_Element_getTagValueMap_ccapi_00042a34e9364138(uintptr_t arg1);
extern void _wrap_delete_Element_ccapi_00042a34e9364138(uintptr_t arg1);
extern swig_intgo _wrap_RecapType_UNKNOWN_Message_ccapi_00042a34e9364138(void);
extern swig_intgo _wrap_RecapType_SOLICITED_Message_ccapi_00042a34e9364138(void);
extern swig_intgo _wrap_RecapType_NONE_Message_ccapi_00042a34e9364138(void);
extern swig_type_70 _wrap_Message_recapTypeToString_ccapi_00042a34e9364138(swig_intgo arg1);
extern swig_intgo _wrap_Type_UNKNOWN_Message_ccapi_00042a34e9364138(void);
extern swig_intgo _wrap_Type_AUTHORIZATION_SUCCESS_Message_ccapi_00042a34e9364138(void);
extern swig_intgo _wrap_Type_AUTHORIZATION_FAILURE_Message_ccapi_00042a34e9364138(void);
extern swig_intgo _wrap_Type_MARKET_DATA_EVENTS_MARKET_DEPTH_Message_ccapi_00042a34e9364138(void);
extern swig_intgo _wrap_Type_MARKET_DATA_EVENTS_TRADE_Message_ccapi_00042a34e9364138(void);
extern swig_intgo _wrap_Type_MARKET_DATA_EVENTS_AGG_TRADE_Message_ccapi_00042a34e9364138(void);
extern swig_intgo _wrap_Type_MARKET_DATA_EVENTS_CANDLESTICK_Message_ccapi_00042a34e9364138(void);
extern swig_intgo _wrap_Type_EXECUTION_MANAGEMENT_EVENTS_ORDER_UPDATE_Message_ccapi_00042a34e9364138(void);
extern swig_intgo _wrap_Type_EXECUTION_MANAGEMENT_EVENTS_PRIVATE_TRADE_Message_ccapi_00042a34e9364138(void);
extern swig_intgo _wrap_Type_EXECUTION_MANAGEMENT_EVENTS_BALANCE_UPDATE_Message_ccapi_00042a34e9364138(void);
extern swig_intgo _wrap_Type_EXECUTION_MANAGEMENT_EVENTS_POSITION_UPDATE_Message_ccapi_00042a34e9364138(void);
extern swig_intgo _wrap_Type_SUBSCRIPTION_STARTED_Message_ccapi_00042a34e9364138(void);
extern swig_intgo _wrap_Type_SUBSCRIPTION_FAILURE_Message_ccapi_00042a34e9364138(void);
extern swig_intgo _wrap_Type_SESSION_CONNECTION_UP_Message_ccapi_00042a34e9364138(void);
extern swig_intgo _wrap_Type_SESSION_CONNECTION_DOWN_Message_ccapi_00042a34e9364138(void);
extern swig_intgo _wrap_Type_INCORRECT_STATE_FOUND_Message_ccapi_00042a34e9364138(void);
extern swig_intgo _wrap_Type_CREATE_ORDER_Message_ccapi_00042a34e9364138(void);
extern swig_intgo _wrap_Type_CANCEL_ORDER_Message_ccapi_00042a34e9364138(void);
extern swig_intgo _wrap_Type_GET_ORDER_Message_ccapi_00042a34e9364138(void);
extern swig_intgo _wrap_Type_GET_OPEN_ORDERS_Message_ccapi_00042a34e9364138(void);
extern swig_intgo _wrap_Type_CANCEL_OPEN_ORDERS_Message_ccapi_00042a34e9364138(void);
extern swig_intgo _wrap_Type_GET_ACCOUNTS_Message_ccapi_00042a34e9364138(void);
extern swig_intgo _wrap_Type_GET_ACCOUNT_BALANCES_Message_ccapi_00042a34e9364138(void);
extern swig_intgo _wrap_Type_GET_ACCOUNT_POSITIONS_Message_ccapi_00042a34e9364138(void);
extern swig_intgo _wrap_Type_GET_RECENT_TRADES_Message_ccapi_00042a34e9364138(void);
extern swig_intgo _wrap_Type_GET_HISTORICAL_TRADES_Message_ccapi_00042a34e9364138(void);
extern swig_intgo _wrap_Type_GET_RECENT_AGG_TRADES_Message_ccapi_00042a34e9364138(void);
extern swig_intgo _wrap_Type_GET_HISTORICAL_AGG_TRADES_Message_ccapi_00042a34e9364138(void);
extern swig_intgo _wrap_Type_GET_RECENT_CANDLESTICKS_Message_ccapi_00042a34e9364138(void);
extern swig_intgo _wrap_Type_GET_HISTORICAL_CANDLESTICKS_Message_ccapi_00042a34e9364138(void);
extern swig_intgo _wrap_Type_GET_MARKET_DEPTH_Message_ccapi_00042a34e9364138(void);
extern swig_intgo _wrap_Type_GET_INSTRUMENT_Message_ccapi_00042a34e9364138(void);
extern swig_intgo _wrap_Type_GET_INSTRUMENTS_Message_ccapi_00042a34e9364138(void);
extern swig_intgo _wrap_Type_RESPONSE_ERROR_Message_ccapi_00042a34e9364138(void);
extern swig_intgo _wrap_Type_REQUEST_FAILURE_Message_ccapi_00042a34e9364138(void);
extern swig_intgo _wrap_Type_GENERIC_ERROR_Message_ccapi_00042a34e9364138(void);
extern swig_intgo _wrap_Type_CUSTOM_Message_ccapi_00042a34e9364138(void);
extern swig_intgo _wrap_Type_FIX_Message_ccapi_00042a34e9364138(void);
extern swig_intgo _wrap_Type_FIX_FAILURE_Message_ccapi_00042a34e9364138(void);
extern swig_intgo _wrap_Type_GENERIC_PUBLIC_REQUEST_Message_ccapi_00042a34e9364138(void);
extern swig_intgo _wrap_Type_GENERIC_PUBLIC_SUBSCRIPTION_Message_ccapi_00042a34e9364138(void);
extern swig_intgo _wrap_Type_GENERIC_PRIVATE_REQUEST_Message_ccapi_00042a34e9364138(void);
extern swig_type_71 _wrap_Message_typeToString_ccapi_00042a34e9364138(swig_intgo arg1);
extern swig_type_72 _wrap_Message_toString_ccapi_00042a34e9364138(uintptr_t arg1);
extern swig_type_73 _wrap_Message_toStringPretty__SWIG_0_ccapi_00042a34e9364138(uintptr_t arg1, swig_intgo arg2, swig_intgo arg3, _Bool arg4);
extern swig_type_74 _wrap_Message_toStringPretty__SWIG_1_ccapi_00042a34e9364138(uintptr_t arg1, swig_intgo arg2, swig_intgo arg3);
extern swig_type_75 _wrap_Message_toStringPretty__SWIG_2_ccapi_00042a34e9364138(uintptr_t arg1, swig_intgo arg2);
extern swig_type_76 _wrap_Message_toStringPretty__SWIG_3_ccapi_00042a34e9364138(uintptr_t arg1);
extern uintptr_t _wrap_Message_getElementList_ccapi_00042a34e9364138(uintptr_t arg1);
extern void _wrap_Message_setElementList__SWIG_0_ccapi_00042a34e9364138(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_Message_setElementList__SWIG_1_ccapi_00042a34e9364138(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_Message_getCorrelationIdList_ccapi_00042a34e9364138(uintptr_t arg1);
extern uintptr_t _wrap_Message_getSecondaryCorrelationIdMap_ccapi_00042a34e9364138(uintptr_t arg1);
extern void _wrap_Message_setCorrelationIdList_ccapi_00042a34e9364138(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_Message_setSecondaryCorrelationIdMap_ccapi_00042a34e9364138(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_Message_getTime_ccapi_00042a34e9364138(uintptr_t arg1);
extern swig_type_77 _wrap_Message_getTimeISO_ccapi_00042a34e9364138(uintptr_t arg1);
extern uintptr_t _wrap_Message_getTimeUnix_ccapi_00042a34e9364138(uintptr_t arg1);
extern uintptr_t _wrap_Message_getTimePair_ccapi_00042a34e9364138(uintptr_t arg1);
extern void _wrap_Message_setTime_ccapi_00042a34e9364138(uintptr_t arg1, uintptr_t arg2);
extern swig_intgo _wrap_Message_getRecapType_ccapi_00042a34e9364138(uintptr_t arg1);
extern void _wrap_Message_setRecapType_ccapi_00042a34e9364138(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_Message_getType_ccapi_00042a34e9364138(uintptr_t arg1);
extern void _wrap_Message_setType_ccapi_00042a34e9364138(uintptr_t arg1, swig_intgo arg2);
extern uintptr_t _wrap_Message_getTimeReceived_ccapi_00042a34e9364138(uintptr_t arg1);
extern swig_type_78 _wrap_Message_getTimeReceivedISO_ccapi_00042a34e9364138(uintptr_t arg1);
extern uintptr_t _wrap_Message_getTimeReceivedUnix_ccapi_00042a34e9364138(uintptr_t arg1);
extern uintptr_t _wrap_Message_getTimeReceivedPair_ccapi_00042a34e9364138(uintptr_t arg1);
extern void _wrap_Message_setTimeReceived_ccapi_00042a34e9364138(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_new_Message_ccapi_00042a34e9364138(void);
extern void _wrap_delete_Message_ccapi_00042a34e9364138(uintptr_t arg1);
extern swig_intgo _wrap_Type_UNKNOWN_Event_ccapi_00042a34e9364138(void);
extern swig_intgo _wrap_Type_SESSION_STATUS_Event_ccapi_00042a34e9364138(void);
extern swig_intgo _wrap_Type_SUBSCRIPTION_STATUS_Event_ccapi_00042a34e9364138(void);
extern swig_intgo _wrap_Type_REQUEST_STATUS_Event_ccapi_00042a34e9364138(void);
extern swig_intgo _wrap_Type_RESPONSE_Event_ccapi_00042a34e9364138(void);
extern swig_intgo _wrap_Type_SUBSCRIPTION_DATA_Event_ccapi_00042a34e9364138(void);
extern swig_intgo _wrap_Type_AUTHORIZATION_STATUS_Event_ccapi_00042a34e9364138(void);
extern swig_intgo _wrap_Type_FIX_Event_ccapi_00042a34e9364138(void);
extern swig_intgo _wrap_Type_FIX_STATUS_Event_ccapi_00042a34e9364138(void);
extern swig_type_79 _wrap_Event_typeToString_ccapi_00042a34e9364138(swig_intgo arg1);
extern swig_type_80 _wrap_Event_toString_ccapi_00042a34e9364138(uintptr_t arg1);
extern swig_type_81 _wrap_Event_toStringPretty__SWIG_0_ccapi_00042a34e9364138(uintptr_t arg1, swig_intgo arg2, swig_intgo arg3, _Bool arg4);
extern swig_type_82 _wrap_Event_toStringPretty__SWIG_1_ccapi_00042a34e9364138(uintptr_t arg1, swig_intgo arg2, swig_intgo arg3);
extern swig_type_83 _wrap_Event_toStringPretty__SWIG_2_ccapi_00042a34e9364138(uintptr_t arg1, swig_intgo arg2);
extern swig_type_84 _wrap_Event_toStringPretty__SWIG_3_ccapi_00042a34e9364138(uintptr_t arg1);
extern uintptr_t _wrap_Event_getMessageList_ccapi_00042a34e9364138(uintptr_t arg1);
extern void _wrap_Event_addMessages__SWIG_0_ccapi_00042a34e9364138(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_Event_addMessages__SWIG_1_ccapi_00042a34e9364138(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_Event_addMessage__SWIG_0_ccapi_00042a34e9364138(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_Event_addMessage__SWIG_1_ccapi_00042a34e9364138(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_Event_setMessageList__SWIG_0_ccapi_00042a34e9364138(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_Event_setMessageList__SWIG_1_ccapi_00042a34e9364138(uintptr_t arg1, uintptr_t arg2);
extern swig_intgo _wrap_Event_getType_ccapi_00042a34e9364138(uintptr_t arg1);
extern void _wrap_Event_setType_ccapi_00042a34e9364138(uintptr_t arg1, swig_intgo arg2);
extern uintptr_t _wrap_new_Event_ccapi_00042a34e9364138(void);
extern void _wrap_delete_Event_ccapi_00042a34e9364138(uintptr_t arg1);
extern uintptr_t _wrap__swig_NewDirectorEventHandlerEventHandler_ccapi_00042a34e9364138(int);
extern void _wrap_DeleteDirectorEventHandler_ccapi_00042a34e9364138(uintptr_t arg1);
extern _Bool _wrap__swig_DirectorEventHandler_upcall_ProcessEvent_ccapi_00042a34e9364138(uintptr_t, uintptr_t event, uintptr_t sessionPtr);
extern void _wrap_delete_EventHandler_ccapi_00042a34e9364138(uintptr_t arg1);
extern _Bool _wrap_EventHandler_processEvent_ccapi_00042a34e9364138(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern uintptr_t _wrap_new_EventHandler_ccapi_00042a34e9364138(void);
extern uintptr_t _wrap_new_EventDispatcher__SWIG_0_ccapi_00042a34e9364138(swig_intgo arg1);
extern uintptr_t _wrap_new_EventDispatcher__SWIG_1_ccapi_00042a34e9364138(void);
extern void _wrap_delete_EventDispatcher_ccapi_00042a34e9364138(uintptr_t arg1);
extern void _wrap_EventDispatcher_dispatch_ccapi_00042a34e9364138(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_EventDispatcher_start_ccapi_00042a34e9364138(uintptr_t arg1);
extern void _wrap_EventDispatcher_resume_ccapi_00042a34e9364138(uintptr_t arg1);
extern void _wrap_EventDispatcher_pause_ccapi_00042a34e9364138(uintptr_t arg1);
extern void _wrap_EventDispatcher_stop_ccapi_00042a34e9364138(uintptr_t arg1);
extern uintptr_t _wrap_new_Subscription__SWIG_0_ccapi_00042a34e9364138(void);
extern uintptr_t _wrap_new_Subscription__SWIG_1_ccapi_00042a34e9364138(swig_type_85 arg1, swig_type_86 arg2, swig_type_87 arg3, swig_type_88 arg4, swig_type_89 arg5, uintptr_t arg6);
extern uintptr_t _wrap_new_Subscription__SWIG_2_ccapi_00042a34e9364138(swig_type_90 arg1, swig_type_91 arg2, swig_type_92 arg3, swig_type_93 arg4, swig_type_94 arg5);
extern uintptr_t _wrap_new_Subscription__SWIG_3_ccapi_00042a34e9364138(swig_type_95 arg1, swig_type_96 arg2, swig_type_97 arg3, swig_type_98 arg4);
extern uintptr_t _wrap_new_Subscription__SWIG_4_ccapi_00042a34e9364138(swig_type_99 arg1, swig_type_100 arg2, swig_type_101 arg3);
extern swig_type_102 _wrap_Subscription_toString_ccapi_00042a34e9364138(uintptr_t arg1);
extern swig_type_103 _wrap_Subscription_getCorrelationId_ccapi_00042a34e9364138(uintptr_t arg1);
extern swig_type_104 _wrap_Subscription_getExchange_ccapi_00042a34e9364138(uintptr_t arg1);
extern swig_type_105 _wrap_Subscription_getInstrument_ccapi_00042a34e9364138(uintptr_t arg1);
extern swig_type_106 _wrap_Subscription_getInstrumentType_ccapi_00042a34e9364138(uintptr_t arg1);
extern swig_type_107 _wrap_Subscription_getField_ccapi_00042a34e9364138(uintptr_t arg1);
extern swig_type_108 _wrap_Subscription_getRawOptions_ccapi_00042a34e9364138(uintptr_t arg1);
extern uintptr_t _wrap_Subscription_getOptionMap_ccapi_00042a34e9364138(uintptr_t arg1);
extern uintptr_t _wrap_Subscription_getCredential_ccapi_00042a34e9364138(uintptr_t arg1);
extern swig_type_109 _wrap_Subscription_getServiceName_ccapi_00042a34e9364138(uintptr_t arg1);
extern uintptr_t _wrap_Subscription_getInstrumentSet_ccapi_00042a34e9364138(uintptr_t arg1);
extern uintptr_t _wrap_Subscription_getFieldSet_ccapi_00042a34e9364138(uintptr_t arg1);
extern swig_type_110 _wrap_Subscription_getSerializedOptions_ccapi_00042a34e9364138(uintptr_t arg1);
extern swig_type_111 _wrap_Subscription_getSerializedCredential_ccapi_00042a34e9364138(uintptr_t arg1);
extern uintptr_t _wrap_Subscription_getTimeSent_ccapi_00042a34e9364138(uintptr_t arg1);
extern swig_type_112 _wrap_Subscription_getTimeSentISO_ccapi_00042a34e9364138(uintptr_t arg1);
extern uintptr_t _wrap_Subscription_getTimeSentPair_ccapi_00042a34e9364138(uintptr_t arg1);
extern swig_type_113 _wrap_Subscription_getMarginType_ccapi_00042a34e9364138(uintptr_t arg1);
extern void _wrap_Subscription_setTimeSent_ccapi_00042a34e9364138(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_Subscription_setInstrumentType_ccapi_00042a34e9364138(uintptr_t arg1, swig_type_114 arg2);
extern void _wrap_Subscription_setMarginType_ccapi_00042a34e9364138(uintptr_t arg1, swig_type_115 arg2);
extern swig_intgo _wrap_Status_UNKNOWN_Subscription_ccapi_00042a34e9364138(void);
extern swig_intgo _wrap_Status_SUBSCRIBING_Subscription_ccapi_00042a34e9364138(void);
extern swig_intgo _wrap_Status_SUBSCRIBED_Subscription_ccapi_00042a34e9364138(void);
extern swig_intgo _wrap_Status_UNSUBSCRIBING_Subscription_ccapi_00042a34e9364138(void);
extern swig_intgo _wrap_Status_UNSUBSCRIBED_Subscription_ccapi_00042a34e9364138(void);
extern swig_type_116 _wrap_Subscription_statusToString_ccapi_00042a34e9364138(swig_intgo arg1);
extern void _wrap_delete_Subscription_ccapi_00042a34e9364138(uintptr_t arg1);
extern swig_intgo _wrap_Operation_CUSTOM_Request_ccapi_00042a34e9364138(void);
extern swig_intgo _wrap_Operation_GENERIC_PUBLIC_REQUEST_Request_ccapi_00042a34e9364138(void);
extern swig_intgo _wrap_Operation_GENERIC_PRIVATE_REQUEST_Request_ccapi_00042a34e9364138(void);
extern swig_intgo _wrap_Operation_FIX_Request_ccapi_00042a34e9364138(void);
extern swig_intgo _wrap_Operation_GET_RECENT_TRADES_Request_ccapi_00042a34e9364138(void);
extern swig_intgo _wrap_Operation_GET_HISTORICAL_TRADES_Request_ccapi_00042a34e9364138(void);
extern swig_intgo _wrap_Operation_GET_RECENT_AGG_TRADES_Request_ccapi_00042a34e9364138(void);
extern swig_intgo _wrap_Operation_GET_HISTORICAL_AGG_TRADES_Request_ccapi_00042a34e9364138(void);
extern swig_intgo _wrap_Operation_GET_RECENT_CANDLESTICKS_Request_ccapi_00042a34e9364138(void);
extern swig_intgo _wrap_Operation_GET_HISTORICAL_CANDLESTICKS_Request_ccapi_00042a34e9364138(void);
extern swig_intgo _wrap_Operation_GET_MARKET_DEPTH_Request_ccapi_00042a34e9364138(void);
extern swig_intgo _wrap_Operation_GET_INSTRUMENT_Request_ccapi_00042a34e9364138(void);
extern swig_intgo _wrap_Operation_GET_INSTRUMENTS_Request_ccapi_00042a34e9364138(void);
extern swig_intgo _wrap_Operation_CREATE_ORDER_Request_ccapi_00042a34e9364138(void);
extern swig_intgo _wrap_Operation_CANCEL_ORDER_Request_ccapi_00042a34e9364138(void);
extern swig_intgo _wrap_Operation_GET_ORDER_Request_ccapi_00042a34e9364138(void);
extern swig_intgo _wrap_Operation_GET_OPEN_ORDERS_Request_ccapi_00042a34e9364138(void);
extern swig_intgo _wrap_Operation_CANCEL_OPEN_ORDERS_Request_ccapi_00042a34e9364138(void);
extern swig_intgo _wrap_Operation_GET_ACCOUNTS_Request_ccapi_00042a34e9364138(void);
extern swig_intgo _wrap_Operation_GET_ACCOUNT_BALANCES_Request_ccapi_00042a34e9364138(void);
extern swig_intgo _wrap_Operation_GET_ACCOUNT_POSITIONS_Request_ccapi_00042a34e9364138(void);
extern swig_type_117 _wrap_Request_operationToString_ccapi_00042a34e9364138(swig_intgo arg1);
extern uintptr_t _wrap_new_Request__SWIG_0_ccapi_00042a34e9364138(void);
extern uintptr_t _wrap_new_Request__SWIG_1_ccapi_00042a34e9364138(swig_intgo arg1, swig_type_118 arg2, swig_type_119 arg3, swig_type_120 arg4, uintptr_t arg5);
extern uintptr_t _wrap_new_Request__SWIG_2_ccapi_00042a34e9364138(swig_intgo arg1, swig_type_121 arg2, swig_type_122 arg3, swig_type_123 arg4);
extern uintptr_t _wrap_new_Request__SWIG_3_ccapi_00042a34e9364138(swig_intgo arg1, swig_type_124 arg2, swig_type_125 arg3);
extern uintptr_t _wrap_new_Request__SWIG_4_ccapi_00042a34e9364138(swig_intgo arg1, swig_type_126 arg2);
extern swig_type_127 _wrap_Request_toString_ccapi_00042a34e9364138(uintptr_t arg1);
extern swig_type_128 _wrap_Request_getCorrelationId_ccapi_00042a34e9364138(uintptr_t arg1);
extern swig_type_129 _wrap_Request_getSecondaryCorrelationId_ccapi_00042a34e9364138(uintptr_t arg1);
extern swig_type_130 _wrap_Request_getExchange_ccapi_00042a34e9364138(uintptr_t arg1);
extern swig_type_131 _wrap_Request_getMarginType_ccapi_00042a34e9364138(uintptr_t arg1);
extern swig_type_132 _wrap_Request_getInstrument_ccapi_00042a34e9364138(uintptr_t arg1);
extern uintptr_t _wrap_Request_getCredential_ccapi_00042a34e9364138(uintptr_t arg1);
extern swig_type_133 _wrap_Request_getServiceName_ccapi_00042a34e9364138(uintptr_t arg1);
extern void _wrap_Request_appendParam_ccapi_00042a34e9364138(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_Request_appendParamFix_ccapi_00042a34e9364138(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_Request_appendParamListFix_ccapi_00042a34e9364138(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_Request_setParamListFix_ccapi_00042a34e9364138(uintptr_t arg1, uintptr_t arg2);
extern swig_intgo _wrap_Request_getOperation_ccapi_00042a34e9364138(uintptr_t arg1);
extern uintptr_t _wrap_Request_getParamList_ccapi_00042a34e9364138(uintptr_t arg1);
extern uintptr_t _wrap_Request_getParamListFix_ccapi_00042a34e9364138(uintptr_t arg1);
extern void _wrap_Request_setParamList_ccapi_00042a34e9364138(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_Request_getFirstParamWithDefault__SWIG_0_ccapi_00042a34e9364138(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_Request_getFirstParamWithDefault__SWIG_1_ccapi_00042a34e9364138(uintptr_t arg1);
extern uintptr_t _wrap_Request_getTimeSent_ccapi_00042a34e9364138(uintptr_t arg1);
extern swig_type_134 _wrap_Request_getTimeSentISO_ccapi_00042a34e9364138(uintptr_t arg1);
extern uintptr_t _wrap_Request_getTimeSentPair_ccapi_00042a34e9364138(uintptr_t arg1);
extern void _wrap_Request_setTimeSent_ccapi_00042a34e9364138(uintptr_t arg1, uintptr_t arg2);
extern swig_intgo _wrap_Request_getIndex_ccapi_00042a34e9364138(uintptr_t arg1);
extern swig_type_135 _wrap_Request_getLocalIpAddress_ccapi_00042a34e9364138(uintptr_t arg1);
extern swig_type_136 _wrap_Request_getBaseUrl_ccapi_00042a34e9364138(uintptr_t arg1);
extern swig_type_137 _wrap_Request_getHost_ccapi_00042a34e9364138(uintptr_t arg1);
extern swig_type_138 _wrap_Request_getPort_ccapi_00042a34e9364138(uintptr_t arg1);
extern void _wrap_Request_setIndex_ccapi_00042a34e9364138(uintptr_t arg1, swig_intgo arg2);
extern void _wrap_Request_setCredential_ccapi_00042a34e9364138(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_Request_setCorrelationId_ccapi_00042a34e9364138(uintptr_t arg1, swig_type_139 arg2);
extern void _wrap_Request_setSecondaryCorrelationId_ccapi_00042a34e9364138(uintptr_t arg1, swig_type_140 arg2);
extern void _wrap_Request_setMarginType_ccapi_00042a34e9364138(uintptr_t arg1, swig_type_141 arg2);
extern void _wrap_Request_setLocalIpAddress_ccapi_00042a34e9364138(uintptr_t arg1, swig_type_142 arg2);
extern void _wrap_Request_setBaseUrl_ccapi_00042a34e9364138(uintptr_t arg1, swig_type_143 arg2);
extern void _wrap_Request_setBaseUrlParts_ccapi_00042a34e9364138(uintptr_t arg1);
extern void _wrap_delete_Request_ccapi_00042a34e9364138(uintptr_t arg1);
extern swig_type_144 _wrap_SessionOptions_toString_ccapi_00042a34e9364138(uintptr_t arg1);
extern void _wrap_SessionOptions_enableCheckSequence_set_ccapi_00042a34e9364138(uintptr_t arg1, _Bool arg2);
extern _Bool _wrap_SessionOptions_enableCheckSequence_get_ccapi_00042a34e9364138(uintptr_t arg1);
extern void _wrap_SessionOptions_enableCheckOrderBookChecksum_set_ccapi_00042a34e9364138(uintptr_t arg1, _Bool arg2);
extern _Bool _wrap_SessionOptions_enableCheckOrderBookChecksum_get_ccapi_00042a34e9364138(uintptr_t arg1);
extern void _wrap_SessionOptions_enableCheckOrderBookCrossed_set_ccapi_00042a34e9364138(uintptr_t arg1, _Bool arg2);
extern _Bool _wrap_SessionOptions_enableCheckOrderBookCrossed_get_ccapi_00042a34e9364138(uintptr_t arg1);
extern void _wrap_SessionOptions_enableCheckPingPongWebsocketProtocolLevel_set_ccapi_00042a34e9364138(uintptr_t arg1, _Bool arg2);
extern _Bool _wrap_SessionOptions_enableCheckPingPongWebsocketProtocolLevel_get_ccapi_00042a34e9364138(uintptr_t arg1);
extern void _wrap_SessionOptions_enableCheckPingPongWebsocketApplicationLevel_set_ccapi_00042a34e9364138(uintptr_t arg1, _Bool arg2);
extern _Bool _wrap_SessionOptions_enableCheckPingPongWebsocketApplicationLevel_get_ccapi_00042a34e9364138(uintptr_t arg1);
extern void _wrap_SessionOptions_enableCheckHeartbeatFix_set_ccapi_00042a34e9364138(uintptr_t arg1, _Bool arg2);
extern _Bool _wrap_SessionOptions_enableCheckHeartbeatFix_get_ccapi_00042a34e9364138(uintptr_t arg1);
extern void _wrap_SessionOptions_pingWebsocketProtocolLevelIntervalMilliseconds_set_ccapi_00042a34e9364138(uintptr_t arg1, swig_type_145 arg2);
extern swig_type_146 _wrap_SessionOptions_pingWebsocketProtocolLevelIntervalMilliseconds_get_ccapi_00042a34e9364138(uintptr_t arg1);
extern void _wrap_SessionOptions_pongWebsocketProtocolLevelTimeoutMilliseconds_set_ccapi_00042a34e9364138(uintptr_t arg1, swig_type_147 arg2);
extern swig_type_148 _wrap_SessionOptions_pongWebsocketProtocolLevelTimeoutMilliseconds_get_ccapi_00042a34e9364138(uintptr_t arg1);
extern void _wrap_SessionOptions_pingWebsocketApplicationLevelIntervalMilliseconds_set_ccapi_00042a34e9364138(uintptr_t arg1, swig_type_149 arg2);
extern swig_type_150 _wrap_SessionOptions_pingWebsocketApplicationLevelIntervalMilliseconds_get_ccapi_00042a34e9364138(uintptr_t arg1);
extern void _wrap_SessionOptions_pongWebsocketApplicationLevelTimeoutMilliseconds_set_ccapi_00042a34e9364138(uintptr_t arg1, swig_type_151 arg2);
extern swig_type_152 _wrap_SessionOptions_pongWebsocketApplicationLevelTimeoutMilliseconds_get_ccapi_00042a34e9364138(uintptr_t arg1);
extern void _wrap_SessionOptions_heartbeatFixIntervalMilliseconds_set_ccapi_00042a34e9364138(uintptr_t arg1, swig_type_153 arg2);
extern swig_type_154 _wrap_SessionOptions_heartbeatFixIntervalMilliseconds_get_ccapi_00042a34e9364138(uintptr_t arg1);
extern void _wrap_SessionOptions_heartbeatFixTimeoutMilliseconds_set_ccapi_00042a34e9364138(uintptr_t arg1, swig_type_155 arg2);
extern swig_type_156 _wrap_SessionOptions_heartbeatFixTimeoutMilliseconds_get_ccapi_00042a34e9364138(uintptr_t arg1);
extern void _wrap_SessionOptions_maxEventQueueSize_set_ccapi_00042a34e9364138(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_SessionOptions_maxEventQueueSize_get_ccapi_00042a34e9364138(uintptr_t arg1);
extern void _wrap_SessionOptions_httpMaxNumRetry_set_ccapi_00042a34e9364138(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_SessionOptions_httpMaxNumRetry_get_ccapi_00042a34e9364138(uintptr_t arg1);
extern void _wrap_SessionOptions_httpMaxNumRedirect_set_ccapi_00042a34e9364138(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_SessionOptions_httpMaxNumRedirect_get_ccapi_00042a34e9364138(uintptr_t arg1);
extern void _wrap_SessionOptions_httpRequestTimeoutMilliseconds_set_ccapi_00042a34e9364138(uintptr_t arg1, swig_type_157 arg2);
extern swig_type_158 _wrap_SessionOptions_httpRequestTimeoutMilliseconds_get_ccapi_00042a34e9364138(uintptr_t arg1);
extern void _wrap_SessionOptions_httpConnectionPoolMaxSize_set_ccapi_00042a34e9364138(uintptr_t arg1, swig_intgo arg2);
extern swig_intgo _wrap_SessionOptions_httpConnectionPoolMaxSize_get_ccapi_00042a34e9364138(uintptr_t arg1);
extern void _wrap_SessionOptions_httpConnectionKeepAliveTimeoutSeconds_set_ccapi_00042a34e9364138(uintptr_t arg1, swig_type_159 arg2);
extern swig_type_160 _wrap_SessionOptions_httpConnectionKeepAliveTimeoutSeconds_get_ccapi_00042a34e9364138(uintptr_t arg1);
extern void _wrap_SessionOptions_enableOneHttpConnectionPerRequest_set_ccapi_00042a34e9364138(uintptr_t arg1, _Bool arg2);
extern _Bool _wrap_SessionOptions_enableOneHttpConnectionPerRequest_get_ccapi_00042a34e9364138(uintptr_t arg1);
extern void _wrap_SessionOptions_websocketConnectTimeoutMilliseconds_set_ccapi_00042a34e9364138(uintptr_t arg1, swig_type_161 arg2);
extern swig_type_162 _wrap_SessionOptions_websocketConnectTimeoutMilliseconds_get_ccapi_00042a34e9364138(uintptr_t arg1);
extern uintptr_t _wrap_new_SessionOptions_ccapi_00042a34e9364138(void);
extern void _wrap_delete_SessionOptions_ccapi_00042a34e9364138(uintptr_t arg1);
extern uintptr_t _wrap_new_SessionConfigs__SWIG_0_ccapi_00042a34e9364138(uintptr_t arg1);
extern uintptr_t _wrap_new_SessionConfigs__SWIG_1_ccapi_00042a34e9364138(void);
extern uintptr_t _wrap_SessionConfigs_getExchangeFieldMap_ccapi_00042a34e9364138(uintptr_t arg1);
extern uintptr_t _wrap_SessionConfigs_getExchangeFieldWebsocketChannelMap_ccapi_00042a34e9364138(uintptr_t arg1);
extern uintptr_t _wrap_SessionConfigs_getUrlWebsocketBase_ccapi_00042a34e9364138(uintptr_t arg1);
extern uintptr_t _wrap_SessionConfigs_getUrlRestBase_ccapi_00042a34e9364138(uintptr_t arg1);
extern uintptr_t _wrap_SessionConfigs_getUrlFixBase_ccapi_00042a34e9364138(uintptr_t arg1);
extern uintptr_t _wrap_SessionConfigs_getInitialSequenceByExchangeMap_ccapi_00042a34e9364138(uintptr_t arg1);
extern uintptr_t _wrap_SessionConfigs_getCredential_ccapi_00042a34e9364138(uintptr_t arg1);
extern void _wrap_SessionConfigs_setUrlWebsocketBase_ccapi_00042a34e9364138(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_SessionConfigs_setUrlRestBase_ccapi_00042a34e9364138(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_SessionConfigs_setUrlFixBase_ccapi_00042a34e9364138(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_SessionConfigs_setCredential_ccapi_00042a34e9364138(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_delete_SessionConfigs_ccapi_00042a34e9364138(uintptr_t arg1);
extern uintptr_t _wrap_new_Session__SWIG_0_ccapi_00042a34e9364138(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, uintptr_t arg4);
extern uintptr_t _wrap_new_Session__SWIG_1_ccapi_00042a34e9364138(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern uintptr_t _wrap_new_Session__SWIG_2_ccapi_00042a34e9364138(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_new_Session__SWIG_3_ccapi_00042a34e9364138(uintptr_t arg1);
extern uintptr_t _wrap_new_Session__SWIG_4_ccapi_00042a34e9364138(void);
extern void _wrap_delete_Session_ccapi_00042a34e9364138(uintptr_t arg1);
extern void _wrap_Session_start_ccapi_00042a34e9364138(uintptr_t arg1);
extern void _wrap_Session_stop_ccapi_00042a34e9364138(uintptr_t arg1);
extern void _wrap_Session_subscribe__SWIG_0_ccapi_00042a34e9364138(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_Session_subscribe__SWIG_1_ccapi_00042a34e9364138(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_Session_subscribeByFix__SWIG_0_ccapi_00042a34e9364138(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_Session_subscribeByFix__SWIG_1_ccapi_00042a34e9364138(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_Session_onEvent_ccapi_00042a34e9364138(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern void _wrap_Session_sendRequestByFix__SWIG_0_ccapi_00042a34e9364138(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_Session_sendRequestByFix__SWIG_1_ccapi_00042a34e9364138(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_Session_sendRequestByWebsocket__SWIG_0_ccapi_00042a34e9364138(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_Session_sendRequestByWebsocket__SWIG_1_ccapi_00042a34e9364138(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_Session_sendRequest__SWIG_0_ccapi_00042a34e9364138(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, swig_type_163 arg4);
extern void _wrap_Session_sendRequest__SWIG_1_ccapi_00042a34e9364138(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern void _wrap_Session_sendRequest__SWIG_2_ccapi_00042a34e9364138(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_Session_sendRequest__SWIG_3_ccapi_00042a34e9364138(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, swig_type_164 arg4);
extern void _wrap_Session_sendRequest__SWIG_4_ccapi_00042a34e9364138(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern void _wrap_Session_sendRequest__SWIG_5_ccapi_00042a34e9364138(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_Session_getEventQueue_ccapi_00042a34e9364138(uintptr_t arg1);
extern void _wrap_Session_onError__SWIG_0_ccapi_00042a34e9364138(uintptr_t arg1, swig_intgo arg2, swig_intgo arg3, swig_type_165 arg4, uintptr_t arg5);
extern void _wrap_Session_onError__SWIG_1_ccapi_00042a34e9364138(uintptr_t arg1, swig_intgo arg2, swig_intgo arg3, swig_type_166 arg4);
extern uintptr_t _wrap__swig_NewDirectorLoggerLogger_ccapi_00042a34e9364138(int);
extern void _wrap_DeleteDirectorLogger_ccapi_00042a34e9364138(uintptr_t arg1);
extern void _wrap__swig_DirectorLogger_upcall_LogMessage_ccapi_00042a34e9364138(uintptr_t, swig_type_167 severity, swig_type_168 threadId, swig_type_169 timeISO, swig_type_170 fileName, swig_type_171 lineNumber, swig_type_172 message);
extern void _wrap_Logger_LOG_SEVERITY_FATAL_set_ccapi_00042a34e9364138(uintptr_t arg1, swig_type_173 arg2);
extern swig_type_174 _wrap_Logger_LOG_SEVERITY_FATAL_get_ccapi_00042a34e9364138(uintptr_t arg1);
extern void _wrap_Logger_LOG_SEVERITY_ERROR_set_ccapi_00042a34e9364138(uintptr_t arg1, swig_type_175 arg2);
extern swig_type_176 _wrap_Logger_LOG_SEVERITY_ERROR_get_ccapi_00042a34e9364138(uintptr_t arg1);
extern void _wrap_Logger_LOG_SEVERITY_WARN_set_ccapi_00042a34e9364138(uintptr_t arg1, swig_type_177 arg2);
extern swig_type_178 _wrap_Logger_LOG_SEVERITY_WARN_get_ccapi_00042a34e9364138(uintptr_t arg1);
extern void _wrap_Logger_LOG_SEVERITY_INFO_set_ccapi_00042a34e9364138(uintptr_t arg1, swig_type_179 arg2);
extern swig_type_180 _wrap_Logger_LOG_SEVERITY_INFO_get_ccapi_00042a34e9364138(uintptr_t arg1);
extern void _wrap_Logger_LOG_SEVERITY_DEBUG_set_ccapi_00042a34e9364138(uintptr_t arg1, swig_type_181 arg2);
extern swig_type_182 _wrap_Logger_LOG_SEVERITY_DEBUG_get_ccapi_00042a34e9364138(uintptr_t arg1);
extern void _wrap_Logger_LOG_SEVERITY_TRACE_set_ccapi_00042a34e9364138(uintptr_t arg1, swig_type_183 arg2);
extern swig_type_184 _wrap_Logger_LOG_SEVERITY_TRACE_get_ccapi_00042a34e9364138(uintptr_t arg1);
extern void _wrap_delete_Logger_ccapi_00042a34e9364138(uintptr_t arg1);
extern void _wrap_Logger_fatal_ccapi_00042a34e9364138(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, swig_type_185 arg4, swig_type_186 arg5, swig_type_187 arg6);
extern void _wrap_Logger_error_ccapi_00042a34e9364138(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, swig_type_188 arg4, swig_type_189 arg5, swig_type_190 arg6);
extern void _wrap_Logger_warn_ccapi_00042a34e9364138(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, swig_type_191 arg4, swig_type_192 arg5, swig_type_193 arg6);
extern void _wrap_Logger_info_ccapi_00042a34e9364138(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, swig_type_194 arg4, swig_type_195 arg5, swig_type_196 arg6);
extern void _wrap_Logger_debug_ccapi_00042a34e9364138(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, swig_type_197 arg4, swig_type_198 arg5, swig_type_199 arg6);
extern void _wrap_Logger_trace_ccapi_00042a34e9364138(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3, swig_type_200 arg4, swig_type_201 arg5, swig_type_202 arg6);
extern void _wrap_Logger_logger_set_ccapi_00042a34e9364138(uintptr_t arg1);
extern uintptr_t _wrap_Logger_logger_get_ccapi_00042a34e9364138(void);
extern void _wrap_Logger_logMessage_ccapi_00042a34e9364138(uintptr_t arg1, swig_type_167 arg2, swig_type_168 arg3, swig_type_169 arg4, swig_type_170 arg5, swig_type_171 arg6, swig_type_172 arg7);
extern uintptr_t _wrap_new_Logger_ccapi_00042a34e9364138(void);
extern void _wrap_EventQueue_EXCEPTION_QUEUE_FULL_set_ccapi_00042a34e9364138(uintptr_t arg1, swig_type_203 arg2);
extern swig_type_204 _wrap_EventQueue_EXCEPTION_QUEUE_FULL_get_ccapi_00042a34e9364138(uintptr_t arg1);
extern void _wrap_EventQueue_EXCEPTION_QUEUE_EMPTY_set_ccapi_00042a34e9364138(uintptr_t arg1, swig_type_205 arg2);
extern swig_type_206 _wrap_EventQueue_EXCEPTION_QUEUE_EMPTY_get_ccapi_00042a34e9364138(uintptr_t arg1);
extern uintptr_t _wrap_new_EventQueue__SWIG_0_ccapi_00042a34e9364138(swig_type_207 arg1);
extern uintptr_t _wrap_new_EventQueue__SWIG_1_ccapi_00042a34e9364138(void);
extern void _wrap_EventQueue_pushBack__SWIG_0_ccapi_00042a34e9364138(uintptr_t arg1, uintptr_t arg2);
extern void _wrap_EventQueue_pushBack__SWIG_1_ccapi_00042a34e9364138(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_EventQueue_popBack_ccapi_00042a34e9364138(uintptr_t arg1);
extern uintptr_t _wrap_EventQueue_purge_ccapi_00042a34e9364138(uintptr_t arg1);
extern void _wrap_EventQueue_removeAll_ccapi_00042a34e9364138(uintptr_t arg1, uintptr_t arg2);
extern swig_type_208 _wrap_EventQueue_size_ccapi_00042a34e9364138(uintptr_t arg1);
extern _Bool _wrap_EventQueue_empty_ccapi_00042a34e9364138(uintptr_t arg1);
extern void _wrap_delete_EventQueue_ccapi_00042a34e9364138(uintptr_t arg1);
#undef intgo
*/
import "C"

import "unsafe"
import _ "runtime/cgo"
import "sync"


type _ unsafe.Pointer



var Swig_escape_always_false bool
var Swig_escape_val interface{}


type _swig_fnptr *byte
type _swig_memberptr *byte


func getSwigcptr(v interface { Swigcptr() uintptr }) uintptr {
	if v == nil {
		return 0
	}
	return v.Swigcptr()
}


type _ sync.Mutex

//export cgo_panic__ccapi_00042a34e9364138
func cgo_panic__ccapi_00042a34e9364138(p *byte) {
	s := (*[1024]byte)(unsafe.Pointer(p))[:]
	for i, b := range s {
		if b == 0 {
			panic(string(s[:i]))
		}
	}
	panic(string(s))
}


type swig_gostring struct { p uintptr; n int }
func swigCopyString(s string) string {
  p := *(*swig_gostring)(unsafe.Pointer(&s))
  r := string((*[0x7fffffff]byte)(unsafe.Pointer(p.p))[:p.n])
  Swig_free(p.p)
  return r
}

func Swig_free(arg1 uintptr) {
	_swig_i_0 := arg1
	C._wrap_Swig_free_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0))
}

func Swig_malloc(arg1 int) (_swig_ret uintptr) {
	var swig_r uintptr
	_swig_i_0 := arg1
	swig_r = (uintptr)(C._wrap_Swig_malloc_ccapi_00042a34e9364138(C.swig_intgo(_swig_i_0)))
	return swig_r
}

type SwigcptrMapStringString uintptr

func (p SwigcptrMapStringString) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrMapStringString) SwigIsMapStringString() {
}

func NewMapStringString__SWIG_0() (_swig_ret MapStringString) {
	var swig_r MapStringString
	swig_r = (MapStringString)(SwigcptrMapStringString(C._wrap_new_MapStringString__SWIG_0_ccapi_00042a34e9364138()))
	return swig_r
}

func NewMapStringString__SWIG_1(arg1 MapStringString) (_swig_ret MapStringString) {
	var swig_r MapStringString
	_swig_i_0 := getSwigcptr(arg1)
	swig_r = (MapStringString)(SwigcptrMapStringString(C._wrap_new_MapStringString__SWIG_1_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func NewMapStringString(a ...interface{}) MapStringString {
	argc := len(a)
	if argc == 0 {
		return NewMapStringString__SWIG_0()
	}
	if argc == 1 {
		return NewMapStringString__SWIG_1(a[0].(MapStringString))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrMapStringString) Size() (_swig_ret uint) {
	var swig_r uint
	_swig_i_0 := arg1
	swig_r = (uint)(C._wrap_MapStringString_size_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrMapStringString) Empty() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_MapStringString_empty_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrMapStringString) Clear() {
	_swig_i_0 := arg1
	C._wrap_MapStringString_clear_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrMapStringString) Get(arg2 string) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r_p := C._wrap_MapStringString_get_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), *(*C.swig_type_2)(unsafe.Pointer(&_swig_i_1)))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (arg1 SwigcptrMapStringString) Set(arg2 string, arg3 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_MapStringString_set_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), *(*C.swig_type_3)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_4)(unsafe.Pointer(&_swig_i_2)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
}

func (arg1 SwigcptrMapStringString) Del(arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_MapStringString_del_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), *(*C.swig_type_5)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrMapStringString) Has_key(arg2 string) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (bool)(C._wrap_MapStringString_has_key_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), *(*C.swig_type_6)(unsafe.Pointer(&_swig_i_1))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func DeleteMapStringString(arg1 MapStringString) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_MapStringString_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0))
}

type MapStringString interface {
	Swigcptr() uintptr
	SwigIsMapStringString()
	Size() (_swig_ret uint)
	Empty() (_swig_ret bool)
	Clear()
	Get(arg2 string) (_swig_ret string)
	Set(arg2 string, arg3 string)
	Del(arg2 string)
	Has_key(arg2 string) (_swig_ret bool)
}

type SwigcptrMapIntString uintptr

func (p SwigcptrMapIntString) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrMapIntString) SwigIsMapIntString() {
}

func NewMapIntString__SWIG_0() (_swig_ret MapIntString) {
	var swig_r MapIntString
	swig_r = (MapIntString)(SwigcptrMapIntString(C._wrap_new_MapIntString__SWIG_0_ccapi_00042a34e9364138()))
	return swig_r
}

func NewMapIntString__SWIG_1(arg1 MapIntString) (_swig_ret MapIntString) {
	var swig_r MapIntString
	_swig_i_0 := getSwigcptr(arg1)
	swig_r = (MapIntString)(SwigcptrMapIntString(C._wrap_new_MapIntString__SWIG_1_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func NewMapIntString(a ...interface{}) MapIntString {
	argc := len(a)
	if argc == 0 {
		return NewMapIntString__SWIG_0()
	}
	if argc == 1 {
		return NewMapIntString__SWIG_1(a[0].(MapIntString))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrMapIntString) Size() (_swig_ret uint) {
	var swig_r uint
	_swig_i_0 := arg1
	swig_r = (uint)(C._wrap_MapIntString_size_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrMapIntString) Empty() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_MapIntString_empty_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrMapIntString) Clear() {
	_swig_i_0 := arg1
	C._wrap_MapIntString_clear_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrMapIntString) Get(arg2 int) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r_p := C._wrap_MapIntString_get_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (arg1 SwigcptrMapIntString) Set(arg2 int, arg3 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_MapIntString_set_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), *(*C.swig_type_8)(unsafe.Pointer(&_swig_i_2)))
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
}

func (arg1 SwigcptrMapIntString) Del(arg2 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_MapIntString_del_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrMapIntString) Has_key(arg2 int) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (bool)(C._wrap_MapIntString_has_key_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1)))
	return swig_r
}

func DeleteMapIntString(arg1 MapIntString) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_MapIntString_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0))
}

type MapIntString interface {
	Swigcptr() uintptr
	SwigIsMapIntString()
	Size() (_swig_ret uint)
	Empty() (_swig_ret bool)
	Clear()
	Get(arg2 int) (_swig_ret string)
	Set(arg2 int, arg3 string)
	Del(arg2 int)
	Has_key(arg2 int) (_swig_ret bool)
}

type SwigcptrPairIntString uintptr

func (p SwigcptrPairIntString) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrPairIntString) SwigIsPairIntString() {
}

func NewPairIntString__SWIG_0() (_swig_ret PairIntString) {
	var swig_r PairIntString
	swig_r = (PairIntString)(SwigcptrPairIntString(C._wrap_new_PairIntString__SWIG_0_ccapi_00042a34e9364138()))
	return swig_r
}

func NewPairIntString__SWIG_1(arg1 int, arg2 string) (_swig_ret PairIntString) {
	var swig_r PairIntString
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (PairIntString)(SwigcptrPairIntString(C._wrap_new_PairIntString__SWIG_1_ccapi_00042a34e9364138(C.swig_intgo(_swig_i_0), *(*C.swig_type_9)(unsafe.Pointer(&_swig_i_1)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func NewPairIntString__SWIG_2(arg1 PairIntString) (_swig_ret PairIntString) {
	var swig_r PairIntString
	_swig_i_0 := getSwigcptr(arg1)
	swig_r = (PairIntString)(SwigcptrPairIntString(C._wrap_new_PairIntString__SWIG_2_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func NewPairIntString(a ...interface{}) PairIntString {
	argc := len(a)
	if argc == 0 {
		return NewPairIntString__SWIG_0()
	}
	if argc == 1 {
		return NewPairIntString__SWIG_2(a[0].(PairIntString))
	}
	if argc == 2 {
		return NewPairIntString__SWIG_1(a[0].(int), a[1].(string))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrPairIntString) SetFirst(arg2 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_PairIntString_first_set_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrPairIntString) GetFirst() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_PairIntString_first_get_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrPairIntString) SetSecond(arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_PairIntString_second_set_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), *(*C.swig_type_10)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrPairIntString) GetSecond() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_PairIntString_second_get_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func DeletePairIntString(arg1 PairIntString) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_PairIntString_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0))
}

type PairIntString interface {
	Swigcptr() uintptr
	SwigIsPairIntString()
	SetFirst(arg2 int)
	GetFirst() (_swig_ret int)
	SetSecond(arg2 string)
	GetSecond() (_swig_ret string)
}

type SwigcptrPairLongLongLongLong uintptr

func (p SwigcptrPairLongLongLongLong) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrPairLongLongLongLong) SwigIsPairLongLongLongLong() {
}

func NewPairLongLongLongLong__SWIG_0() (_swig_ret PairLongLongLongLong) {
	var swig_r PairLongLongLongLong
	swig_r = (PairLongLongLongLong)(SwigcptrPairLongLongLongLong(C._wrap_new_PairLongLongLongLong__SWIG_0_ccapi_00042a34e9364138()))
	return swig_r
}

func NewPairLongLongLongLong__SWIG_1(arg1 int64, arg2 int64) (_swig_ret PairLongLongLongLong) {
	var swig_r PairLongLongLongLong
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (PairLongLongLongLong)(SwigcptrPairLongLongLongLong(C._wrap_new_PairLongLongLongLong__SWIG_1_ccapi_00042a34e9364138(C.swig_type_12(_swig_i_0), C.swig_type_13(_swig_i_1))))
	return swig_r
}

func NewPairLongLongLongLong__SWIG_2(arg1 PairLongLongLongLong) (_swig_ret PairLongLongLongLong) {
	var swig_r PairLongLongLongLong
	_swig_i_0 := getSwigcptr(arg1)
	swig_r = (PairLongLongLongLong)(SwigcptrPairLongLongLongLong(C._wrap_new_PairLongLongLongLong__SWIG_2_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func NewPairLongLongLongLong(a ...interface{}) PairLongLongLongLong {
	argc := len(a)
	if argc == 0 {
		return NewPairLongLongLongLong__SWIG_0()
	}
	if argc == 1 {
		return NewPairLongLongLongLong__SWIG_2(a[0].(PairLongLongLongLong))
	}
	if argc == 2 {
		return NewPairLongLongLongLong__SWIG_1(a[0].(int64), a[1].(int64))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrPairLongLongLongLong) SetFirst(arg2 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_PairLongLongLongLong_first_set_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), C.swig_type_14(_swig_i_1))
}

func (arg1 SwigcptrPairLongLongLongLong) GetFirst() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_PairLongLongLongLong_first_get_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrPairLongLongLongLong) SetSecond(arg2 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_PairLongLongLongLong_second_set_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), C.swig_type_16(_swig_i_1))
}

func (arg1 SwigcptrPairLongLongLongLong) GetSecond() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_PairLongLongLongLong_second_get_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func DeletePairLongLongLongLong(arg1 PairLongLongLongLong) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_PairLongLongLongLong_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0))
}

type PairLongLongLongLong interface {
	Swigcptr() uintptr
	SwigIsPairLongLongLongLong()
	SetFirst(arg2 int64)
	GetFirst() (_swig_ret int64)
	SetSecond(arg2 int64)
	GetSecond() (_swig_ret int64)
}

type SwigcptrVectorPairIntString uintptr

func (p SwigcptrVectorPairIntString) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrVectorPairIntString) SwigIsVectorPairIntString() {
}

func NewVectorPairIntString__SWIG_0() (_swig_ret VectorPairIntString) {
	var swig_r VectorPairIntString
	swig_r = (VectorPairIntString)(SwigcptrVectorPairIntString(C._wrap_new_VectorPairIntString__SWIG_0_ccapi_00042a34e9364138()))
	return swig_r
}

func NewVectorPairIntString__SWIG_1(arg1 int64) (_swig_ret VectorPairIntString) {
	var swig_r VectorPairIntString
	_swig_i_0 := arg1
	swig_r = (VectorPairIntString)(SwigcptrVectorPairIntString(C._wrap_new_VectorPairIntString__SWIG_1_ccapi_00042a34e9364138(C.swig_type_18(_swig_i_0))))
	return swig_r
}

func NewVectorPairIntString__SWIG_2(arg1 VectorPairIntString) (_swig_ret VectorPairIntString) {
	var swig_r VectorPairIntString
	_swig_i_0 := getSwigcptr(arg1)
	swig_r = (VectorPairIntString)(SwigcptrVectorPairIntString(C._wrap_new_VectorPairIntString__SWIG_2_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func NewVectorPairIntString(a ...interface{}) VectorPairIntString {
	argc := len(a)
	if argc == 0 {
		return NewVectorPairIntString__SWIG_0()
	}
	if argc == 1 {
		if _, ok := a[0].(int64); !ok {
			goto check_2
		}
		return NewVectorPairIntString__SWIG_1(a[0].(int64))
	}
check_2:
	if argc == 1 {
		return NewVectorPairIntString__SWIG_2(a[0].(VectorPairIntString))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrVectorPairIntString) Size() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_VectorPairIntString_size_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrVectorPairIntString) Capacity() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_VectorPairIntString_capacity_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrVectorPairIntString) Reserve(arg2 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_VectorPairIntString_reserve_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), C.swig_type_21(_swig_i_1))
}

func (arg1 SwigcptrVectorPairIntString) IsEmpty() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_VectorPairIntString_isEmpty_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrVectorPairIntString) Clear() {
	_swig_i_0 := arg1
	C._wrap_VectorPairIntString_clear_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrVectorPairIntString) Add(arg2 PairIntString) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_VectorPairIntString_add_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrVectorPairIntString) Get(arg2 int) (_swig_ret PairIntString) {
	var swig_r PairIntString
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (PairIntString)(SwigcptrPairIntString(C._wrap_VectorPairIntString_get_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrVectorPairIntString) Set(arg2 int, arg3 PairIntString) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := getSwigcptr(arg3)
	C._wrap_VectorPairIntString_set_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.uintptr_t(_swig_i_2))
}

func DeleteVectorPairIntString(arg1 VectorPairIntString) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_VectorPairIntString_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0))
}

type VectorPairIntString interface {
	Swigcptr() uintptr
	SwigIsVectorPairIntString()
	Size() (_swig_ret int64)
	Capacity() (_swig_ret int64)
	Reserve(arg2 int64)
	IsEmpty() (_swig_ret bool)
	Clear()
	Add(arg2 PairIntString)
	Get(arg2 int) (_swig_ret PairIntString)
	Set(arg2 int, arg3 PairIntString)
}

type SwigcptrElementList uintptr

func (p SwigcptrElementList) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrElementList) SwigIsElementList() {
}

func NewElementList__SWIG_0() (_swig_ret ElementList) {
	var swig_r ElementList
	swig_r = (ElementList)(SwigcptrElementList(C._wrap_new_ElementList__SWIG_0_ccapi_00042a34e9364138()))
	return swig_r
}

func NewElementList__SWIG_1(arg1 int64) (_swig_ret ElementList) {
	var swig_r ElementList
	_swig_i_0 := arg1
	swig_r = (ElementList)(SwigcptrElementList(C._wrap_new_ElementList__SWIG_1_ccapi_00042a34e9364138(C.swig_type_22(_swig_i_0))))
	return swig_r
}

func NewElementList__SWIG_2(arg1 ElementList) (_swig_ret ElementList) {
	var swig_r ElementList
	_swig_i_0 := getSwigcptr(arg1)
	swig_r = (ElementList)(SwigcptrElementList(C._wrap_new_ElementList__SWIG_2_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func NewElementList(a ...interface{}) ElementList {
	argc := len(a)
	if argc == 0 {
		return NewElementList__SWIG_0()
	}
	if argc == 1 {
		if _, ok := a[0].(int64); !ok {
			goto check_2
		}
		return NewElementList__SWIG_1(a[0].(int64))
	}
check_2:
	if argc == 1 {
		return NewElementList__SWIG_2(a[0].(ElementList))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrElementList) Size() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_ElementList_size_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrElementList) Capacity() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_ElementList_capacity_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrElementList) Reserve(arg2 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_ElementList_reserve_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), C.swig_type_25(_swig_i_1))
}

func (arg1 SwigcptrElementList) IsEmpty() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_ElementList_isEmpty_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrElementList) Clear() {
	_swig_i_0 := arg1
	C._wrap_ElementList_clear_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrElementList) Add(arg2 Element) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_ElementList_add_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrElementList) Get(arg2 int) (_swig_ret Element) {
	var swig_r Element
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (Element)(SwigcptrElement(C._wrap_ElementList_get_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrElementList) Set(arg2 int, arg3 Element) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := getSwigcptr(arg3)
	C._wrap_ElementList_set_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.uintptr_t(_swig_i_2))
}

func DeleteElementList(arg1 ElementList) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_ElementList_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0))
}

type ElementList interface {
	Swigcptr() uintptr
	SwigIsElementList()
	Size() (_swig_ret int64)
	Capacity() (_swig_ret int64)
	Reserve(arg2 int64)
	IsEmpty() (_swig_ret bool)
	Clear()
	Add(arg2 Element)
	Get(arg2 int) (_swig_ret Element)
	Set(arg2 int, arg3 Element)
}

type SwigcptrVectorString uintptr

func (p SwigcptrVectorString) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrVectorString) SwigIsVectorString() {
}

func NewVectorString__SWIG_0() (_swig_ret VectorString) {
	var swig_r VectorString
	swig_r = (VectorString)(SwigcptrVectorString(C._wrap_new_VectorString__SWIG_0_ccapi_00042a34e9364138()))
	return swig_r
}

func NewVectorString__SWIG_1(arg1 int64) (_swig_ret VectorString) {
	var swig_r VectorString
	_swig_i_0 := arg1
	swig_r = (VectorString)(SwigcptrVectorString(C._wrap_new_VectorString__SWIG_1_ccapi_00042a34e9364138(C.swig_type_26(_swig_i_0))))
	return swig_r
}

func NewVectorString__SWIG_2(arg1 VectorString) (_swig_ret VectorString) {
	var swig_r VectorString
	_swig_i_0 := getSwigcptr(arg1)
	swig_r = (VectorString)(SwigcptrVectorString(C._wrap_new_VectorString__SWIG_2_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func NewVectorString(a ...interface{}) VectorString {
	argc := len(a)
	if argc == 0 {
		return NewVectorString__SWIG_0()
	}
	if argc == 1 {
		if _, ok := a[0].(int64); !ok {
			goto check_2
		}
		return NewVectorString__SWIG_1(a[0].(int64))
	}
check_2:
	if argc == 1 {
		return NewVectorString__SWIG_2(a[0].(VectorString))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrVectorString) Size() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_VectorString_size_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrVectorString) Capacity() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_VectorString_capacity_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrVectorString) Reserve(arg2 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_VectorString_reserve_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), C.swig_type_29(_swig_i_1))
}

func (arg1 SwigcptrVectorString) IsEmpty() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_VectorString_isEmpty_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrVectorString) Clear() {
	_swig_i_0 := arg1
	C._wrap_VectorString_clear_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrVectorString) Add(arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_VectorString_add_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), *(*C.swig_type_30)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrVectorString) Get(arg2 int) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r_p := C._wrap_VectorString_get_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (arg1 SwigcptrVectorString) Set(arg2 int, arg3 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_VectorString_set_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), *(*C.swig_type_32)(unsafe.Pointer(&_swig_i_2)))
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
}

func DeleteVectorString(arg1 VectorString) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_VectorString_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0))
}

type VectorString interface {
	Swigcptr() uintptr
	SwigIsVectorString()
	Size() (_swig_ret int64)
	Capacity() (_swig_ret int64)
	Reserve(arg2 int64)
	IsEmpty() (_swig_ret bool)
	Clear()
	Add(arg2 string)
	Get(arg2 int) (_swig_ret string)
	Set(arg2 int, arg3 string)
}

type SwigcptrMessageList uintptr

func (p SwigcptrMessageList) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrMessageList) SwigIsMessageList() {
}

func NewMessageList__SWIG_0() (_swig_ret MessageList) {
	var swig_r MessageList
	swig_r = (MessageList)(SwigcptrMessageList(C._wrap_new_MessageList__SWIG_0_ccapi_00042a34e9364138()))
	return swig_r
}

func NewMessageList__SWIG_1(arg1 int64) (_swig_ret MessageList) {
	var swig_r MessageList
	_swig_i_0 := arg1
	swig_r = (MessageList)(SwigcptrMessageList(C._wrap_new_MessageList__SWIG_1_ccapi_00042a34e9364138(C.swig_type_33(_swig_i_0))))
	return swig_r
}

func NewMessageList__SWIG_2(arg1 MessageList) (_swig_ret MessageList) {
	var swig_r MessageList
	_swig_i_0 := getSwigcptr(arg1)
	swig_r = (MessageList)(SwigcptrMessageList(C._wrap_new_MessageList__SWIG_2_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func NewMessageList(a ...interface{}) MessageList {
	argc := len(a)
	if argc == 0 {
		return NewMessageList__SWIG_0()
	}
	if argc == 1 {
		if _, ok := a[0].(int64); !ok {
			goto check_2
		}
		return NewMessageList__SWIG_1(a[0].(int64))
	}
check_2:
	if argc == 1 {
		return NewMessageList__SWIG_2(a[0].(MessageList))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrMessageList) Size() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_MessageList_size_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrMessageList) Capacity() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_MessageList_capacity_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrMessageList) Reserve(arg2 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_MessageList_reserve_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), C.swig_type_36(_swig_i_1))
}

func (arg1 SwigcptrMessageList) IsEmpty() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_MessageList_isEmpty_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrMessageList) Clear() {
	_swig_i_0 := arg1
	C._wrap_MessageList_clear_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrMessageList) Add(arg2 Message) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_MessageList_add_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrMessageList) Get(arg2 int) (_swig_ret Message) {
	var swig_r Message
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (Message)(SwigcptrMessage(C._wrap_MessageList_get_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrMessageList) Set(arg2 int, arg3 Message) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := getSwigcptr(arg3)
	C._wrap_MessageList_set_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.uintptr_t(_swig_i_2))
}

func DeleteMessageList(arg1 MessageList) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_MessageList_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0))
}

type MessageList interface {
	Swigcptr() uintptr
	SwigIsMessageList()
	Size() (_swig_ret int64)
	Capacity() (_swig_ret int64)
	Reserve(arg2 int64)
	IsEmpty() (_swig_ret bool)
	Clear()
	Add(arg2 Message)
	Get(arg2 int) (_swig_ret Message)
	Set(arg2 int, arg3 Message)
}

type SwigcptrMapStringMapStringString uintptr

func (p SwigcptrMapStringMapStringString) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrMapStringMapStringString) SwigIsMapStringMapStringString() {
}

func NewMapStringMapStringString__SWIG_0() (_swig_ret MapStringMapStringString) {
	var swig_r MapStringMapStringString
	swig_r = (MapStringMapStringString)(SwigcptrMapStringMapStringString(C._wrap_new_MapStringMapStringString__SWIG_0_ccapi_00042a34e9364138()))
	return swig_r
}

func NewMapStringMapStringString__SWIG_1(arg1 MapStringMapStringString) (_swig_ret MapStringMapStringString) {
	var swig_r MapStringMapStringString
	_swig_i_0 := getSwigcptr(arg1)
	swig_r = (MapStringMapStringString)(SwigcptrMapStringMapStringString(C._wrap_new_MapStringMapStringString__SWIG_1_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func NewMapStringMapStringString(a ...interface{}) MapStringMapStringString {
	argc := len(a)
	if argc == 0 {
		return NewMapStringMapStringString__SWIG_0()
	}
	if argc == 1 {
		return NewMapStringMapStringString__SWIG_1(a[0].(MapStringMapStringString))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrMapStringMapStringString) Size() (_swig_ret uint) {
	var swig_r uint
	_swig_i_0 := arg1
	swig_r = (uint)(C._wrap_MapStringMapStringString_size_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrMapStringMapStringString) Empty() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_MapStringMapStringString_empty_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrMapStringMapStringString) Clear() {
	_swig_i_0 := arg1
	C._wrap_MapStringMapStringString_clear_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrMapStringMapStringString) Get(arg2 string) (_swig_ret MapStringString) {
	var swig_r MapStringString
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (MapStringString)(SwigcptrMapStringString(C._wrap_MapStringMapStringString_get_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), *(*C.swig_type_37)(unsafe.Pointer(&_swig_i_1)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func (arg1 SwigcptrMapStringMapStringString) Set(arg2 string, arg3 MapStringString) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := getSwigcptr(arg3)
	C._wrap_MapStringMapStringString_set_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), *(*C.swig_type_38)(unsafe.Pointer(&_swig_i_1)), C.uintptr_t(_swig_i_2))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrMapStringMapStringString) Del(arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_MapStringMapStringString_del_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), *(*C.swig_type_39)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrMapStringMapStringString) Has_key(arg2 string) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (bool)(C._wrap_MapStringMapStringString_has_key_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), *(*C.swig_type_40)(unsafe.Pointer(&_swig_i_1))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func DeleteMapStringMapStringString(arg1 MapStringMapStringString) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_MapStringMapStringString_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0))
}

type MapStringMapStringString interface {
	Swigcptr() uintptr
	SwigIsMapStringMapStringString()
	Size() (_swig_ret uint)
	Empty() (_swig_ret bool)
	Clear()
	Get(arg2 string) (_swig_ret MapStringString)
	Set(arg2 string, arg3 MapStringString)
	Del(arg2 string)
	Has_key(arg2 string) (_swig_ret bool)
}

type SwigcptrEventList uintptr

func (p SwigcptrEventList) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrEventList) SwigIsEventList() {
}

func NewEventList__SWIG_0() (_swig_ret EventList) {
	var swig_r EventList
	swig_r = (EventList)(SwigcptrEventList(C._wrap_new_EventList__SWIG_0_ccapi_00042a34e9364138()))
	return swig_r
}

func NewEventList__SWIG_1(arg1 int64) (_swig_ret EventList) {
	var swig_r EventList
	_swig_i_0 := arg1
	swig_r = (EventList)(SwigcptrEventList(C._wrap_new_EventList__SWIG_1_ccapi_00042a34e9364138(C.swig_type_41(_swig_i_0))))
	return swig_r
}

func NewEventList__SWIG_2(arg1 EventList) (_swig_ret EventList) {
	var swig_r EventList
	_swig_i_0 := getSwigcptr(arg1)
	swig_r = (EventList)(SwigcptrEventList(C._wrap_new_EventList__SWIG_2_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func NewEventList(a ...interface{}) EventList {
	argc := len(a)
	if argc == 0 {
		return NewEventList__SWIG_0()
	}
	if argc == 1 {
		if _, ok := a[0].(int64); !ok {
			goto check_2
		}
		return NewEventList__SWIG_1(a[0].(int64))
	}
check_2:
	if argc == 1 {
		return NewEventList__SWIG_2(a[0].(EventList))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrEventList) Size() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_EventList_size_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrEventList) Capacity() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_EventList_capacity_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrEventList) Reserve(arg2 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_EventList_reserve_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), C.swig_type_44(_swig_i_1))
}

func (arg1 SwigcptrEventList) IsEmpty() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_EventList_isEmpty_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrEventList) Clear() {
	_swig_i_0 := arg1
	C._wrap_EventList_clear_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrEventList) Add(arg2 Event) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_EventList_add_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrEventList) Get(arg2 int) (_swig_ret Event) {
	var swig_r Event
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (Event)(SwigcptrEvent(C._wrap_EventList_get_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrEventList) Set(arg2 int, arg3 Event) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := getSwigcptr(arg3)
	C._wrap_EventList_set_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.uintptr_t(_swig_i_2))
}

func DeleteEventList(arg1 EventList) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_EventList_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0))
}

type EventList interface {
	Swigcptr() uintptr
	SwigIsEventList()
	Size() (_swig_ret int64)
	Capacity() (_swig_ret int64)
	Reserve(arg2 int64)
	IsEmpty() (_swig_ret bool)
	Clear()
	Add(arg2 Event)
	Get(arg2 int) (_swig_ret Event)
	Set(arg2 int, arg3 Event)
}

type SwigcptrSubscriptionList uintptr

func (p SwigcptrSubscriptionList) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrSubscriptionList) SwigIsSubscriptionList() {
}

func NewSubscriptionList__SWIG_0() (_swig_ret SubscriptionList) {
	var swig_r SubscriptionList
	swig_r = (SubscriptionList)(SwigcptrSubscriptionList(C._wrap_new_SubscriptionList__SWIG_0_ccapi_00042a34e9364138()))
	return swig_r
}

func NewSubscriptionList__SWIG_1(arg1 int64) (_swig_ret SubscriptionList) {
	var swig_r SubscriptionList
	_swig_i_0 := arg1
	swig_r = (SubscriptionList)(SwigcptrSubscriptionList(C._wrap_new_SubscriptionList__SWIG_1_ccapi_00042a34e9364138(C.swig_type_45(_swig_i_0))))
	return swig_r
}

func NewSubscriptionList__SWIG_2(arg1 SubscriptionList) (_swig_ret SubscriptionList) {
	var swig_r SubscriptionList
	_swig_i_0 := getSwigcptr(arg1)
	swig_r = (SubscriptionList)(SwigcptrSubscriptionList(C._wrap_new_SubscriptionList__SWIG_2_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func NewSubscriptionList(a ...interface{}) SubscriptionList {
	argc := len(a)
	if argc == 0 {
		return NewSubscriptionList__SWIG_0()
	}
	if argc == 1 {
		if _, ok := a[0].(int64); !ok {
			goto check_2
		}
		return NewSubscriptionList__SWIG_1(a[0].(int64))
	}
check_2:
	if argc == 1 {
		return NewSubscriptionList__SWIG_2(a[0].(SubscriptionList))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrSubscriptionList) Size() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_SubscriptionList_size_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrSubscriptionList) Capacity() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_SubscriptionList_capacity_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrSubscriptionList) Reserve(arg2 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_SubscriptionList_reserve_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), C.swig_type_48(_swig_i_1))
}

func (arg1 SwigcptrSubscriptionList) IsEmpty() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_SubscriptionList_isEmpty_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrSubscriptionList) Clear() {
	_swig_i_0 := arg1
	C._wrap_SubscriptionList_clear_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrSubscriptionList) Add(arg2 Subscription) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_SubscriptionList_add_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrSubscriptionList) Get(arg2 int) (_swig_ret Subscription) {
	var swig_r Subscription
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (Subscription)(SwigcptrSubscription(C._wrap_SubscriptionList_get_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrSubscriptionList) Set(arg2 int, arg3 Subscription) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := getSwigcptr(arg3)
	C._wrap_SubscriptionList_set_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.uintptr_t(_swig_i_2))
}

func DeleteSubscriptionList(arg1 SubscriptionList) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_SubscriptionList_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0))
}

type SubscriptionList interface {
	Swigcptr() uintptr
	SwigIsSubscriptionList()
	Size() (_swig_ret int64)
	Capacity() (_swig_ret int64)
	Reserve(arg2 int64)
	IsEmpty() (_swig_ret bool)
	Clear()
	Add(arg2 Subscription)
	Get(arg2 int) (_swig_ret Subscription)
	Set(arg2 int, arg3 Subscription)
}

type SwigcptrRequestList uintptr

func (p SwigcptrRequestList) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrRequestList) SwigIsRequestList() {
}

func NewRequestList__SWIG_0() (_swig_ret RequestList) {
	var swig_r RequestList
	swig_r = (RequestList)(SwigcptrRequestList(C._wrap_new_RequestList__SWIG_0_ccapi_00042a34e9364138()))
	return swig_r
}

func NewRequestList__SWIG_1(arg1 int64) (_swig_ret RequestList) {
	var swig_r RequestList
	_swig_i_0 := arg1
	swig_r = (RequestList)(SwigcptrRequestList(C._wrap_new_RequestList__SWIG_1_ccapi_00042a34e9364138(C.swig_type_49(_swig_i_0))))
	return swig_r
}

func NewRequestList__SWIG_2(arg1 RequestList) (_swig_ret RequestList) {
	var swig_r RequestList
	_swig_i_0 := getSwigcptr(arg1)
	swig_r = (RequestList)(SwigcptrRequestList(C._wrap_new_RequestList__SWIG_2_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func NewRequestList(a ...interface{}) RequestList {
	argc := len(a)
	if argc == 0 {
		return NewRequestList__SWIG_0()
	}
	if argc == 1 {
		if _, ok := a[0].(int64); !ok {
			goto check_2
		}
		return NewRequestList__SWIG_1(a[0].(int64))
	}
check_2:
	if argc == 1 {
		return NewRequestList__SWIG_2(a[0].(RequestList))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrRequestList) Size() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_RequestList_size_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrRequestList) Capacity() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_RequestList_capacity_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrRequestList) Reserve(arg2 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_RequestList_reserve_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), C.swig_type_52(_swig_i_1))
}

func (arg1 SwigcptrRequestList) IsEmpty() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_RequestList_isEmpty_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrRequestList) Clear() {
	_swig_i_0 := arg1
	C._wrap_RequestList_clear_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrRequestList) Add(arg2 Request) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_RequestList_add_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrRequestList) Get(arg2 int) (_swig_ret Request) {
	var swig_r Request
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (Request)(SwigcptrRequest(C._wrap_RequestList_get_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrRequestList) Set(arg2 int, arg3 Request) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := getSwigcptr(arg3)
	C._wrap_RequestList_set_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.uintptr_t(_swig_i_2))
}

func DeleteRequestList(arg1 RequestList) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_RequestList_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0))
}

type RequestList interface {
	Swigcptr() uintptr
	SwigIsRequestList()
	Size() (_swig_ret int64)
	Capacity() (_swig_ret int64)
	Reserve(arg2 int64)
	IsEmpty() (_swig_ret bool)
	Clear()
	Add(arg2 Request)
	Get(arg2 int) (_swig_ret Request)
	Set(arg2 int, arg3 Request)
}

const CCAPI_PRINT_DOUBLE_PRECISION_DEFAULT int = 10
const CCAPI_DOUBLE_ERROR_DEFAULT float64 = 1e-10
const CCAPI_GENERIC_PUBLIC_SUBSCRIPTION string = "GENERIC_PUBLIC_SUBSCRIPTION"
const CCAPI_MARKET_DEPTH string = "MARKET_DEPTH"
const CCAPI_TRADE string = "TRADE"
const CCAPI_AGG_TRADE string = "AGG_TRADE"
const CCAPI_CANDLESTICK string = "CANDLESTICK"
const CCAPI_MARKET_DEPTH_MAX string = "MARKET_DEPTH_MAX"
const CCAPI_MARKET_DEPTH_SUBSCRIBED_TO_EXCHANGE string = "MARKET_DEPTH_SUBSCRIBED_TO_EXCHANGE"
const CCAPI_MARKET_DEPTH_MAX_DEFAULT string = "1"
const CCAPI_CONFLATE_INTERVAL_MILLISECONDS string = "CONFLATE_INTERVAL_MILLISECONDS"
const CCAPI_CONFLATE_INTERVAL_MILLISECONDS_DEFAULT string = "0"
const CCAPI_CONFLATE_GRACE_PERIOD_MILLISECONDS string = "CONFLATE_GRACE_PERIOD_MILLISECONDS"
const CCAPI_CONFLATE_GRACE_PERIOD_MILLISECONDS_DEFAULT string = "-1"
const CCAPI_MARKET_DEPTH_RETURN_UPDATE string = "MARKET_DEPTH_RETURN_UPDATE"
const CCAPI_MARKET_DEPTH_RETURN_UPDATE_DEFAULT string = "0"
const CCAPI_MARKET_DEPTH_RETURN_UPDATE_ENABLE string = "1"
const CCAPI_FETCH_MARKET_DEPTH_INITIAL_SNAPSHOT_DELAY_MILLISECONDS string = "FETCH_MARKET_DEPTH_INITIAL_SNAPSHOT_DELAY_MILLISECONDS"
const CCAPI_FETCH_MARKET_DEPTH_INITIAL_SNAPSHOT_DELAY_MILLISECONDS_DEFAULT string = "0"
const CCAPI_CANDLESTICK_INTERVAL_SECONDS string = "CANDLESTICK_INTERVAL_SECONDS"
const CCAPI_CANDLESTICK_INTERVAL_SECONDS_DEFAULT string = "60"
const CCAPI_EXCHANGE_NAME_COINBASE string = "coinbase"
const CCAPI_EXCHANGE_NAME_GEMINI string = "gemini"
const CCAPI_EXCHANGE_NAME_KRAKEN string = "kraken"
const CCAPI_EXCHANGE_NAME_KRAKEN_FUTURES string = "kraken-futures"
const CCAPI_EXCHANGE_NAME_BITSTAMP string = "bitstamp"
const CCAPI_EXCHANGE_NAME_BITFINEX string = "bitfinex"
const CCAPI_EXCHANGE_NAME_BITMEX string = "bitmex"
const CCAPI_EXCHANGE_NAME_BINANCE_US string = "binance-us"
const CCAPI_EXCHANGE_NAME_BINANCE string = "binance"
const CCAPI_EXCHANGE_NAME_BINANCE_USDS_FUTURES string = "binance-usds-futures"
const CCAPI_EXCHANGE_NAME_BINANCE_COIN_FUTURES string = "binance-coin-futures"
const CCAPI_EXCHANGE_NAME_HUOBI string = "huobi"
const CCAPI_EXCHANGE_NAME_HUOBI_USDT_SWAP string = "huobi-usdt-swap"
const CCAPI_EXCHANGE_NAME_HUOBI_COIN_SWAP string = "huobi-coin-swap"
const CCAPI_EXCHANGE_NAME_OKX string = "okx"
const CCAPI_EXCHANGE_NAME_ERISX string = "erisx"
const CCAPI_EXCHANGE_NAME_KUCOIN string = "kucoin"
const CCAPI_EXCHANGE_NAME_KUCOIN_FUTURES string = "kucoin-futures"
const CCAPI_EXCHANGE_NAME_FTX string = "ftx"
const CCAPI_EXCHANGE_NAME_FTX_US string = "ftx-us"
const CCAPI_EXCHANGE_NAME_DERIBIT string = "deribit"
const CCAPI_EXCHANGE_NAME_GATEIO string = "gateio"
const CCAPI_EXCHANGE_NAME_GATEIO_PERPETUAL_FUTURES string = "gateio-perpetual-futures"
const CCAPI_EXCHANGE_NAME_CRYPTOCOM string = "cryptocom"
const CCAPI_EXCHANGE_NAME_BYBIT string = "bybit"
const CCAPI_EXCHANGE_NAME_ASCENDEX string = "ascendex"
const CCAPI_EXCHANGE_NAME_BITGET string = "bitget"
const CCAPI_EXCHANGE_NAME_BITGET_FUTURES string = "bitget-futures"
const CCAPI_EXCHANGE_NAME_BITMART string = "bitmart"
const CCAPI_EXCHANGE_NAME_MEXC string = "mexc"
const CCAPI_EXCHANGE_NAME_MEXC_FUTURES string = "mexc-futures"
const CCAPI_EXCHANGE_NAME_WHITEBIT string = "whitebit"
const CCAPI_LAST_PRICE string = "LAST_PRICE"
const CCAPI_LAST_SIZE string = "LAST_SIZE"
const CCAPI_TRADE_ID string = "TRADE_ID"
const CCAPI_AGG_TRADE_ID string = "AGG_TRADE_ID"
const CCAPI_IS_BUYER_MAKER string = "IS_BUYER_MAKER"
const CCAPI_SEQUENCE_NUMBER string = "SEQUENCE_NUMBER"
const CCAPI_IS_MAKER string = "IS_MAKER"
const CCAPI_BEST_BID_N_PRICE string = "BID_PRICE"
const CCAPI_BEST_BID_N_PRICE_EMPTY string = ""
const CCAPI_BEST_BID_N_SIZE string = "BID_SIZE"
const CCAPI_BEST_BID_N_SIZE_EMPTY string = ""
const CCAPI_BEST_ASK_N_PRICE string = "ASK_PRICE"
const CCAPI_BEST_ASK_N_PRICE_EMPTY string = ""
const CCAPI_BEST_ASK_N_SIZE string = "ASK_SIZE"
const CCAPI_BEST_ASK_N_SIZE_EMPTY string = ""
const CCAPI_CANDLESTICK_EMPTY string = ""
const CCAPI_OPEN_PRICE string = "OPEN_PRICE"
const CCAPI_HIGH_PRICE string = "HIGH_PRICE"
const CCAPI_LOW_PRICE string = "LOW_PRICE"
const CCAPI_CLOSE_PRICE string = "CLOSE_PRICE"
const CCAPI_VOLUME string = "VOLUME"
const CCAPI_QUOTE_VOLUME string = "QUOTE_VOLUME"
const CCAPI_LIMIT string = "LIMIT"
const CCAPI_START_TRADE_ID string = "START_TRADE_ID"
const CCAPI_END_TRADE_ID string = "END_TRADE_ID"
const CCAPI_START_AGG_TRADE_ID string = "START_AGG_TRADE_ID"
const CCAPI_START_TIME_SECONDS string = "START_TIME_SECONDS"
const CCAPI_END_TIME_SECONDS string = "END_TIME_SECONDS"
const CCAPI_LAST_UPDATED_TIME_SECONDS string = "LAST_UPDATED_TIME_SECONDS"
const CCAPI_BASE_ASSET string = "BASE_ASSET"
const CCAPI_QUOTE_ASSET string = "QUOTE_ASSET"
const CCAPI_MARGIN_ASSET string = "MARGIN_ASSET"
const CCAPI_SETTLE_ASSET string = "SETTLE_ASSET"
const CCAPI_ORDER_PRICE_INCREMENT string = "PRICE_INCREMENT"
const CCAPI_ORDER_QUANTITY_INCREMENT string = "QUANTITY_INCREMENT"
const CCAPI_ORDER_QUANTITY_MIN string = "QUANTITY_MIN"
const CCAPI_ORDER_QUANTITY_MAX string = "QUANTITY_MAX"
const CCAPI_ORDER_PRICE_TIMES_QUANTITY_MIN string = "PRICE_TIMES_QUANTITY_MIN"
const CCAPI_INSTRUMENT_STATUS string = "INSTRUMENT_STATUS"
const CCAPI_CONTRACT_SIZE string = "CONTRACT_SIZE"
const CCAPI_CONTRACT_MULTIPLIER string = "CONTRACT_MULTIPLIER"
const CCAPI_WEBSOCKET_COINBASE_CHANNEL_MATCH string = "matches"
const CCAPI_WEBSOCKET_COINBASE_CHANNEL_LEVEL2 string = "level2"
const CCAPI_WEBSOCKET_GEMINI_PARAMETER_TRADES string = "trades"
const CCAPI_WEBSOCKET_GEMINI_PARAMETER_BIDS string = "bids"
const CCAPI_WEBSOCKET_GEMINI_PARAMETER_OFFERS string = "offers"
const CCAPI_WEBSOCKET_GEMINI_PARAMETER_TOP_OF_BOOK string = "top_of_book"
const CCAPI_WEBSOCKET_KRAKEN_CHANNEL_TRADE string = "trade"
const CCAPI_WEBSOCKET_KRAKEN_CHANNEL_BOOK string = "book"
const CCAPI_WEBSOCKET_KRAKEN_CHANNEL_OHLC string = "ohlc"
const CCAPI_WEBSOCKET_KRAKEN_FUTURES_CHANNEL_TRADE string = "trade"
const CCAPI_WEBSOCKET_KRAKEN_FUTURES_CHANNEL_BOOK string = "book"
const CCAPI_WEBSOCKET_BITSTAMP_CHANNEL_LIVE_TRADES string = "live_trades"
const CCAPI_WEBSOCKET_BITSTAMP_CHANNEL_ORDER_BOOK string = "order_book"
const CCAPI_WEBSOCKET_BITFINEX_CHANNEL_TRADES string = "trades"
const CCAPI_WEBSOCKET_BITFINEX_CHANNEL_BOOKS string = "book"
const CCAPI_WEBSOCKET_BITFINEX_CHANNEL_CANDLES string = "candles"
const CCAPI_WEBSOCKET_BITMEX_CHANNEL_TRADE string = "trade"
const CCAPI_WEBSOCKET_BITMEX_CHANNEL_QUOTE string = "quote"
const CCAPI_WEBSOCKET_BITMEX_CHANNEL_ORDER_BOOK_10 string = "orderBook10"
const CCAPI_WEBSOCKET_BITMEX_CHANNEL_ORDER_BOOK_L2_25 string = "orderBookL2_25"
const CCAPI_WEBSOCKET_BITMEX_CHANNEL_ORDER_BOOK_L2 string = "orderBookL2"
const CCAPI_WEBSOCKET_BINANCE_BASE_CHANNEL_TRADE string = "trade"
const CCAPI_WEBSOCKET_BINANCE_BASE_CHANNEL_BOOK_TICKER string = "bookTicker"
const CCAPI_WEBSOCKET_BINANCE_BASE_CHANNEL_PARTIAL_BOOK_DEPTH string = "depth"
const CCAPI_WEBSOCKET_BINANCE_BASE_CHANNEL_AGG_TRADE string = "aggTrade"
const CCAPI_WEBSOCKET_BINANCE_BASE_CHANNEL_KLINE string = "kline"
const CCAPI_WEBSOCKET_HUOBI_CHANNEL_TRADE_DETAIL string = "market.$symbol.trade.detail"
const CCAPI_WEBSOCKET_HUOBI_CHANNEL_TRADE_DETAIL_REGEX string = "market\\.(.+)\\.trade\\.detail"
const CCAPI_WEBSOCKET_HUOBI_CHANNEL_MARKET_BBO string = "market.$symbol.bbo"
const CCAPI_WEBSOCKET_HUOBI_CHANNEL_MARKET_BBO_REGEX string = "market\\.(.+)\\.bbo"
const CCAPI_WEBSOCKET_HUOBI_CHANNEL_MARKET_DEPTH string = "market.$symbol.depth.step0"
const CCAPI_WEBSOCKET_HUOBI_CHANNEL_MARKET_DEPTH_REGEX string = "market\\.(.+)\\.depth\\.step0"
const CCAPI_WEBSOCKET_HUOBI_CHANNEL_MARKET_BY_PRICE_REFRESH_UPDATE string = "market.$symbol.mbp.refresh.$levels"
const CCAPI_WEBSOCKET_HUOBI_CHANNEL_MARKET_BY_PRICE_REFRESH_UPDATE_REGEX string = "market\\.(.+)\\.mbp.refresh\\.(.+)"
const CCAPI_WEBSOCKET_OKX_CHANNEL_TRADE string = "trades"
const CCAPI_WEBSOCKET_OKX_CHANNEL_PUBLIC_DEPTH50_L2_TBT string = "books50-l2-tbt"
const CCAPI_WEBSOCKET_OKX_CHANNEL_PUBLIC_DEPTH400_L2_TBT string = "books-l2-tbt"
const CCAPI_WEBSOCKET_OKX_CHANNEL_PUBLIC_DEPTH5 string = "books5"
const CCAPI_WEBSOCKET_OKX_CHANNEL_PUBLIC_DEPTH400 string = "books"
const CCAPI_WEBSOCKET_OKX_CHANNEL_PUBLIC_DEPTH1_L2_TBT string = "bbo-tbt"
const CCAPI_WEBSOCKET_OKX_CHANNEL_CANDLESTICK string = "candle"
const CCAPI_WEBSOCKET_ERISX_CHANNEL_MARKET_DATA_SUBSCRIBE string = "MarketDataSubscribe"
const CCAPI_WEBSOCKET_ERISX_CHANNEL_TOP_OF_BOOK_MARKET_DATA_SUBSCRIBE string = "TopOfBookMarketDataSubscribe"
const CCAPI_WEBSOCKET_KUCOIN_CHANNEL_MARKET_MATCH string = "/market/match"
const CCAPI_WEBSOCKET_KUCOIN_CHANNEL_MARKET_LEVEL2 string = "/market/level2"
const CCAPI_WEBSOCKET_KUCOIN_CHANNEL_MARKET_TICKER string = "/market/ticker"
const CCAPI_WEBSOCKET_KUCOIN_CHANNEL_MARKET_LEVEL2DEPTH5 string = "/spotMarket/level2Depth5"
const CCAPI_WEBSOCKET_KUCOIN_CHANNEL_MARKET_LEVEL2DEPTH50 string = "/spotMarket/level2Depth50"
const CCAPI_WEBSOCKET_KUCOIN_CHANNEL_MARKET_KLINES string = "/market/candles"
const CCAPI_WEBSOCKET_KUCOIN_FUTURES_CHANNEL_MARKET_MATCH string = "/contractMarket/execution"
const CCAPI_WEBSOCKET_KUCOIN_FUTURES_CHANNEL_MARKET_LEVEL2 string = "/contractMarket/level2"
const CCAPI_WEBSOCKET_KUCOIN_FUTURES_CHANNEL_MARKET_TICKER string = "/contractMarket/tickerV2"
const CCAPI_WEBSOCKET_KUCOIN_FUTURES_CHANNEL_MARKET_LEVEL2DEPTH5 string = "/contractMarket/level2Depth5"
const CCAPI_WEBSOCKET_KUCOIN_FUTURES_CHANNEL_MARKET_LEVEL2DEPTH50 string = "/contractMarket/level2Depth50"
const CCAPI_WEBSOCKET_FTX_BASE_CHANNEL_TRADES string = "trades"
const CCAPI_WEBSOCKET_FTX_BASE_CHANNEL_ORDERBOOKS string = "orderbook"
const CCAPI_WEBSOCKET_FTX_BASE_CHANNEL_TICKER string = "ticker"
const CCAPI_WEBSOCKET_DERIBIT_CHANNEL_TRADES string = "trades.{instrument_name}.{interval}"
const CCAPI_WEBSOCKET_DERIBIT_CHANNEL_BOOK string = "book.{instrument_name}.{group}.{depth}.{interval}"
const CCAPI_WEBSOCKET_DERIBIT_CHANNEL_BOOK_TBT string = "book.{instrument_name}.{interval}"
const CCAPI_WEBSOCKET_DERIBIT_CHANNEL_QUOTE string = "quote.{instrument_name}"
const CCAPI_WEBSOCKET_GATEIO_CHANNEL_TRADES string = "spot.trades"
const CCAPI_WEBSOCKET_GATEIO_CHANNEL_BOOK_TICKER string = "spot.book_ticker"
const CCAPI_WEBSOCKET_GATEIO_CHANNEL_ORDER_BOOK string = "spot.order_book"
const CCAPI_WEBSOCKET_GATEIO_CHANNEL_CANDLESTICKS string = "spot.candlesticks"
const CCAPI_WEBSOCKET_GATEIO_PERPETUAL_FUTURES_CHANNEL_TRADES string = "futures.trades"
const CCAPI_WEBSOCKET_GATEIO_PERPETUAL_FUTURES_CHANNEL_BOOK_TICKER string = "futures.book_ticker"
const CCAPI_WEBSOCKET_GATEIO_PERPETUAL_FUTURES_CHANNEL_ORDER_BOOK string = "futures.order_book"
const CCAPI_WEBSOCKET_GATEIO_PERPETUAL_FUTURES_CHANNEL_CANDLESTICKS string = "futures.candlesticks"
const CCAPI_WEBSOCKET_CRYPTOCOM_CHANNEL_TRADE string = "trade.{instrument_name}"
const CCAPI_WEBSOCKET_CRYPTOCOM_CHANNEL_BOOK string = "book.{instrument_name}.{depth}"
const CCAPI_WEBSOCKET_BYBIT_CHANNEL_TRADE string = "publicTrade.{symbol}"
const CCAPI_WEBSOCKET_BYBIT_CHANNEL_ORDERBOOK string = "orderbook.{depth}.{symbol}"
const CCAPI_WEBSOCKET_BYBIT_CHANNEL_KLINE string = "kline.{interval}.{symbol}"
const CCAPI_WEBSOCKET_BYBIT_CHANNEL_KLINE_2 string = "kline"
const CCAPI_WEBSOCKET_ASCENDEX_CHANNEL_TRADES string = "trades"
const CCAPI_WEBSOCKET_ASCENDEX_CHANNEL_BBO string = "bbo"
const CCAPI_WEBSOCKET_ASCENDEX_CHANNEL_DEPTH string = "depth"
const CCAPI_WEBSOCKET_ASCENDEX_CHANNEL_BAR string = "bar"
const CCAPI_WEBSOCKET_BITGET_BASE_CHANNEL_TRADES string = "trade"
const CCAPI_WEBSOCKET_BITGET_BASE_CHANNEL_BOOKS string = "books"
const CCAPI_WEBSOCKET_BITGET_BASE_CHANNEL_BOOKS1 string = "books1"
const CCAPI_WEBSOCKET_BITGET_BASE_CHANNEL_BOOKS5 string = "books5"
const CCAPI_WEBSOCKET_BITGET_BASE_CHANNEL_BOOKS15 string = "books15"
const CCAPI_WEBSOCKET_BITGET_BASE_CHANNEL_KLINE string = "candle"
const CCAPI_WEBSOCKET_BITMART_CHANNEL_TRADE string = "spot/trade"
const CCAPI_WEBSOCKET_BITMART_CHANNEL_PUBLIC_DEPTH5 string = "spot/depth5"
const CCAPI_WEBSOCKET_BITMART_CHANNEL_PUBLIC_DEPTH20 string = "spot/depth20"
const CCAPI_WEBSOCKET_BITMART_CHANNEL_PUBLIC_DEPTH50 string = "spot/depth50"
const CCAPI_WEBSOCKET_MEXC_CHANNEL_TRADE string = "spot@public.deals.v3.api"
const CCAPI_WEBSOCKET_MEXC_CHANNEL_DIFF_DEPTH string = "spot@public.increase.depth.v3.api"
const CCAPI_WEBSOCKET_MEXC_FUTURES_CHANNEL_TRANSACTION string = "deal"
const CCAPI_WEBSOCKET_MEXC_FUTURES_CHANNEL_DEPTH string = "depth"
const CCAPI_WEBSOCKET_WHITEBIT_CHANNEL_MARKET_TRADES string = "trades"
const CCAPI_WEBSOCKET_WHITEBIT_CHANNEL_MARKET_DEPTH string = "depth"
const CCAPI_CHANNEL_ID string = "channelId"
const CCAPI_SYMBOL_ID string = "symbolId"
const CCAPI_CONNECTION_ID string = "CONNECTION_ID"
const CCAPI_CONNECTION_URL string = "CONNECTION_URL"
const CCAPI_REASON string = "REASON"
const CCAPI_MARKET_DATA string = "market_data"
const CCAPI_EXECUTION_MANAGEMENT string = "execution_management"
const CCAPI_FIX string = "FIX"
const CCAPI_FIX_MARKET_DATA string = "FIX_MARKET_DATA"
const CCAPI_FIX_EXECUTION_MANAGEMENT string = "FIX_EXECUTION_MANAGEMENT"
const CCAPI_UNKNOWN string = "unknown"
const CCAPI_EM_ORDER_UPDATE string = "ORDER_UPDATE"
const CCAPI_EM_PRIVATE_TRADE string = "PRIVATE_TRADE"
const CCAPI_EM_BALANCE_UPDATE string = "BALANCE_UPDATE"
const CCAPI_EM_POSITION_UPDATE string = "POSITION_UPDATE"
const CCAPI_EM_ORDER_SIDE string = "SIDE"
const CCAPI_EM_ORDER_SIDE_BUY string = "BUY"
const CCAPI_EM_ORDER_SIDE_SELL string = "SELL"
const CCAPI_EM_ORDER_TYPE string = "TYPE"
const CCAPI_EM_ORDER_QUANTITY string = "QUANTITY"
const CCAPI_EM_ORDER_LIMIT_PRICE string = "LIMIT_PRICE"
const CCAPI_EM_ORDER_LAST_EXECUTED_PRICE string = "LAST_EXECUTED_PRICE"
const CCAPI_EM_ORDER_LAST_EXECUTED_SIZE string = "LAST_EXECUTED_SIZE"
const CCAPI_EM_ORDER_FEE_QUANTITY string = "FEE_QUANTITY"
const CCAPI_EM_ORDER_CUMULATIVE_FEE_QUANTITY string = "CUMULATIVE_FEE_QUANTITY"
const CCAPI_EM_ORDER_FEE_ASSET string = "FEE_ASSET"
const CCAPI_EM_ACCOUNT_ID string = "ACCOUNT_ID"
const CCAPI_EM_ACCOUNT_TYPE string = "ACCOUNT_TYPE"
const CCAPI_EM_MARGIN_TYPE_CROSS_MARGIN string = "CROSS_MARGIN"
const CCAPI_EM_MARGIN_TYPE_ISOLATED_MARGIN string = "ISOLATED_MARGIN"
const CCAPI_EM_ASSET string = "ASSET"
const CCAPI_EM_QUANTITY_TOTAL string = "QUANTITY_TOTAL"
const CCAPI_EM_QUANTITY_AVAILABLE_FOR_TRADING string = "QUANTITY_AVAILABLE_FOR_TRADING"
const CCAPI_EM_QUANTITY_LIABILITY string = "QUANTITY_LIABILITY"
const CCAPI_EM_BASE_ASSET_QUANTITY_TOTAL string = "BASE_ASSET_QUANTITY_TOTAL"
const CCAPI_EM_BASE_ASSET_QUANTITY_AVAILABLE_FOR_TRADING string = "BASE_ASSET_QUANTITY_AVAILABLE_FOR_TRADING"
const CCAPI_EM_QUOTE_ASSET_QUANTITY_TOTAL string = "QUOTE_ASSET_QUANTITY_TOTAL"
const CCAPI_EM_QUOTE_ASSET_QUANTITY_AVAILABLE_FOR_TRADING string = "QUOTE_ASSET_QUANTITY_AVAILABLE_FOR_TRADING"
const CCAPI_EM_INSTRUMENT string = "INSTRUMENT"
const CCAPI_EM_SYMBOL string = "SYMBOL"
const CCAPI_UNDERLYING_SYMBOL string = "UNDERLYING_SYMBOL"
const CCAPI_EM_POSITION_SIDE string = "POSITION_SIDE"
const CCAPI_EM_POSITION_QUANTITY string = "QUANTITY"
const CCAPI_EM_POSITION_COST string = "COST"
const CCAPI_EM_POSITION_ENTRY_PRICE string = "ENTRY_PRICE"
const CCAPI_EM_PARTY_ID string = "PARTY_ID"
const CCAPI_EM_ORDER_ID string = "ORDER_ID"
const CCAPI_EM_CLIENT_ORDER_ID string = "CLIENT_ORDER_ID"
const CCAPI_EM_ORIGINAL_CLIENT_ORDER_ID string = "ORIGINAL_CLIENT_ORDER_ID"
const CCAPI_EM_ORDER_CUMULATIVE_FILLED_QUANTITY string = "CUMULATIVE_FILLED_QUANTITY"
const CCAPI_EM_ORDER_REMAINING_QUANTITY string = "REMAINING_QUANTITY"
const CCAPI_EM_ORDER_CUMULATIVE_FILLED_PRICE_TIMES_QUANTITY string = "CUMULATIVE_FILLED_PRICE_TIMES_QUANTITY"
const CCAPI_EM_ORDER_AVERAGE_FILLED_PRICE string = "AVERAGE_FILLED_PRICE"
const CCAPI_EM_ORDER_INSTRUMENT string = "INSTRUMENT"
const CCAPI_INSTRUMENT_TYPE string = "INSTRUMENT_TYPE"
const CCAPI_INSTRUMENT string = "INSTRUMENT"
const CCAPI_MARGIN_MODE string = "MARGIN_MODE"
const CCAPI_EM_ORDER_STATUS string = "STATUS"
const CCAPI_EM_ORDER_LEVERAGE string = "LEVERAGE"
const CCAPI_EM_POSITION_LEVERAGE string = "LEVERAGE"
const CCAPI_EM_UNREALIZED_PNL string = "UNREALIZED_PNL"
const CCAPI_HTTP_STATUS_CODE string = "HTTP_STATUS_CODE"
const CCAPI_HTTP_PROTOCOL string = "HTTP_PROTOCOL"
const CCAPI_HTTP_HOST string = "HTTP_HOST"
const CCAPI_HTTP_PORT string = "HTTP_PORT"
const CCAPI_HTTP_PATH string = "HTTP_PATH"
const CCAPI_HTTP_METHOD string = "HTTP_METHOD"
const CCAPI_HTTP_HEADERS string = "HTTP_HEADERS"
const CCAPI_HTTP_BODY string = "HTTP_BODY"
const CCAPI_HTTP_QUERY_STRING string = "HTTP_QUERY_STRING"
const CCAPI_WEBSOCKET_MESSAGE_PAYLOAD string = "WEBSOCKET_MESSAGE_PAYLOAD"
const CCAPI_ERROR_MESSAGE string = "ERROR_MESSAGE"
const CCAPI_INFO_MESSAGE string = "INFO_MESSAGE"
const CCAPI_UNSUPPORTED_VALUE string = "UNSUPPORTED VALUE"
const CCAPI_CORRELATION_ID_GENERATED_LENGTH int = 8
const CCAPI_CREDENTIAL_DISPLAY_LENGTH int = 4
const CCAPI_COINBASE_URL_REST_BASE string = "https://api.exchange.coinbase.com"
const CCAPI_GEMINI_URL_REST_BASE string = "https://api.gemini.com"
const CCAPI_KRAKEN_URL_REST_BASE string = "https://api.kraken.com"
const CCAPI_KRAKEN_FUTURES_URL_REST_BASE string = "https://futures.kraken.com"
const CCAPI_BITSTAMP_URL_REST_BASE string = "https://www.bitstamp.net"
const CCAPI_BITFINEX_PUBLIC_URL_REST_BASE string = "https://api-pub.bitfinex.com"
const CCAPI_BITFINEX_PRIVATE_URL_REST_BASE string = "https://api.bitfinex.com"
const CCAPI_BITFINEX_GET_INSTRUMENTS_PATH string = "/v2/conf/pub:info:pair"
const CCAPI_BITMEX_URL_REST_BASE string = "https://www.bitmex.com"
const CCAPI_BINANCE_US_URL_REST_BASE string = "https://api.binance.us"
const CCAPI_BINANCE_US_CREATE_ORDER_PATH string = "/api/v3/order"
const CCAPI_BINANCE_US_LISTEN_KEY_PATH string = "/api/v3/userDataStream"
const CCAPI_BINANCE_URL_REST_BASE string = "https://api.binance.com"
const CCAPI_BINANCE_CREATE_ORDER_PATH string = "/api/v3/order"
const CCAPI_BINANCE_LISTEN_KEY_PATH string = "/api/v3/userDataStream"
const CCAPI_BINANCE_LISTEN_KEY_CROSS_MARGIN_PATH string = "/sapi/v1/userDataStream"
const CCAPI_BINANCE_LISTEN_KEY_ISOLATED_MARGIN_PATH string = "/sapi/v1/userDataStream/isolated"
const CCAPI_BINANCE_USDS_FUTURES_URL_REST_BASE string = "https://fapi.binance.com"
const CCAPI_BINANCE_USDS_FUTURES_CREATE_ORDER_PATH string = "/fapi/v1/order"
const CCAPI_BINANCE_USDS_FUTURES_LISTEN_KEY_PATH string = "/fapi/v1/listenKey"
const CCAPI_BINANCE_COIN_FUTURES_URL_REST_BASE string = "https://dapi.binance.com"
const CCAPI_BINANCE_COIN_FUTURES_CREATE_ORDER_PATH string = "/dapi/v1/order"
const CCAPI_BINANCE_COIN_FUTURES_LISTEN_KEY_PATH string = "/dapi/v1/listenKey"
const CCAPI_HUOBI_URL_REST_BASE string = "https://api.huobi.pro"
const CCAPI_HUOBI_USDT_SWAP_URL_REST_BASE string = "https://api.hbdm.com"
const CCAPI_HUOBI_COIN_SWAP_URL_REST_BASE string = "https://api.hbdm.com"
const CCAPI_HUOBI_USDT_SWAP_CREATE_ORDER_PATH string = "/linear-swap-api/v1/swap_cross_order"
const CCAPI_HUOBI_COIN_SWAP_CREATE_ORDER_PATH string = "/swap-api/v1/swap_order"
const CCAPI_HUOBI_USDT_SWAP_CANCEL_ORDER_PATH string = "/linear-swap-api/v1/swap_cross_cancel"
const CCAPI_HUOBI_COIN_SWAP_CANCEL_ORDER_PATH string = "/swap-api/v1/swap_cancel"
const CCAPI_HUOBI_USDT_SWAP_GET_ORDER_PATH string = "/linear-swap-api/v1/swap_cross_order_info"
const CCAPI_HUOBI_COIN_SWAP_GET_ORDER_PATH string = "/swap-api/v1/swap_order_info"
const CCAPI_HUOBI_USDT_SWAP_GET_OPEN_ORDERS_PATH string = "/linear-swap-api/v1/swap_cross_openorders"
const CCAPI_HUOBI_COIN_SWAP_GET_OPEN_ORDERS_PATH string = "/swap-api/v1/swap_openorders"
const CCAPI_HUOBI_USDT_SWAP_CANCEL_ALL_ORDERS_PATH string = "/linear-swap-api/v1/swap_cross_cancelall"
const CCAPI_HUOBI_COIN_SWAP_CANCEL_ALL_ORDERS_PATH string = "/swap-api/v1/swap_cancelall"
const CCAPI_HUOBI_USDT_SWAP_GET_ACCOUNT_BALANCES_PATH string = "/linear-swap-api/v1/swap_cross_account_info"
const CCAPI_HUOBI_COIN_SWAP_GET_ACCOUNT_BALANCES_PATH string = "/swap-api/v1/swap_account_info"
const CCAPI_HUOBI_USDT_SWAP_GET_ACCOUNT_POSITIONS_PATH string = "/linear-swap-api/v1/swap_cross_position_info"
const CCAPI_HUOBI_COIN_SWAP_GET_ACCOUNT_POSITIONS_PATH string = "/swap-api/v1/swap_position_info"
const CCAPI_HUOBI_USDT_SWAP_GET_RECENT_TRADES_PATH string = "/linear-swap-ex/market/history/trade"
const CCAPI_HUOBI_COIN_SWAP_GET_RECENT_TRADES_PATH string = "/swap-ex/market/history/trade"
const CCAPI_OKX_URL_REST_BASE string = "https://www.okx.com"
const CCAPI_ERISX_URL_REST_BASE string = "https://trade-api.erisx.com"
const CCAPI_KUCOIN_URL_REST_BASE string = "https://api.kucoin.com"
const CCAPI_KUCOIN_FUTURES_URL_REST_BASE string = "https://api-futures.kucoin.com"
const CCAPI_FTX_URL_REST_BASE string = "https://ftx.com"
const CCAPI_FTX_US_URL_REST_BASE string = "https://ftx.us"
const CCAPI_DERIBIT_URL_REST_BASE string = "https://www.deribit.com"
const CCAPI_GATEIO_URL_REST_BASE string = "https://api.gateio.ws"
const CCAPI_GATEIO_PERPETUAL_FUTURES_URL_REST_BASE string = "https://fx-api.gateio.ws"
const CCAPI_CRYPTOCOM_URL_REST_BASE string = "https://api.crypto.com"
const CCAPI_BYBIT_URL_REST_BASE string = "https://api.bybit.com"
const CCAPI_ASCENDEX_URL_REST_BASE string = "https://ascendex.com"
const CCAPI_BITGET_URL_REST_BASE string = "https://api.bitget.com"
const CCAPI_BITGET_FUTURES_URL_REST_BASE string = "https://api.bitget.com"
const CCAPI_BITMART_URL_REST_BASE string = "https://api-cloud.bitmart.com"
const CCAPI_MEXC_URL_REST_BASE string = "https://api.mexc.com"
const CCAPI_MEXC_CREATE_ORDER_PATH string = "/api/v3/order"
const CCAPI_MEXC_LISTEN_KEY_PATH string = "/api/v3/userDataStream"
const CCAPI_MEXC_FUTURES_URL_REST_BASE string = "https://contract.mexc.com"
const CCAPI_WHITEBIT_URL_REST_BASE string = "https://whitebit.com"
const CCAPI_COINBASE_URL_WS_BASE string = "wss://ws-feed.exchange.coinbase.com"
const CCAPI_GEMINI_URL_WS_BASE string = "wss://api.gemini.com"
const CCAPI_KRAKEN_URL_WS_BASE string = "wss://ws.kraken.com"
const CCAPI_KRAKEN_URL_WS_BASE_PRIVATE string = "wss://ws-auth.kraken.com"
const CCAPI_KRAKEN_FUTURES_URL_WS_BASE string = "wss://futures.kraken.com"
const CCAPI_BITSTAMP_URL_WS_BASE string = "wss://ws.bitstamp.net"
const CCAPI_BITFINEX_PUBLIC_URL_WS_BASE string = "wss://api-pub.bitfinex.com"
const CCAPI_BITFINEX_PRIVATE_URL_WS_BASE string = "wss://api.bitfinex.com"
const CCAPI_BITMEX_URL_WS_BASE string = "wss://www.bitmex.com"
const CCAPI_BINANCE_US_URL_WS_BASE string = "wss://stream.binance.us:9443"
const CCAPI_BINANCE_URL_WS_BASE string = "wss://stream.binance.com:9443"
const CCAPI_BINANCE_USDS_FUTURES_URL_WS_BASE string = "wss://fstream.binance.com"
const CCAPI_BINANCE_COIN_FUTURES_URL_WS_BASE string = "wss://dstream.binance.com"
const CCAPI_HUOBI_URL_WS_BASE string = "wss://api.huobi.pro"
const CCAPI_HUOBI_USDT_SWAP_URL_WS_BASE string = "wss://api.hbdm.com"
const CCAPI_HUOBI_USDT_SWAP_SUBSCRIBE_ORDER_DATA_TOPIC string = "orders_cross"
const CCAPI_HUOBI_USDT_SWAP_SUBSCRIBE_MATCH_ORDER_DATA_TOPIC string = "matchOrders_cross"
const CCAPI_HUOBI_COIN_SWAP_URL_WS_BASE string = "wss://api.hbdm.com"
const CCAPI_HUOBI_COIN_SWAP_SUBSCRIBE_ORDER_DATA_TOPIC string = "orders"
const CCAPI_HUOBI_COIN_SWAP_SUBSCRIBE_MATCH_ORDER_DATA_TOPIC string = "matchOrders"
const CCAPI_OKX_URL_WS_BASE string = "wss://ws.okx.com:8443"
const CCAPI_OKX_PUBLIC_WS_PATH string = "/ws/v5/public"
const CCAPI_OKX_PRIVATE_WS_PATH string = "/ws/v5/private"
const CCAPI_OKX_BUSINESS_WS_PATH string = "/ws/v5/business"
const CCAPI_ERISX_URL_WS_BASE string = "wss://publicmd-api.erisx.com"
const CCAPI_FTX_URL_WS_BASE string = "wss://ftx.com"
const CCAPI_FTX_US_URL_WS_BASE string = "wss://ftx.us"
const CCAPI_DERIBIT_URL_WS_BASE string = "wss://www.deribit.com"
const CCAPI_GATEIO_URL_WS_BASE string = "wss://api.gateio.ws"
const CCAPI_GATEIO_PERPETUAL_FUTURES_URL_WS_BASE string = "wss://fx-ws.gateio.ws"
const CCAPI_CRYPTOCOM_URL_WS_BASE string = "wss://stream.crypto.com"
const CCAPI_BYBIT_URL_WS_BASE string = "wss://stream.bybit.com"
const CCAPI_ASCENDEX_URL_WS_BASE string = "wss://ascendex.com"
const CCAPI_BITGET_URL_WS_BASE string = "wss://ws.bitget.com"
const CCAPI_BITGET_FUTURES_URL_WS_BASE string = "wss://ws.bitget.com"
const CCAPI_BITMART_URL_WS_BASE string = "wss://ws-manager-compress.bitmart.com"
const CCAPI_MEXC_URL_WS_BASE string = "wss://wbs.mexc.com"
const CCAPI_MEXC_FUTURES_URL_WS_BASE string = "wss://contract.mexc.com"
const CCAPI_WHITEBIT_URL_WS_BASE string = "wss://api.whitebit.com"
const CCAPI_COINBASE_URL_FIX_BASE string = "tcp+ssl://fix.exchange.coinbase.com:4198"
const CCAPI_GEMINI_URL_FIX_HOST string = ""
const CCAPI_GEMINI_URL_FIX_PORT string = ""
const CCAPI_FTX_URL_FIX_BASE string = "tcp+ssl://fix.ftx.com:4363"
const CCAPI_FTX_US_URL_FIX_BASE string = "tcp+ssl://fix.ftx.us:4363"
const CCAPI_DERIBIT_URL_FIX_BASE string = "www.deribit.com:9883"
const CCAPI_COINBASE_API_KEY string = "COINBASE_API_KEY"
const CCAPI_COINBASE_API_SECRET string = "COINBASE_API_SECRET"
const CCAPI_COINBASE_API_PASSPHRASE string = "COINBASE_API_PASSPHRASE"
const CCAPI_GEMINI_API_KEY string = "GEMINI_API_KEY"
const CCAPI_GEMINI_API_SECRET string = "GEMINI_API_SECRET"
const CCAPI_GEMINI_API_SENDER_COMP_ID string = ""
const CCAPI_GEMINI_API_TARGET_COMP_ID string = ""
const CCAPI_KRAKEN_API_KEY string = "KRAKEN_API_KEY"
const CCAPI_KRAKEN_API_SECRET string = "KRAKEN_API_SECRET"
const CCAPI_KRAKEN_FUTURES_API_KEY string = "KRAKEN_FUTURES_API_KEY"
const CCAPI_KRAKEN_FUTURES_API_SECRET string = "KRAKEN_FUTURES_API_SECRET"
const CCAPI_BITSTAMP_API_KEY string = "BITSTAMP_API_KEY"
const CCAPI_BITSTAMP_API_SECRET string = "BITSTAMP_API_SECRET"
const CCAPI_BITFINEX_API_KEY string = "BITFINEX_API_KEY"
const CCAPI_BITFINEX_API_SECRET string = "BITFINEX_API_SECRET"
const CCAPI_BITMEX_API_KEY string = "BITMEX_API_KEY"
const CCAPI_BITMEX_API_SECRET string = "BITMEX_API_SECRET"
const CCAPI_BINANCE_US_API_KEY string = "BINANCE_US_API_KEY"
const CCAPI_BINANCE_US_API_SECRET string = "BINANCE_US_API_SECRET"
const CCAPI_BINANCE_API_KEY string = "BINANCE_API_KEY"
const CCAPI_BINANCE_API_SECRET string = "BINANCE_API_SECRET"
const CCAPI_BINANCE_USDS_FUTURES_API_KEY string = "BINANCE_USDS_FUTURES_API_KEY"
const CCAPI_BINANCE_USDS_FUTURES_API_SECRET string = "BINANCE_USDS_FUTURES_API_SECRET"
const CCAPI_BINANCE_COIN_FUTURES_API_KEY string = "BINANCE_COIN_FUTURES_API_KEY"
const CCAPI_BINANCE_COIN_FUTURES_API_SECRET string = "BINANCE_COIN_FUTURES_API_SECRET"
const CCAPI_HUOBI_API_KEY string = "HUOBI_API_KEY"
const CCAPI_HUOBI_API_SECRET string = "HUOBI_API_SECRET"
const CCAPI_HUOBI_USDT_SWAP_API_KEY string = "HUOBI_USDT_SWAP_API_KEY"
const CCAPI_HUOBI_USDT_SWAP_API_SECRET string = "HUOBI_USDT_SWAP_API_SECRET"
const CCAPI_HUOBI_COIN_SWAP_API_KEY string = "HUOBI_COIN_SWAP_API_KEY"
const CCAPI_HUOBI_COIN_SWAP_API_SECRET string = "HUOBI_COIN_SWAP_API_SECRET"
const CCAPI_OKX_API_KEY string = "OKX_API_KEY"
const CCAPI_OKX_API_SECRET string = "OKX_API_SECRET"
const CCAPI_OKX_API_PASSPHRASE string = "OKX_API_PASSPHRASE"
const CCAPI_OKX_API_X_SIMULATED_TRADING string = "OKX_API_X_SIMULATED_TRADING"
const CCAPI_ERISX_API_KEY string = "ERISX_API_KEY"
const CCAPI_ERISX_API_SECRET string = "ERISX_API_SECRET"
const CCAPI_KUCOIN_API_KEY string = "KUCOIN_API_KEY"
const CCAPI_KUCOIN_API_SECRET string = "KUCOIN_API_SECRET"
const CCAPI_KUCOIN_API_PASSPHRASE string = "KUCOIN_API_PASSPHRASE"
const CCAPI_KUCOIN_API_KEY_VERSION string = "KUCOIN_API_KEY_VERSION"
const CCAPI_KUCOIN_FUTURES_API_KEY string = "KUCOIN_FUTURES_API_KEY"
const CCAPI_KUCOIN_FUTURES_API_SECRET string = "KUCOIN_FUTURES_API_SECRET"
const CCAPI_KUCOIN_FUTURES_API_PASSPHRASE string = "KUCOIN_FUTURES_API_PASSPHRASE"
const CCAPI_FTX_API_KEY string = "FTX_API_KEY"
const CCAPI_FTX_API_SECRET string = "FTX_API_SECRET"
const CCAPI_FTX_API_SUBACCOUNT string = "FTX_API_SUBACCOUNT"
const CCAPI_FTX_US_API_KEY string = "FTX_US_API_KEY"
const CCAPI_FTX_US_API_SECRET string = "FTX_US_API_SECRET"
const CCAPI_FTX_US_API_SUBACCOUNT string = "FTX_US_API_SUBACCOUNT"
const CCAPI_DERIBIT_CLIENT_ID string = "DERIBIT_CLIENT_ID"
const CCAPI_DERIBIT_CLIENT_SECRET string = "DERIBIT_CLIENT_SECRET"
const CCAPI_GATEIO_API_KEY string = "GATEIO_API_KEY"
const CCAPI_GATEIO_API_SECRET string = "GATEIO_API_SECRET"
const CCAPI_GATEIO_PERPETUAL_FUTURES_API_KEY string = "GATEIO_PERPETUAL_FUTURES_API_KEY"
const CCAPI_GATEIO_PERPETUAL_FUTURES_API_SECRET string = "GATEIO_PERPETUAL_FUTURES_API_SECRET"
const CCAPI_CRYPTOCOM_API_KEY string = "CRYPTOCOM_API_KEY"
const CCAPI_CRYPTOCOM_API_SECRET string = "CRYPTOCOM_API_SECRET"
const CCAPI_BYBIT_API_KEY string = "BYBIT_API_KEY"
const CCAPI_BYBIT_API_SECRET string = "BYBIT_API_SECRET"
const CCAPI_ASCENDEX_API_KEY string = "ASCENDEX_API_KEY"
const CCAPI_ASCENDEX_API_SECRET string = "ASCENDEX_API_SECRET"
const CCAPI_ASCENDEX_API_ACCOUNT_GROUP string = "ASCENDEX_API_ACCOUNT_GROUP"
const CCAPI_BITGET_API_KEY string = "BITGET_API_KEY"
const CCAPI_BITGET_API_SECRET string = "BITGET_API_SECRET"
const CCAPI_BITGET_API_PASSPHRASE string = "BITGET_API_PASSPHRASE"
const CCAPI_BITGET_FUTURES_API_KEY string = "BITGET_FUTURES_API_KEY"
const CCAPI_BITGET_FUTURES_API_SECRET string = "BITGET_FUTURES_API_SECRET"
const CCAPI_BITGET_FUTURES_API_PASSPHRASE string = "BITGET_FUTURES_API_PASSPHRASE"
const CCAPI_BITMART_API_KEY string = "BITMART_API_KEY"
const CCAPI_BITMART_API_SECRET string = "BITMART_API_SECRET"
const CCAPI_BITMART_API_MEMO string = "BITMART_API_MEMO"
const CCAPI_MEXC_API_KEY string = "MEXC_API_KEY"
const CCAPI_MEXC_API_SECRET string = "MEXC_API_SECRET"
const CCAPI_MEXC_FUTURES_API_KEY string = "MEXC_FUTURES_API_KEY"
const CCAPI_MEXC_FUTURES_API_SECRET string = "MEXC_FUTURES_API_SECRET"
const CCAPI_HTTP_PORT_DEFAULT string = "80"
const CCAPI_HTTPS_PORT_DEFAULT string = "443"
const CCAPI_BITMEX_API_RECEIVE_WINDOW_SECONDS int = 5
const CCAPI_BITFINEX_STREAM_TRADE_RAW_MESSAGE_TYPE string = "tu"
const CCAPI_AUTHORIZATION string = "AUTHORIZATION"
const CCAPI_HFFIX_READ_MESSAGE_CHUNK_SIZE int = 4096
const CCAPI_FIX_PROTOCOL_VERSION_COINBASE string = "FIX.4.2"
const CCAPI_FIX_PROTOCOL_VERSION_GEMINI string = "FIX.4.4"
const CCAPI_FIX_PROTOCOL_VERSION_FTX string = "FIX.4.2"
const CCAPI_FIX_PROTOCOL_VERSION_FTX_US string = "FIX.4.2"
const CCAPI_FIX_PROTOCOL_VERSION_DERIBIT string = "FIX.4.4"
const CCAPI_BYBIT_BASE_API_RECEIVE_WINDOW_MILLISECONDS int = 5000
const CCAPI_OKX_API_BROKER_CODE string = "9cbc6a17a1fcBCDE"
const CCAPI_KUCOIN_API_PARTNER_PLATFORM_ID string = "CCAPI"
const CCAPI_KUCOIN_API_PARTNER_PRIVATE_KEY string = "acd80910-9304-4625-93c0-dabe644d2ae3"
const CCAPI_BITGET_API_CHANNEL_API_CODE string = "95mpa"
const CCAPI_GATEIO_API_CHANNEL_ID string = "cryptochassis"
const CCAPI_MEXC_API_SOURCE string = "CHAS"
const CCAPI_BYBIT_API_BROKER_ID string = "Vs000261"
const CCAPI_BINANCE_API_LINK_ID string = "XHKUG2CH"
const CCAPI_BINANCE_USDS_FUTURES_API_LINK_ID string = "QzcVS63u"
const CCAPI_BITMART_BROKER_ID string = "cryptochassis01"
type SwigcptrElement uintptr

func (p SwigcptrElement) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrElement) SwigIsElement() {
}

func NewElement__SWIG_0(arg1 bool) (_swig_ret Element) {
	var swig_r Element
	_swig_i_0 := arg1
	swig_r = (Element)(SwigcptrElement(C._wrap_new_Element__SWIG_0_ccapi_00042a34e9364138(C._Bool(_swig_i_0))))
	return swig_r
}

func NewElement__SWIG_1() (_swig_ret Element) {
	var swig_r Element
	swig_r = (Element)(SwigcptrElement(C._wrap_new_Element__SWIG_1_ccapi_00042a34e9364138()))
	return swig_r
}

func NewElement(a ...interface{}) Element {
	argc := len(a)
	if argc == 0 {
		return NewElement__SWIG_1()
	}
	if argc == 1 {
		return NewElement__SWIG_0(a[0].(bool))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrElement) Insert__SWIG_0(arg2 string, arg3 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_Element_insert__SWIG_0_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), *(*C.swig_type_53)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_54)(unsafe.Pointer(&_swig_i_2)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
}

func (arg1 SwigcptrElement) Insert__SWIG_1(arg2 int, arg3 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_Element_insert__SWIG_1_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), *(*C.swig_type_55)(unsafe.Pointer(&_swig_i_2)))
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
}

func (p SwigcptrElement) Insert(a ...interface{}) {
	argc := len(a)
	if argc == 2 {
		if _, ok := a[0].(string); !ok {
			goto check_1
		}
		p.Insert__SWIG_0(a[0].(string), a[1].(string))
		return
	}
check_1:
	if argc == 2 {
		p.Insert__SWIG_1(a[0].(int), a[1].(string))
		return
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrElement) Emplace__SWIG_0(arg2 *string, arg3 *string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_Element_emplace__SWIG_0_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), C.swig_voidp(_swig_i_1), C.swig_voidp(_swig_i_2))
}

func (arg1 SwigcptrElement) Emplace__SWIG_1(arg2 int, arg3 *string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	C._wrap_Element_emplace__SWIG_1_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.swig_voidp(_swig_i_2))
}

func (p SwigcptrElement) Emplace(a ...interface{}) {
	argc := len(a)
	if argc == 2 {
		if _, ok := a[0].(*string); !ok {
			goto check_1
		}
		p.Emplace__SWIG_0(a[0].(*string), a[1].(*string))
		return
	}
check_1:
	if argc == 2 {
		p.Emplace__SWIG_1(a[0].(int), a[1].(*string))
		return
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrElement) Has__SWIG_0(arg2 string) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (bool)(C._wrap_Element_has__SWIG_0_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), *(*C.swig_type_56)(unsafe.Pointer(&_swig_i_1))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func (arg1 SwigcptrElement) Has__SWIG_1(arg2 int) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (bool)(C._wrap_Element_has__SWIG_1_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1)))
	return swig_r
}

func (p SwigcptrElement) Has(a ...interface{}) bool {
	argc := len(a)
	if argc == 1 {
		if _, ok := a[0].(string); !ok {
			goto check_1
		}
		return p.Has__SWIG_0(a[0].(string))
	}
check_1:
	if argc == 1 {
		return p.Has__SWIG_1(a[0].(int))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrElement) GetValue__SWIG_0(arg2 string, arg3 string) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r_p := C._wrap_Element_getValue__SWIG_0_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), *(*C.swig_type_58)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_59)(unsafe.Pointer(&_swig_i_2)))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (arg1 SwigcptrElement) GetValue__SWIG_1(arg2 string) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r_p := C._wrap_Element_getValue__SWIG_1_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), *(*C.swig_type_61)(unsafe.Pointer(&_swig_i_1)))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (arg1 SwigcptrElement) GetValue__SWIG_2(arg2 int, arg3 string) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r_p := C._wrap_Element_getValue__SWIG_2_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), *(*C.swig_type_63)(unsafe.Pointer(&_swig_i_2)))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (arg1 SwigcptrElement) GetValue__SWIG_3(arg2 int) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r_p := C._wrap_Element_getValue__SWIG_3_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (p SwigcptrElement) GetValue(a ...interface{}) string {
	argc := len(a)
	if argc == 1 {
		if _, ok := a[0].(string); !ok {
			goto check_1
		}
		return p.GetValue__SWIG_1(a[0].(string))
	}
check_1:
	if argc == 1 {
		return p.GetValue__SWIG_3(a[0].(int))
	}
	if argc == 2 {
		if _, ok := a[0].(string); !ok {
			goto check_3
		}
		return p.GetValue__SWIG_0(a[0].(string), a[1].(string))
	}
check_3:
	if argc == 2 {
		return p.GetValue__SWIG_2(a[0].(int), a[1].(string))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrElement) ToString() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_Element_toString_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (arg1 SwigcptrElement) ToStringPretty__SWIG_0(arg2 int, arg3 int, arg4 bool) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r_p := C._wrap_Element_toStringPretty__SWIG_0_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.swig_intgo(_swig_i_2), C._Bool(_swig_i_3))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (arg1 SwigcptrElement) ToStringPretty__SWIG_1(arg2 int, arg3 int) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r_p := C._wrap_Element_toStringPretty__SWIG_1_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.swig_intgo(_swig_i_2))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (arg1 SwigcptrElement) ToStringPretty__SWIG_2(arg2 int) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r_p := C._wrap_Element_toStringPretty__SWIG_2_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (arg1 SwigcptrElement) ToStringPretty__SWIG_3() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_Element_toStringPretty__SWIG_3_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (p SwigcptrElement) ToStringPretty(a ...interface{}) string {
	argc := len(a)
	if argc == 0 {
		return p.ToStringPretty__SWIG_3()
	}
	if argc == 1 {
		return p.ToStringPretty__SWIG_2(a[0].(int))
	}
	if argc == 2 {
		return p.ToStringPretty__SWIG_1(a[0].(int), a[1].(int))
	}
	if argc == 3 {
		return p.ToStringPretty__SWIG_0(a[0].(int), a[1].(int), a[2].(bool))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrElement) GetNameValueMap() (_swig_ret MapStringString) {
	var swig_r MapStringString
	_swig_i_0 := arg1
	swig_r = (MapStringString)(SwigcptrMapStringString(C._wrap_Element_getNameValueMap_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrElement) GetTagValueMap() (_swig_ret MapIntString) {
	var swig_r MapIntString
	_swig_i_0 := arg1
	swig_r = (MapIntString)(SwigcptrMapIntString(C._wrap_Element_getTagValueMap_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func DeleteElement(arg1 Element) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_Element_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0))
}

type Element interface {
	Swigcptr() uintptr
	SwigIsElement()
	Insert(a ...interface{})
	Emplace(a ...interface{})
	Has(a ...interface{}) bool
	GetValue(a ...interface{}) string
	ToString() (_swig_ret string)
	ToStringPretty(a ...interface{}) string
	GetNameValueMap() (_swig_ret MapStringString)
	GetTagValueMap() (_swig_ret MapIntString)
}

type SwigcptrMessage uintptr

func (p SwigcptrMessage) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrMessage) SwigIsMessage() {
}

type CcapiMessageRecapType int
func _swig_getMessage_RecapType_UNKNOWN_Message() (_swig_ret CcapiMessageRecapType) {
	var swig_r CcapiMessageRecapType
	swig_r = (CcapiMessageRecapType)(C._wrap_RecapType_UNKNOWN_Message_ccapi_00042a34e9364138())
	return swig_r
}

var MessageRecapType_UNKNOWN CcapiMessageRecapType = _swig_getMessage_RecapType_UNKNOWN_Message()
func _swig_getMessage_RecapType_SOLICITED_Message() (_swig_ret CcapiMessageRecapType) {
	var swig_r CcapiMessageRecapType
	swig_r = (CcapiMessageRecapType)(C._wrap_RecapType_SOLICITED_Message_ccapi_00042a34e9364138())
	return swig_r
}

var MessageRecapType_SOLICITED CcapiMessageRecapType = _swig_getMessage_RecapType_SOLICITED_Message()
func _swig_getMessage_RecapType_NONE_Message() (_swig_ret CcapiMessageRecapType) {
	var swig_r CcapiMessageRecapType
	swig_r = (CcapiMessageRecapType)(C._wrap_RecapType_NONE_Message_ccapi_00042a34e9364138())
	return swig_r
}

var MessageRecapType_NONE CcapiMessageRecapType = _swig_getMessage_RecapType_NONE_Message()
func MessageRecapTypeToString(arg1 CcapiMessageRecapType) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_Message_recapTypeToString_ccapi_00042a34e9364138(C.swig_intgo(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

type CcapiMessageType int
func _swig_getMessage_Type_UNKNOWN_Message() (_swig_ret CcapiMessageType) {
	var swig_r CcapiMessageType
	swig_r = (CcapiMessageType)(C._wrap_Type_UNKNOWN_Message_ccapi_00042a34e9364138())
	return swig_r
}

var MessageType_UNKNOWN CcapiMessageType = _swig_getMessage_Type_UNKNOWN_Message()
func _swig_getMessage_Type_AUTHORIZATION_SUCCESS_Message() (_swig_ret CcapiMessageType) {
	var swig_r CcapiMessageType
	swig_r = (CcapiMessageType)(C._wrap_Type_AUTHORIZATION_SUCCESS_Message_ccapi_00042a34e9364138())
	return swig_r
}

var MessageType_AUTHORIZATION_SUCCESS CcapiMessageType = _swig_getMessage_Type_AUTHORIZATION_SUCCESS_Message()
func _swig_getMessage_Type_AUTHORIZATION_FAILURE_Message() (_swig_ret CcapiMessageType) {
	var swig_r CcapiMessageType
	swig_r = (CcapiMessageType)(C._wrap_Type_AUTHORIZATION_FAILURE_Message_ccapi_00042a34e9364138())
	return swig_r
}

var MessageType_AUTHORIZATION_FAILURE CcapiMessageType = _swig_getMessage_Type_AUTHORIZATION_FAILURE_Message()
func _swig_getMessage_Type_MARKET_DATA_EVENTS_MARKET_DEPTH_Message() (_swig_ret CcapiMessageType) {
	var swig_r CcapiMessageType
	swig_r = (CcapiMessageType)(C._wrap_Type_MARKET_DATA_EVENTS_MARKET_DEPTH_Message_ccapi_00042a34e9364138())
	return swig_r
}

var MessageType_MARKET_DATA_EVENTS_MARKET_DEPTH CcapiMessageType = _swig_getMessage_Type_MARKET_DATA_EVENTS_MARKET_DEPTH_Message()
func _swig_getMessage_Type_MARKET_DATA_EVENTS_TRADE_Message() (_swig_ret CcapiMessageType) {
	var swig_r CcapiMessageType
	swig_r = (CcapiMessageType)(C._wrap_Type_MARKET_DATA_EVENTS_TRADE_Message_ccapi_00042a34e9364138())
	return swig_r
}

var MessageType_MARKET_DATA_EVENTS_TRADE CcapiMessageType = _swig_getMessage_Type_MARKET_DATA_EVENTS_TRADE_Message()
func _swig_getMessage_Type_MARKET_DATA_EVENTS_AGG_TRADE_Message() (_swig_ret CcapiMessageType) {
	var swig_r CcapiMessageType
	swig_r = (CcapiMessageType)(C._wrap_Type_MARKET_DATA_EVENTS_AGG_TRADE_Message_ccapi_00042a34e9364138())
	return swig_r
}

var MessageType_MARKET_DATA_EVENTS_AGG_TRADE CcapiMessageType = _swig_getMessage_Type_MARKET_DATA_EVENTS_AGG_TRADE_Message()
func _swig_getMessage_Type_MARKET_DATA_EVENTS_CANDLESTICK_Message() (_swig_ret CcapiMessageType) {
	var swig_r CcapiMessageType
	swig_r = (CcapiMessageType)(C._wrap_Type_MARKET_DATA_EVENTS_CANDLESTICK_Message_ccapi_00042a34e9364138())
	return swig_r
}

var MessageType_MARKET_DATA_EVENTS_CANDLESTICK CcapiMessageType = _swig_getMessage_Type_MARKET_DATA_EVENTS_CANDLESTICK_Message()
func _swig_getMessage_Type_EXECUTION_MANAGEMENT_EVENTS_ORDER_UPDATE_Message() (_swig_ret CcapiMessageType) {
	var swig_r CcapiMessageType
	swig_r = (CcapiMessageType)(C._wrap_Type_EXECUTION_MANAGEMENT_EVENTS_ORDER_UPDATE_Message_ccapi_00042a34e9364138())
	return swig_r
}

var MessageType_EXECUTION_MANAGEMENT_EVENTS_ORDER_UPDATE CcapiMessageType = _swig_getMessage_Type_EXECUTION_MANAGEMENT_EVENTS_ORDER_UPDATE_Message()
func _swig_getMessage_Type_EXECUTION_MANAGEMENT_EVENTS_PRIVATE_TRADE_Message() (_swig_ret CcapiMessageType) {
	var swig_r CcapiMessageType
	swig_r = (CcapiMessageType)(C._wrap_Type_EXECUTION_MANAGEMENT_EVENTS_PRIVATE_TRADE_Message_ccapi_00042a34e9364138())
	return swig_r
}

var MessageType_EXECUTION_MANAGEMENT_EVENTS_PRIVATE_TRADE CcapiMessageType = _swig_getMessage_Type_EXECUTION_MANAGEMENT_EVENTS_PRIVATE_TRADE_Message()
func _swig_getMessage_Type_EXECUTION_MANAGEMENT_EVENTS_BALANCE_UPDATE_Message() (_swig_ret CcapiMessageType) {
	var swig_r CcapiMessageType
	swig_r = (CcapiMessageType)(C._wrap_Type_EXECUTION_MANAGEMENT_EVENTS_BALANCE_UPDATE_Message_ccapi_00042a34e9364138())
	return swig_r
}

var MessageType_EXECUTION_MANAGEMENT_EVENTS_BALANCE_UPDATE CcapiMessageType = _swig_getMessage_Type_EXECUTION_MANAGEMENT_EVENTS_BALANCE_UPDATE_Message()
func _swig_getMessage_Type_EXECUTION_MANAGEMENT_EVENTS_POSITION_UPDATE_Message() (_swig_ret CcapiMessageType) {
	var swig_r CcapiMessageType
	swig_r = (CcapiMessageType)(C._wrap_Type_EXECUTION_MANAGEMENT_EVENTS_POSITION_UPDATE_Message_ccapi_00042a34e9364138())
	return swig_r
}

var MessageType_EXECUTION_MANAGEMENT_EVENTS_POSITION_UPDATE CcapiMessageType = _swig_getMessage_Type_EXECUTION_MANAGEMENT_EVENTS_POSITION_UPDATE_Message()
func _swig_getMessage_Type_SUBSCRIPTION_STARTED_Message() (_swig_ret CcapiMessageType) {
	var swig_r CcapiMessageType
	swig_r = (CcapiMessageType)(C._wrap_Type_SUBSCRIPTION_STARTED_Message_ccapi_00042a34e9364138())
	return swig_r
}

var MessageType_SUBSCRIPTION_STARTED CcapiMessageType = _swig_getMessage_Type_SUBSCRIPTION_STARTED_Message()
func _swig_getMessage_Type_SUBSCRIPTION_FAILURE_Message() (_swig_ret CcapiMessageType) {
	var swig_r CcapiMessageType
	swig_r = (CcapiMessageType)(C._wrap_Type_SUBSCRIPTION_FAILURE_Message_ccapi_00042a34e9364138())
	return swig_r
}

var MessageType_SUBSCRIPTION_FAILURE CcapiMessageType = _swig_getMessage_Type_SUBSCRIPTION_FAILURE_Message()
func _swig_getMessage_Type_SESSION_CONNECTION_UP_Message() (_swig_ret CcapiMessageType) {
	var swig_r CcapiMessageType
	swig_r = (CcapiMessageType)(C._wrap_Type_SESSION_CONNECTION_UP_Message_ccapi_00042a34e9364138())
	return swig_r
}

var MessageType_SESSION_CONNECTION_UP CcapiMessageType = _swig_getMessage_Type_SESSION_CONNECTION_UP_Message()
func _swig_getMessage_Type_SESSION_CONNECTION_DOWN_Message() (_swig_ret CcapiMessageType) {
	var swig_r CcapiMessageType
	swig_r = (CcapiMessageType)(C._wrap_Type_SESSION_CONNECTION_DOWN_Message_ccapi_00042a34e9364138())
	return swig_r
}

var MessageType_SESSION_CONNECTION_DOWN CcapiMessageType = _swig_getMessage_Type_SESSION_CONNECTION_DOWN_Message()
func _swig_getMessage_Type_INCORRECT_STATE_FOUND_Message() (_swig_ret CcapiMessageType) {
	var swig_r CcapiMessageType
	swig_r = (CcapiMessageType)(C._wrap_Type_INCORRECT_STATE_FOUND_Message_ccapi_00042a34e9364138())
	return swig_r
}

var MessageType_INCORRECT_STATE_FOUND CcapiMessageType = _swig_getMessage_Type_INCORRECT_STATE_FOUND_Message()
func _swig_getMessage_Type_CREATE_ORDER_Message() (_swig_ret CcapiMessageType) {
	var swig_r CcapiMessageType
	swig_r = (CcapiMessageType)(C._wrap_Type_CREATE_ORDER_Message_ccapi_00042a34e9364138())
	return swig_r
}

var MessageType_CREATE_ORDER CcapiMessageType = _swig_getMessage_Type_CREATE_ORDER_Message()
func _swig_getMessage_Type_CANCEL_ORDER_Message() (_swig_ret CcapiMessageType) {
	var swig_r CcapiMessageType
	swig_r = (CcapiMessageType)(C._wrap_Type_CANCEL_ORDER_Message_ccapi_00042a34e9364138())
	return swig_r
}

var MessageType_CANCEL_ORDER CcapiMessageType = _swig_getMessage_Type_CANCEL_ORDER_Message()
func _swig_getMessage_Type_GET_ORDER_Message() (_swig_ret CcapiMessageType) {
	var swig_r CcapiMessageType
	swig_r = (CcapiMessageType)(C._wrap_Type_GET_ORDER_Message_ccapi_00042a34e9364138())
	return swig_r
}

var MessageType_GET_ORDER CcapiMessageType = _swig_getMessage_Type_GET_ORDER_Message()
func _swig_getMessage_Type_GET_OPEN_ORDERS_Message() (_swig_ret CcapiMessageType) {
	var swig_r CcapiMessageType
	swig_r = (CcapiMessageType)(C._wrap_Type_GET_OPEN_ORDERS_Message_ccapi_00042a34e9364138())
	return swig_r
}

var MessageType_GET_OPEN_ORDERS CcapiMessageType = _swig_getMessage_Type_GET_OPEN_ORDERS_Message()
func _swig_getMessage_Type_CANCEL_OPEN_ORDERS_Message() (_swig_ret CcapiMessageType) {
	var swig_r CcapiMessageType
	swig_r = (CcapiMessageType)(C._wrap_Type_CANCEL_OPEN_ORDERS_Message_ccapi_00042a34e9364138())
	return swig_r
}

var MessageType_CANCEL_OPEN_ORDERS CcapiMessageType = _swig_getMessage_Type_CANCEL_OPEN_ORDERS_Message()
func _swig_getMessage_Type_GET_ACCOUNTS_Message() (_swig_ret CcapiMessageType) {
	var swig_r CcapiMessageType
	swig_r = (CcapiMessageType)(C._wrap_Type_GET_ACCOUNTS_Message_ccapi_00042a34e9364138())
	return swig_r
}

var MessageType_GET_ACCOUNTS CcapiMessageType = _swig_getMessage_Type_GET_ACCOUNTS_Message()
func _swig_getMessage_Type_GET_ACCOUNT_BALANCES_Message() (_swig_ret CcapiMessageType) {
	var swig_r CcapiMessageType
	swig_r = (CcapiMessageType)(C._wrap_Type_GET_ACCOUNT_BALANCES_Message_ccapi_00042a34e9364138())
	return swig_r
}

var MessageType_GET_ACCOUNT_BALANCES CcapiMessageType = _swig_getMessage_Type_GET_ACCOUNT_BALANCES_Message()
func _swig_getMessage_Type_GET_ACCOUNT_POSITIONS_Message() (_swig_ret CcapiMessageType) {
	var swig_r CcapiMessageType
	swig_r = (CcapiMessageType)(C._wrap_Type_GET_ACCOUNT_POSITIONS_Message_ccapi_00042a34e9364138())
	return swig_r
}

var MessageType_GET_ACCOUNT_POSITIONS CcapiMessageType = _swig_getMessage_Type_GET_ACCOUNT_POSITIONS_Message()
func _swig_getMessage_Type_GET_RECENT_TRADES_Message() (_swig_ret CcapiMessageType) {
	var swig_r CcapiMessageType
	swig_r = (CcapiMessageType)(C._wrap_Type_GET_RECENT_TRADES_Message_ccapi_00042a34e9364138())
	return swig_r
}

var MessageType_GET_RECENT_TRADES CcapiMessageType = _swig_getMessage_Type_GET_RECENT_TRADES_Message()
func _swig_getMessage_Type_GET_HISTORICAL_TRADES_Message() (_swig_ret CcapiMessageType) {
	var swig_r CcapiMessageType
	swig_r = (CcapiMessageType)(C._wrap_Type_GET_HISTORICAL_TRADES_Message_ccapi_00042a34e9364138())
	return swig_r
}

var MessageType_GET_HISTORICAL_TRADES CcapiMessageType = _swig_getMessage_Type_GET_HISTORICAL_TRADES_Message()
func _swig_getMessage_Type_GET_RECENT_AGG_TRADES_Message() (_swig_ret CcapiMessageType) {
	var swig_r CcapiMessageType
	swig_r = (CcapiMessageType)(C._wrap_Type_GET_RECENT_AGG_TRADES_Message_ccapi_00042a34e9364138())
	return swig_r
}

var MessageType_GET_RECENT_AGG_TRADES CcapiMessageType = _swig_getMessage_Type_GET_RECENT_AGG_TRADES_Message()
func _swig_getMessage_Type_GET_HISTORICAL_AGG_TRADES_Message() (_swig_ret CcapiMessageType) {
	var swig_r CcapiMessageType
	swig_r = (CcapiMessageType)(C._wrap_Type_GET_HISTORICAL_AGG_TRADES_Message_ccapi_00042a34e9364138())
	return swig_r
}

var MessageType_GET_HISTORICAL_AGG_TRADES CcapiMessageType = _swig_getMessage_Type_GET_HISTORICAL_AGG_TRADES_Message()
func _swig_getMessage_Type_GET_RECENT_CANDLESTICKS_Message() (_swig_ret CcapiMessageType) {
	var swig_r CcapiMessageType
	swig_r = (CcapiMessageType)(C._wrap_Type_GET_RECENT_CANDLESTICKS_Message_ccapi_00042a34e9364138())
	return swig_r
}

var MessageType_GET_RECENT_CANDLESTICKS CcapiMessageType = _swig_getMessage_Type_GET_RECENT_CANDLESTICKS_Message()
func _swig_getMessage_Type_GET_HISTORICAL_CANDLESTICKS_Message() (_swig_ret CcapiMessageType) {
	var swig_r CcapiMessageType
	swig_r = (CcapiMessageType)(C._wrap_Type_GET_HISTORICAL_CANDLESTICKS_Message_ccapi_00042a34e9364138())
	return swig_r
}

var MessageType_GET_HISTORICAL_CANDLESTICKS CcapiMessageType = _swig_getMessage_Type_GET_HISTORICAL_CANDLESTICKS_Message()
func _swig_getMessage_Type_GET_MARKET_DEPTH_Message() (_swig_ret CcapiMessageType) {
	var swig_r CcapiMessageType
	swig_r = (CcapiMessageType)(C._wrap_Type_GET_MARKET_DEPTH_Message_ccapi_00042a34e9364138())
	return swig_r
}

var MessageType_GET_MARKET_DEPTH CcapiMessageType = _swig_getMessage_Type_GET_MARKET_DEPTH_Message()
func _swig_getMessage_Type_GET_INSTRUMENT_Message() (_swig_ret CcapiMessageType) {
	var swig_r CcapiMessageType
	swig_r = (CcapiMessageType)(C._wrap_Type_GET_INSTRUMENT_Message_ccapi_00042a34e9364138())
	return swig_r
}

var MessageType_GET_INSTRUMENT CcapiMessageType = _swig_getMessage_Type_GET_INSTRUMENT_Message()
func _swig_getMessage_Type_GET_INSTRUMENTS_Message() (_swig_ret CcapiMessageType) {
	var swig_r CcapiMessageType
	swig_r = (CcapiMessageType)(C._wrap_Type_GET_INSTRUMENTS_Message_ccapi_00042a34e9364138())
	return swig_r
}

var MessageType_GET_INSTRUMENTS CcapiMessageType = _swig_getMessage_Type_GET_INSTRUMENTS_Message()
func _swig_getMessage_Type_RESPONSE_ERROR_Message() (_swig_ret CcapiMessageType) {
	var swig_r CcapiMessageType
	swig_r = (CcapiMessageType)(C._wrap_Type_RESPONSE_ERROR_Message_ccapi_00042a34e9364138())
	return swig_r
}

var MessageType_RESPONSE_ERROR CcapiMessageType = _swig_getMessage_Type_RESPONSE_ERROR_Message()
func _swig_getMessage_Type_REQUEST_FAILURE_Message() (_swig_ret CcapiMessageType) {
	var swig_r CcapiMessageType
	swig_r = (CcapiMessageType)(C._wrap_Type_REQUEST_FAILURE_Message_ccapi_00042a34e9364138())
	return swig_r
}

var MessageType_REQUEST_FAILURE CcapiMessageType = _swig_getMessage_Type_REQUEST_FAILURE_Message()
func _swig_getMessage_Type_GENERIC_ERROR_Message() (_swig_ret CcapiMessageType) {
	var swig_r CcapiMessageType
	swig_r = (CcapiMessageType)(C._wrap_Type_GENERIC_ERROR_Message_ccapi_00042a34e9364138())
	return swig_r
}

var MessageType_GENERIC_ERROR CcapiMessageType = _swig_getMessage_Type_GENERIC_ERROR_Message()
func _swig_getMessage_Type_CUSTOM_Message() (_swig_ret CcapiMessageType) {
	var swig_r CcapiMessageType
	swig_r = (CcapiMessageType)(C._wrap_Type_CUSTOM_Message_ccapi_00042a34e9364138())
	return swig_r
}

var MessageType_CUSTOM CcapiMessageType = _swig_getMessage_Type_CUSTOM_Message()
func _swig_getMessage_Type_FIX_Message() (_swig_ret CcapiMessageType) {
	var swig_r CcapiMessageType
	swig_r = (CcapiMessageType)(C._wrap_Type_FIX_Message_ccapi_00042a34e9364138())
	return swig_r
}

var MessageType_FIX CcapiMessageType = _swig_getMessage_Type_FIX_Message()
func _swig_getMessage_Type_FIX_FAILURE_Message() (_swig_ret CcapiMessageType) {
	var swig_r CcapiMessageType
	swig_r = (CcapiMessageType)(C._wrap_Type_FIX_FAILURE_Message_ccapi_00042a34e9364138())
	return swig_r
}

var MessageType_FIX_FAILURE CcapiMessageType = _swig_getMessage_Type_FIX_FAILURE_Message()
func _swig_getMessage_Type_GENERIC_PUBLIC_REQUEST_Message() (_swig_ret CcapiMessageType) {
	var swig_r CcapiMessageType
	swig_r = (CcapiMessageType)(C._wrap_Type_GENERIC_PUBLIC_REQUEST_Message_ccapi_00042a34e9364138())
	return swig_r
}

var MessageType_GENERIC_PUBLIC_REQUEST CcapiMessageType = _swig_getMessage_Type_GENERIC_PUBLIC_REQUEST_Message()
func _swig_getMessage_Type_GENERIC_PUBLIC_SUBSCRIPTION_Message() (_swig_ret CcapiMessageType) {
	var swig_r CcapiMessageType
	swig_r = (CcapiMessageType)(C._wrap_Type_GENERIC_PUBLIC_SUBSCRIPTION_Message_ccapi_00042a34e9364138())
	return swig_r
}

var MessageType_GENERIC_PUBLIC_SUBSCRIPTION CcapiMessageType = _swig_getMessage_Type_GENERIC_PUBLIC_SUBSCRIPTION_Message()
func _swig_getMessage_Type_GENERIC_PRIVATE_REQUEST_Message() (_swig_ret CcapiMessageType) {
	var swig_r CcapiMessageType
	swig_r = (CcapiMessageType)(C._wrap_Type_GENERIC_PRIVATE_REQUEST_Message_ccapi_00042a34e9364138())
	return swig_r
}

var MessageType_GENERIC_PRIVATE_REQUEST CcapiMessageType = _swig_getMessage_Type_GENERIC_PRIVATE_REQUEST_Message()
func MessageTypeToString(arg1 CcapiMessageType) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_Message_typeToString_ccapi_00042a34e9364138(C.swig_intgo(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (arg1 SwigcptrMessage) ToString() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_Message_toString_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (arg1 SwigcptrMessage) ToStringPretty__SWIG_0(arg2 int, arg3 int, arg4 bool) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r_p := C._wrap_Message_toStringPretty__SWIG_0_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.swig_intgo(_swig_i_2), C._Bool(_swig_i_3))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (arg1 SwigcptrMessage) ToStringPretty__SWIG_1(arg2 int, arg3 int) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r_p := C._wrap_Message_toStringPretty__SWIG_1_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.swig_intgo(_swig_i_2))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (arg1 SwigcptrMessage) ToStringPretty__SWIG_2(arg2 int) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r_p := C._wrap_Message_toStringPretty__SWIG_2_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (arg1 SwigcptrMessage) ToStringPretty__SWIG_3() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_Message_toStringPretty__SWIG_3_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (p SwigcptrMessage) ToStringPretty(a ...interface{}) string {
	argc := len(a)
	if argc == 0 {
		return p.ToStringPretty__SWIG_3()
	}
	if argc == 1 {
		return p.ToStringPretty__SWIG_2(a[0].(int))
	}
	if argc == 2 {
		return p.ToStringPretty__SWIG_1(a[0].(int), a[1].(int))
	}
	if argc == 3 {
		return p.ToStringPretty__SWIG_0(a[0].(int), a[1].(int), a[2].(bool))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrMessage) GetElementList() (_swig_ret ElementList) {
	var swig_r ElementList
	_swig_i_0 := arg1
	swig_r = (ElementList)(SwigcptrElementList(C._wrap_Message_getElementList_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrMessage) SetElementList__SWIG_0(arg2 ElementList) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_Message_setElementList__SWIG_0_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrMessage) SetElementList__SWIG_1(arg2 ElementList) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_Message_setElementList__SWIG_1_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (p SwigcptrMessage) SetElementList(a ...interface{}) {
	argc := len(a)
	if argc == 1 {
		p.SetElementList__SWIG_0(a[0].(ElementList))
		return
	}
	if argc == 1 {
		p.SetElementList__SWIG_1(a[0].(ElementList))
		return
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrMessage) GetCorrelationIdList() (_swig_ret VectorString) {
	var swig_r VectorString
	_swig_i_0 := arg1
	swig_r = (VectorString)(SwigcptrVectorString(C._wrap_Message_getCorrelationIdList_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrMessage) GetSecondaryCorrelationIdMap() (_swig_ret MapStringString) {
	var swig_r MapStringString
	_swig_i_0 := arg1
	swig_r = (MapStringString)(SwigcptrMapStringString(C._wrap_Message_getSecondaryCorrelationIdMap_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrMessage) SetCorrelationIdList(arg2 VectorString) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_Message_setCorrelationIdList_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrMessage) SetSecondaryCorrelationIdMap(arg2 MapStringString) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_Message_setSecondaryCorrelationIdMap_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrMessage) GetTime() (_swig_ret Std_chrono_time_point_Sl_std_chrono_system_clock_Sc_std_chrono_nanoseconds_Sg_) {
	var swig_r Std_chrono_time_point_Sl_std_chrono_system_clock_Sc_std_chrono_nanoseconds_Sg_
	_swig_i_0 := arg1
	swig_r = (Std_chrono_time_point_Sl_std_chrono_system_clock_Sc_std_chrono_nanoseconds_Sg_)(SwigcptrStd_chrono_time_point_Sl_std_chrono_system_clock_Sc_std_chrono_nanoseconds_Sg_(C._wrap_Message_getTime_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrMessage) GetTimeISO() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_Message_getTimeISO_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (arg1 SwigcptrMessage) GetTimeUnix() (_swig_ret PairLongLongLongLong) {
	var swig_r PairLongLongLongLong
	_swig_i_0 := arg1
	swig_r = (PairLongLongLongLong)(SwigcptrPairLongLongLongLong(C._wrap_Message_getTimeUnix_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrMessage) GetTimePair() (_swig_ret PairLongLongLongLong) {
	var swig_r PairLongLongLongLong
	_swig_i_0 := arg1
	swig_r = (PairLongLongLongLong)(SwigcptrPairLongLongLongLong(C._wrap_Message_getTimePair_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrMessage) SetTime(arg2 Std_chrono_time_point_Sl_std_chrono_system_clock_Sc_std_chrono_nanoseconds_Sg_) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_Message_setTime_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrMessage) GetRecapType() (_swig_ret CcapiMessageRecapType) {
	var swig_r CcapiMessageRecapType
	_swig_i_0 := arg1
	swig_r = (CcapiMessageRecapType)(C._wrap_Message_getRecapType_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrMessage) SetRecapType(arg2 CcapiMessageRecapType) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Message_setRecapType_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrMessage) GetType() (_swig_ret CcapiMessageType) {
	var swig_r CcapiMessageType
	_swig_i_0 := arg1
	swig_r = (CcapiMessageType)(C._wrap_Message_getType_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrMessage) SetType(arg2 CcapiMessageType) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Message_setType_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrMessage) GetTimeReceived() (_swig_ret Std_chrono_time_point_Sl_std_chrono_system_clock_Sc_std_chrono_nanoseconds_Sg_) {
	var swig_r Std_chrono_time_point_Sl_std_chrono_system_clock_Sc_std_chrono_nanoseconds_Sg_
	_swig_i_0 := arg1
	swig_r = (Std_chrono_time_point_Sl_std_chrono_system_clock_Sc_std_chrono_nanoseconds_Sg_)(SwigcptrStd_chrono_time_point_Sl_std_chrono_system_clock_Sc_std_chrono_nanoseconds_Sg_(C._wrap_Message_getTimeReceived_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrMessage) GetTimeReceivedISO() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_Message_getTimeReceivedISO_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (arg1 SwigcptrMessage) GetTimeReceivedUnix() (_swig_ret PairLongLongLongLong) {
	var swig_r PairLongLongLongLong
	_swig_i_0 := arg1
	swig_r = (PairLongLongLongLong)(SwigcptrPairLongLongLongLong(C._wrap_Message_getTimeReceivedUnix_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrMessage) GetTimeReceivedPair() (_swig_ret PairLongLongLongLong) {
	var swig_r PairLongLongLongLong
	_swig_i_0 := arg1
	swig_r = (PairLongLongLongLong)(SwigcptrPairLongLongLongLong(C._wrap_Message_getTimeReceivedPair_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrMessage) SetTimeReceived(arg2 Std_chrono_time_point_Sl_std_chrono_system_clock_Sc_std_chrono_nanoseconds_Sg_) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_Message_setTimeReceived_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func NewMessage() (_swig_ret Message) {
	var swig_r Message
	swig_r = (Message)(SwigcptrMessage(C._wrap_new_Message_ccapi_00042a34e9364138()))
	return swig_r
}

func DeleteMessage(arg1 Message) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_Message_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0))
}

type Message interface {
	Swigcptr() uintptr
	SwigIsMessage()
	ToString() (_swig_ret string)
	ToStringPretty(a ...interface{}) string
	GetElementList() (_swig_ret ElementList)
	SetElementList(a ...interface{})
	GetCorrelationIdList() (_swig_ret VectorString)
	GetSecondaryCorrelationIdMap() (_swig_ret MapStringString)
	SetCorrelationIdList(arg2 VectorString)
	SetSecondaryCorrelationIdMap(arg2 MapStringString)
	GetTime() (_swig_ret Std_chrono_time_point_Sl_std_chrono_system_clock_Sc_std_chrono_nanoseconds_Sg_)
	GetTimeISO() (_swig_ret string)
	GetTimeUnix() (_swig_ret PairLongLongLongLong)
	GetTimePair() (_swig_ret PairLongLongLongLong)
	SetTime(arg2 Std_chrono_time_point_Sl_std_chrono_system_clock_Sc_std_chrono_nanoseconds_Sg_)
	GetRecapType() (_swig_ret CcapiMessageRecapType)
	SetRecapType(arg2 CcapiMessageRecapType)
	GetType() (_swig_ret CcapiMessageType)
	SetType(arg2 CcapiMessageType)
	GetTimeReceived() (_swig_ret Std_chrono_time_point_Sl_std_chrono_system_clock_Sc_std_chrono_nanoseconds_Sg_)
	GetTimeReceivedISO() (_swig_ret string)
	GetTimeReceivedUnix() (_swig_ret PairLongLongLongLong)
	GetTimeReceivedPair() (_swig_ret PairLongLongLongLong)
	SetTimeReceived(arg2 Std_chrono_time_point_Sl_std_chrono_system_clock_Sc_std_chrono_nanoseconds_Sg_)
}

type SwigcptrEvent uintptr

func (p SwigcptrEvent) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrEvent) SwigIsEvent() {
}

type CcapiEventType int
func _swig_getEvent_Type_UNKNOWN_Event() (_swig_ret CcapiEventType) {
	var swig_r CcapiEventType
	swig_r = (CcapiEventType)(C._wrap_Type_UNKNOWN_Event_ccapi_00042a34e9364138())
	return swig_r
}

var EventType_UNKNOWN CcapiEventType = _swig_getEvent_Type_UNKNOWN_Event()
func _swig_getEvent_Type_SESSION_STATUS_Event() (_swig_ret CcapiEventType) {
	var swig_r CcapiEventType
	swig_r = (CcapiEventType)(C._wrap_Type_SESSION_STATUS_Event_ccapi_00042a34e9364138())
	return swig_r
}

var EventType_SESSION_STATUS CcapiEventType = _swig_getEvent_Type_SESSION_STATUS_Event()
func _swig_getEvent_Type_SUBSCRIPTION_STATUS_Event() (_swig_ret CcapiEventType) {
	var swig_r CcapiEventType
	swig_r = (CcapiEventType)(C._wrap_Type_SUBSCRIPTION_STATUS_Event_ccapi_00042a34e9364138())
	return swig_r
}

var EventType_SUBSCRIPTION_STATUS CcapiEventType = _swig_getEvent_Type_SUBSCRIPTION_STATUS_Event()
func _swig_getEvent_Type_REQUEST_STATUS_Event() (_swig_ret CcapiEventType) {
	var swig_r CcapiEventType
	swig_r = (CcapiEventType)(C._wrap_Type_REQUEST_STATUS_Event_ccapi_00042a34e9364138())
	return swig_r
}

var EventType_REQUEST_STATUS CcapiEventType = _swig_getEvent_Type_REQUEST_STATUS_Event()
func _swig_getEvent_Type_RESPONSE_Event() (_swig_ret CcapiEventType) {
	var swig_r CcapiEventType
	swig_r = (CcapiEventType)(C._wrap_Type_RESPONSE_Event_ccapi_00042a34e9364138())
	return swig_r
}

var EventType_RESPONSE CcapiEventType = _swig_getEvent_Type_RESPONSE_Event()
func _swig_getEvent_Type_SUBSCRIPTION_DATA_Event() (_swig_ret CcapiEventType) {
	var swig_r CcapiEventType
	swig_r = (CcapiEventType)(C._wrap_Type_SUBSCRIPTION_DATA_Event_ccapi_00042a34e9364138())
	return swig_r
}

var EventType_SUBSCRIPTION_DATA CcapiEventType = _swig_getEvent_Type_SUBSCRIPTION_DATA_Event()
func _swig_getEvent_Type_AUTHORIZATION_STATUS_Event() (_swig_ret CcapiEventType) {
	var swig_r CcapiEventType
	swig_r = (CcapiEventType)(C._wrap_Type_AUTHORIZATION_STATUS_Event_ccapi_00042a34e9364138())
	return swig_r
}

var EventType_AUTHORIZATION_STATUS CcapiEventType = _swig_getEvent_Type_AUTHORIZATION_STATUS_Event()
func _swig_getEvent_Type_FIX_Event() (_swig_ret CcapiEventType) {
	var swig_r CcapiEventType
	swig_r = (CcapiEventType)(C._wrap_Type_FIX_Event_ccapi_00042a34e9364138())
	return swig_r
}

var EventType_FIX CcapiEventType = _swig_getEvent_Type_FIX_Event()
func _swig_getEvent_Type_FIX_STATUS_Event() (_swig_ret CcapiEventType) {
	var swig_r CcapiEventType
	swig_r = (CcapiEventType)(C._wrap_Type_FIX_STATUS_Event_ccapi_00042a34e9364138())
	return swig_r
}

var EventType_FIX_STATUS CcapiEventType = _swig_getEvent_Type_FIX_STATUS_Event()
func EventTypeToString(arg1 CcapiEventType) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_Event_typeToString_ccapi_00042a34e9364138(C.swig_intgo(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (arg1 SwigcptrEvent) ToString() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_Event_toString_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (arg1 SwigcptrEvent) ToStringPretty__SWIG_0(arg2 int, arg3 int, arg4 bool) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r_p := C._wrap_Event_toStringPretty__SWIG_0_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.swig_intgo(_swig_i_2), C._Bool(_swig_i_3))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (arg1 SwigcptrEvent) ToStringPretty__SWIG_1(arg2 int, arg3 int) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r_p := C._wrap_Event_toStringPretty__SWIG_1_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.swig_intgo(_swig_i_2))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (arg1 SwigcptrEvent) ToStringPretty__SWIG_2(arg2 int) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r_p := C._wrap_Event_toStringPretty__SWIG_2_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (arg1 SwigcptrEvent) ToStringPretty__SWIG_3() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_Event_toStringPretty__SWIG_3_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (p SwigcptrEvent) ToStringPretty(a ...interface{}) string {
	argc := len(a)
	if argc == 0 {
		return p.ToStringPretty__SWIG_3()
	}
	if argc == 1 {
		return p.ToStringPretty__SWIG_2(a[0].(int))
	}
	if argc == 2 {
		return p.ToStringPretty__SWIG_1(a[0].(int), a[1].(int))
	}
	if argc == 3 {
		return p.ToStringPretty__SWIG_0(a[0].(int), a[1].(int), a[2].(bool))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrEvent) GetMessageList() (_swig_ret MessageList) {
	var swig_r MessageList
	_swig_i_0 := arg1
	swig_r = (MessageList)(SwigcptrMessageList(C._wrap_Event_getMessageList_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrEvent) AddMessages__SWIG_0(arg2 MessageList) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_Event_addMessages__SWIG_0_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrEvent) AddMessages__SWIG_1(arg2 MessageList) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_Event_addMessages__SWIG_1_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (p SwigcptrEvent) AddMessages(a ...interface{}) {
	argc := len(a)
	if argc == 1 {
		p.AddMessages__SWIG_0(a[0].(MessageList))
		return
	}
	if argc == 1 {
		p.AddMessages__SWIG_1(a[0].(MessageList))
		return
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrEvent) AddMessage__SWIG_0(arg2 Message) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_Event_addMessage__SWIG_0_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrEvent) AddMessage__SWIG_1(arg2 Message) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_Event_addMessage__SWIG_1_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (p SwigcptrEvent) AddMessage(a ...interface{}) {
	argc := len(a)
	if argc == 1 {
		p.AddMessage__SWIG_0(a[0].(Message))
		return
	}
	if argc == 1 {
		p.AddMessage__SWIG_1(a[0].(Message))
		return
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrEvent) SetMessageList__SWIG_0(arg2 MessageList) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_Event_setMessageList__SWIG_0_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrEvent) SetMessageList__SWIG_1(arg2 MessageList) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_Event_setMessageList__SWIG_1_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (p SwigcptrEvent) SetMessageList(a ...interface{}) {
	argc := len(a)
	if argc == 1 {
		p.SetMessageList__SWIG_0(a[0].(MessageList))
		return
	}
	if argc == 1 {
		p.SetMessageList__SWIG_1(a[0].(MessageList))
		return
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrEvent) GetType() (_swig_ret CcapiEventType) {
	var swig_r CcapiEventType
	_swig_i_0 := arg1
	swig_r = (CcapiEventType)(C._wrap_Event_getType_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrEvent) SetType(arg2 CcapiEventType) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Event_setType_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func NewEvent() (_swig_ret Event) {
	var swig_r Event
	swig_r = (Event)(SwigcptrEvent(C._wrap_new_Event_ccapi_00042a34e9364138()))
	return swig_r
}

func DeleteEvent(arg1 Event) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_Event_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0))
}

type Event interface {
	Swigcptr() uintptr
	SwigIsEvent()
	ToString() (_swig_ret string)
	ToStringPretty(a ...interface{}) string
	GetMessageList() (_swig_ret MessageList)
	AddMessages(a ...interface{})
	AddMessage(a ...interface{})
	SetMessageList(a ...interface{})
	GetType() (_swig_ret CcapiEventType)
	SetType(arg2 CcapiEventType)
}

type _swig_DirectorEventHandler struct {
	SwigcptrEventHandler
	v interface{}
}

func (p *_swig_DirectorEventHandler) Swigcptr() uintptr {
	return getSwigcptr(p.SwigcptrEventHandler)
}

func (p *_swig_DirectorEventHandler) SwigIsEventHandler() {
}

func (p *_swig_DirectorEventHandler) DirectorInterface() interface{} {
	return p.v
}

func NewDirectorEventHandler(v interface{}) EventHandler {
	p := &_swig_DirectorEventHandler{0, v}
	p.SwigcptrEventHandler = SwigcptrEventHandler(C._wrap__swig_NewDirectorEventHandlerEventHandler_ccapi_00042a34e9364138(C.int(swigDirectorAdd(p))))
	return p
}

func DeleteDirectorEventHandler(arg1 EventHandler) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_DeleteDirectorEventHandler_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0))
}

//export Swiggo_DeleteDirector_EventHandler_ccapi_00042a34e9364138
func Swiggo_DeleteDirector_EventHandler_ccapi_00042a34e9364138(c int) {
	swigDirectorLookup(c).(*_swig_DirectorEventHandler).SwigcptrEventHandler = 0
	swigDirectorDelete(c)
}

type _swig_DirectorInterfaceEventHandlerProcessEvent interface {
	ProcessEvent(Event, Session) bool
}

func (swig_p *_swig_DirectorEventHandler) ProcessEvent(event Event, sessionPtr Session) bool {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceEventHandlerProcessEvent); swig_ok {
		return swig_g.ProcessEvent(event, sessionPtr)
	}
	var swig_r bool
	_swig_i_0 := getSwigcptr(event)
	_swig_i_1 := getSwigcptr(sessionPtr)
	swig_r = (bool)(C._wrap__swig_DirectorEventHandler_upcall_ProcessEvent_ccapi_00042a34e9364138(C.uintptr_t(swig_p.SwigcptrEventHandler), C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r
}

func DirectorEventHandlerProcessEvent(swig_p EventHandler, event Event, sessionPtr Session) bool {
	var swig_r bool
	_swig_i_0 := getSwigcptr(event)
	_swig_i_1 := getSwigcptr(sessionPtr)
	swig_r = (bool)(C._wrap__swig_DirectorEventHandler_upcall_ProcessEvent_ccapi_00042a34e9364138(C.uintptr_t(swig_p.(*_swig_DirectorEventHandler).SwigcptrEventHandler), C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r
}

//export Swig_DirectorEventHandler_callback_processEvent_ccapi_00042a34e9364138
func Swig_DirectorEventHandler_callback_processEvent_ccapi_00042a34e9364138(swig_c int, arg2 uintptr, arg3 uintptr) (swig_result bool) {
	var swig_r bool
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorEventHandler)
	swig_r = swig_p.ProcessEvent(SwigcptrEvent(arg2), SwigcptrSession(arg3))
	return swig_r
}

type SwigcptrEventHandler uintptr

func (p SwigcptrEventHandler) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrEventHandler) SwigIsEventHandler() {
}

func (p SwigcptrEventHandler) DirectorInterface() interface{} {
	return nil
}

func DeleteEventHandler(arg1 EventHandler) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_EventHandler_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrEventHandler) ProcessEvent(arg2 Event, arg3 Session) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	swig_r = (bool)(C._wrap_EventHandler_processEvent_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2)))
	return swig_r
}

func NewEventHandler() (_swig_ret EventHandler) {
	var swig_r EventHandler
	swig_r = (EventHandler)(SwigcptrEventHandler(C._wrap_new_EventHandler_ccapi_00042a34e9364138()))
	return swig_r
}

type EventHandler interface {
	Swigcptr() uintptr
	SwigIsEventHandler()
	DirectorInterface() interface{}
	ProcessEvent(arg2 Event, arg3 Session) (_swig_ret bool)
}

type SwigcptrEventDispatcher uintptr

func (p SwigcptrEventDispatcher) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrEventDispatcher) SwigIsEventDispatcher() {
}

func NewEventDispatcher__SWIG_0(arg1 int) (_swig_ret EventDispatcher) {
	var swig_r EventDispatcher
	_swig_i_0 := arg1
	swig_r = (EventDispatcher)(SwigcptrEventDispatcher(C._wrap_new_EventDispatcher__SWIG_0_ccapi_00042a34e9364138(C.swig_intgo(_swig_i_0))))
	return swig_r
}

func NewEventDispatcher__SWIG_1() (_swig_ret EventDispatcher) {
	var swig_r EventDispatcher
	swig_r = (EventDispatcher)(SwigcptrEventDispatcher(C._wrap_new_EventDispatcher__SWIG_1_ccapi_00042a34e9364138()))
	return swig_r
}

func NewEventDispatcher(a ...interface{}) EventDispatcher {
	argc := len(a)
	if argc == 0 {
		return NewEventDispatcher__SWIG_1()
	}
	if argc == 1 {
		return NewEventDispatcher__SWIG_0(a[0].(int))
	}
	panic("No match for overloaded function call")
}

func DeleteEventDispatcher(arg1 EventDispatcher) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_EventDispatcher_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrEventDispatcher) Dispatch(arg2 Std_function_Sl_void_Sp__SP__Sg_) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_EventDispatcher_dispatch_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrEventDispatcher) Start() {
	_swig_i_0 := arg1
	C._wrap_EventDispatcher_start_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrEventDispatcher) Resume() {
	_swig_i_0 := arg1
	C._wrap_EventDispatcher_resume_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrEventDispatcher) Pause() {
	_swig_i_0 := arg1
	C._wrap_EventDispatcher_pause_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrEventDispatcher) Stop() {
	_swig_i_0 := arg1
	C._wrap_EventDispatcher_stop_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0))
}

type EventDispatcher interface {
	Swigcptr() uintptr
	SwigIsEventDispatcher()
	Dispatch(arg2 Std_function_Sl_void_Sp__SP__Sg_)
	Start()
	Resume()
	Pause()
	Stop()
}

type SwigcptrSubscription uintptr

func (p SwigcptrSubscription) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrSubscription) SwigIsSubscription() {
}

func NewSubscription__SWIG_0() (_swig_ret Subscription) {
	var swig_r Subscription
	swig_r = (Subscription)(SwigcptrSubscription(C._wrap_new_Subscription__SWIG_0_ccapi_00042a34e9364138()))
	return swig_r
}

func NewSubscription__SWIG_1(arg1 string, arg2 string, arg3 string, arg4 string, arg5 string, arg6 MapStringString) (_swig_ret Subscription) {
	var swig_r Subscription
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := getSwigcptr(arg6)
	swig_r = (Subscription)(SwigcptrSubscription(C._wrap_new_Subscription__SWIG_1_ccapi_00042a34e9364138(*(*C.swig_type_85)(unsafe.Pointer(&_swig_i_0)), *(*C.swig_type_86)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_87)(unsafe.Pointer(&_swig_i_2)), *(*C.swig_type_88)(unsafe.Pointer(&_swig_i_3)), *(*C.swig_type_89)(unsafe.Pointer(&_swig_i_4)), C.uintptr_t(_swig_i_5))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg4
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg5
	}
	return swig_r
}

func NewSubscription__SWIG_2(arg1 string, arg2 string, arg3 string, arg4 string, arg5 string) (_swig_ret Subscription) {
	var swig_r Subscription
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	swig_r = (Subscription)(SwigcptrSubscription(C._wrap_new_Subscription__SWIG_2_ccapi_00042a34e9364138(*(*C.swig_type_90)(unsafe.Pointer(&_swig_i_0)), *(*C.swig_type_91)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_92)(unsafe.Pointer(&_swig_i_2)), *(*C.swig_type_93)(unsafe.Pointer(&_swig_i_3)), *(*C.swig_type_94)(unsafe.Pointer(&_swig_i_4)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg4
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg5
	}
	return swig_r
}

func NewSubscription__SWIG_3(arg1 string, arg2 string, arg3 string, arg4 string) (_swig_ret Subscription) {
	var swig_r Subscription
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (Subscription)(SwigcptrSubscription(C._wrap_new_Subscription__SWIG_3_ccapi_00042a34e9364138(*(*C.swig_type_95)(unsafe.Pointer(&_swig_i_0)), *(*C.swig_type_96)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_97)(unsafe.Pointer(&_swig_i_2)), *(*C.swig_type_98)(unsafe.Pointer(&_swig_i_3)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg4
	}
	return swig_r
}

func NewSubscription__SWIG_4(arg1 string, arg2 string, arg3 string) (_swig_ret Subscription) {
	var swig_r Subscription
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (Subscription)(SwigcptrSubscription(C._wrap_new_Subscription__SWIG_4_ccapi_00042a34e9364138(*(*C.swig_type_99)(unsafe.Pointer(&_swig_i_0)), *(*C.swig_type_100)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_101)(unsafe.Pointer(&_swig_i_2)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	return swig_r
}

func NewSubscription(a ...interface{}) Subscription {
	argc := len(a)
	if argc == 0 {
		return NewSubscription__SWIG_0()
	}
	if argc == 3 {
		return NewSubscription__SWIG_4(a[0].(string), a[1].(string), a[2].(string))
	}
	if argc == 4 {
		return NewSubscription__SWIG_3(a[0].(string), a[1].(string), a[2].(string), a[3].(string))
	}
	if argc == 5 {
		return NewSubscription__SWIG_2(a[0].(string), a[1].(string), a[2].(string), a[3].(string), a[4].(string))
	}
	if argc == 6 {
		return NewSubscription__SWIG_1(a[0].(string), a[1].(string), a[2].(string), a[3].(string), a[4].(string), a[5].(MapStringString))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrSubscription) ToString() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_Subscription_toString_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (arg1 SwigcptrSubscription) GetCorrelationId() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_Subscription_getCorrelationId_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (arg1 SwigcptrSubscription) GetExchange() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_Subscription_getExchange_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (arg1 SwigcptrSubscription) GetInstrument() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_Subscription_getInstrument_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (arg1 SwigcptrSubscription) GetInstrumentType() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_Subscription_getInstrumentType_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (arg1 SwigcptrSubscription) GetField() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_Subscription_getField_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (arg1 SwigcptrSubscription) GetRawOptions() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_Subscription_getRawOptions_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (arg1 SwigcptrSubscription) GetOptionMap() (_swig_ret MapStringString) {
	var swig_r MapStringString
	_swig_i_0 := arg1
	swig_r = (MapStringString)(SwigcptrMapStringString(C._wrap_Subscription_getOptionMap_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrSubscription) GetCredential() (_swig_ret MapStringString) {
	var swig_r MapStringString
	_swig_i_0 := arg1
	swig_r = (MapStringString)(SwigcptrMapStringString(C._wrap_Subscription_getCredential_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrSubscription) GetServiceName() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_Subscription_getServiceName_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (arg1 SwigcptrSubscription) GetInstrumentSet() (_swig_ret Std_set_Sl_std_string_Sg_) {
	var swig_r Std_set_Sl_std_string_Sg_
	_swig_i_0 := arg1
	swig_r = (Std_set_Sl_std_string_Sg_)(SwigcptrStd_set_Sl_std_string_Sg_(C._wrap_Subscription_getInstrumentSet_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrSubscription) GetFieldSet() (_swig_ret Std_set_Sl_std_string_Sg_) {
	var swig_r Std_set_Sl_std_string_Sg_
	_swig_i_0 := arg1
	swig_r = (Std_set_Sl_std_string_Sg_)(SwigcptrStd_set_Sl_std_string_Sg_(C._wrap_Subscription_getFieldSet_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrSubscription) GetSerializedOptions() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_Subscription_getSerializedOptions_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (arg1 SwigcptrSubscription) GetSerializedCredential() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_Subscription_getSerializedCredential_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (arg1 SwigcptrSubscription) GetTimeSent() (_swig_ret Std_chrono_time_point_Sl_std_chrono_system_clock_Sc_std_chrono_nanoseconds_Sg_) {
	var swig_r Std_chrono_time_point_Sl_std_chrono_system_clock_Sc_std_chrono_nanoseconds_Sg_
	_swig_i_0 := arg1
	swig_r = (Std_chrono_time_point_Sl_std_chrono_system_clock_Sc_std_chrono_nanoseconds_Sg_)(SwigcptrStd_chrono_time_point_Sl_std_chrono_system_clock_Sc_std_chrono_nanoseconds_Sg_(C._wrap_Subscription_getTimeSent_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrSubscription) GetTimeSentISO() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_Subscription_getTimeSentISO_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (arg1 SwigcptrSubscription) GetTimeSentPair() (_swig_ret PairLongLongLongLong) {
	var swig_r PairLongLongLongLong
	_swig_i_0 := arg1
	swig_r = (PairLongLongLongLong)(SwigcptrPairLongLongLongLong(C._wrap_Subscription_getTimeSentPair_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrSubscription) GetMarginType() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_Subscription_getMarginType_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (arg1 SwigcptrSubscription) SetTimeSent(arg2 Std_chrono_time_point_Sl_std_chrono_system_clock_Sc_std_chrono_nanoseconds_Sg_) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_Subscription_setTimeSent_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrSubscription) SetInstrumentType(arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Subscription_setInstrumentType_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), *(*C.swig_type_114)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrSubscription) SetMarginType(arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Subscription_setMarginType_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), *(*C.swig_type_115)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

type CcapiSubscriptionStatus int
func _swig_getSubscription_Status_UNKNOWN_Subscription() (_swig_ret CcapiSubscriptionStatus) {
	var swig_r CcapiSubscriptionStatus
	swig_r = (CcapiSubscriptionStatus)(C._wrap_Status_UNKNOWN_Subscription_ccapi_00042a34e9364138())
	return swig_r
}

var SubscriptionStatus_UNKNOWN CcapiSubscriptionStatus = _swig_getSubscription_Status_UNKNOWN_Subscription()
func _swig_getSubscription_Status_SUBSCRIBING_Subscription() (_swig_ret CcapiSubscriptionStatus) {
	var swig_r CcapiSubscriptionStatus
	swig_r = (CcapiSubscriptionStatus)(C._wrap_Status_SUBSCRIBING_Subscription_ccapi_00042a34e9364138())
	return swig_r
}

var SubscriptionStatus_SUBSCRIBING CcapiSubscriptionStatus = _swig_getSubscription_Status_SUBSCRIBING_Subscription()
func _swig_getSubscription_Status_SUBSCRIBED_Subscription() (_swig_ret CcapiSubscriptionStatus) {
	var swig_r CcapiSubscriptionStatus
	swig_r = (CcapiSubscriptionStatus)(C._wrap_Status_SUBSCRIBED_Subscription_ccapi_00042a34e9364138())
	return swig_r
}

var SubscriptionStatus_SUBSCRIBED CcapiSubscriptionStatus = _swig_getSubscription_Status_SUBSCRIBED_Subscription()
func _swig_getSubscription_Status_UNSUBSCRIBING_Subscription() (_swig_ret CcapiSubscriptionStatus) {
	var swig_r CcapiSubscriptionStatus
	swig_r = (CcapiSubscriptionStatus)(C._wrap_Status_UNSUBSCRIBING_Subscription_ccapi_00042a34e9364138())
	return swig_r
}

var SubscriptionStatus_UNSUBSCRIBING CcapiSubscriptionStatus = _swig_getSubscription_Status_UNSUBSCRIBING_Subscription()
func _swig_getSubscription_Status_UNSUBSCRIBED_Subscription() (_swig_ret CcapiSubscriptionStatus) {
	var swig_r CcapiSubscriptionStatus
	swig_r = (CcapiSubscriptionStatus)(C._wrap_Status_UNSUBSCRIBED_Subscription_ccapi_00042a34e9364138())
	return swig_r
}

var SubscriptionStatus_UNSUBSCRIBED CcapiSubscriptionStatus = _swig_getSubscription_Status_UNSUBSCRIBED_Subscription()
func SubscriptionStatusToString(arg1 CcapiSubscriptionStatus) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_Subscription_statusToString_ccapi_00042a34e9364138(C.swig_intgo(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func DeleteSubscription(arg1 Subscription) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_Subscription_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0))
}

type Subscription interface {
	Swigcptr() uintptr
	SwigIsSubscription()
	ToString() (_swig_ret string)
	GetCorrelationId() (_swig_ret string)
	GetExchange() (_swig_ret string)
	GetInstrument() (_swig_ret string)
	GetInstrumentType() (_swig_ret string)
	GetField() (_swig_ret string)
	GetRawOptions() (_swig_ret string)
	GetOptionMap() (_swig_ret MapStringString)
	GetCredential() (_swig_ret MapStringString)
	GetServiceName() (_swig_ret string)
	GetInstrumentSet() (_swig_ret Std_set_Sl_std_string_Sg_)
	GetFieldSet() (_swig_ret Std_set_Sl_std_string_Sg_)
	GetSerializedOptions() (_swig_ret string)
	GetSerializedCredential() (_swig_ret string)
	GetTimeSent() (_swig_ret Std_chrono_time_point_Sl_std_chrono_system_clock_Sc_std_chrono_nanoseconds_Sg_)
	GetTimeSentISO() (_swig_ret string)
	GetTimeSentPair() (_swig_ret PairLongLongLongLong)
	GetMarginType() (_swig_ret string)
	SetTimeSent(arg2 Std_chrono_time_point_Sl_std_chrono_system_clock_Sc_std_chrono_nanoseconds_Sg_)
	SetInstrumentType(arg2 string)
	SetMarginType(arg2 string)
}

const CCAPI_REQUEST_OPERATION_TYPE_CUSTOM int = 256
const CCAPI_REQUEST_OPERATION_TYPE_GENERIC_PUBLIC_REQUEST int = 512
const CCAPI_REQUEST_OPERATION_TYPE_GENERIC_PRIVATE_REQUEST int = 768
const CCAPI_REQUEST_OPERATION_TYPE_FIX int = 1024
const CCAPI_REQUEST_OPERATION_TYPE_MARKET_DATA int = 1280
const CCAPI_REQUEST_OPERATION_TYPE_EXECUTION_MANAGEMENT int = 1536
const CCAPI_REQUEST_OPERATION_TYPE_EXECUTION_MANAGEMENT_ORDER int = 1536
const CCAPI_REQUEST_OPERATION_TYPE_EXECUTION_MANAGEMENT_ACCOUNT int = 1792
type SwigcptrRequest uintptr

func (p SwigcptrRequest) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrRequest) SwigIsRequest() {
}

type CcapiRequestOperation int
func _swig_getRequest_Operation_CUSTOM_Request() (_swig_ret CcapiRequestOperation) {
	var swig_r CcapiRequestOperation
	swig_r = (CcapiRequestOperation)(C._wrap_Operation_CUSTOM_Request_ccapi_00042a34e9364138())
	return swig_r
}

var RequestOperation_CUSTOM CcapiRequestOperation = _swig_getRequest_Operation_CUSTOM_Request()
func _swig_getRequest_Operation_GENERIC_PUBLIC_REQUEST_Request() (_swig_ret CcapiRequestOperation) {
	var swig_r CcapiRequestOperation
	swig_r = (CcapiRequestOperation)(C._wrap_Operation_GENERIC_PUBLIC_REQUEST_Request_ccapi_00042a34e9364138())
	return swig_r
}

var RequestOperation_GENERIC_PUBLIC_REQUEST CcapiRequestOperation = _swig_getRequest_Operation_GENERIC_PUBLIC_REQUEST_Request()
func _swig_getRequest_Operation_GENERIC_PRIVATE_REQUEST_Request() (_swig_ret CcapiRequestOperation) {
	var swig_r CcapiRequestOperation
	swig_r = (CcapiRequestOperation)(C._wrap_Operation_GENERIC_PRIVATE_REQUEST_Request_ccapi_00042a34e9364138())
	return swig_r
}

var RequestOperation_GENERIC_PRIVATE_REQUEST CcapiRequestOperation = _swig_getRequest_Operation_GENERIC_PRIVATE_REQUEST_Request()
func _swig_getRequest_Operation_FIX_Request() (_swig_ret CcapiRequestOperation) {
	var swig_r CcapiRequestOperation
	swig_r = (CcapiRequestOperation)(C._wrap_Operation_FIX_Request_ccapi_00042a34e9364138())
	return swig_r
}

var RequestOperation_FIX CcapiRequestOperation = _swig_getRequest_Operation_FIX_Request()
func _swig_getRequest_Operation_GET_RECENT_TRADES_Request() (_swig_ret CcapiRequestOperation) {
	var swig_r CcapiRequestOperation
	swig_r = (CcapiRequestOperation)(C._wrap_Operation_GET_RECENT_TRADES_Request_ccapi_00042a34e9364138())
	return swig_r
}

var RequestOperation_GET_RECENT_TRADES CcapiRequestOperation = _swig_getRequest_Operation_GET_RECENT_TRADES_Request()
func _swig_getRequest_Operation_GET_HISTORICAL_TRADES_Request() (_swig_ret CcapiRequestOperation) {
	var swig_r CcapiRequestOperation
	swig_r = (CcapiRequestOperation)(C._wrap_Operation_GET_HISTORICAL_TRADES_Request_ccapi_00042a34e9364138())
	return swig_r
}

var RequestOperation_GET_HISTORICAL_TRADES CcapiRequestOperation = _swig_getRequest_Operation_GET_HISTORICAL_TRADES_Request()
func _swig_getRequest_Operation_GET_RECENT_AGG_TRADES_Request() (_swig_ret CcapiRequestOperation) {
	var swig_r CcapiRequestOperation
	swig_r = (CcapiRequestOperation)(C._wrap_Operation_GET_RECENT_AGG_TRADES_Request_ccapi_00042a34e9364138())
	return swig_r
}

var RequestOperation_GET_RECENT_AGG_TRADES CcapiRequestOperation = _swig_getRequest_Operation_GET_RECENT_AGG_TRADES_Request()
func _swig_getRequest_Operation_GET_HISTORICAL_AGG_TRADES_Request() (_swig_ret CcapiRequestOperation) {
	var swig_r CcapiRequestOperation
	swig_r = (CcapiRequestOperation)(C._wrap_Operation_GET_HISTORICAL_AGG_TRADES_Request_ccapi_00042a34e9364138())
	return swig_r
}

var RequestOperation_GET_HISTORICAL_AGG_TRADES CcapiRequestOperation = _swig_getRequest_Operation_GET_HISTORICAL_AGG_TRADES_Request()
func _swig_getRequest_Operation_GET_RECENT_CANDLESTICKS_Request() (_swig_ret CcapiRequestOperation) {
	var swig_r CcapiRequestOperation
	swig_r = (CcapiRequestOperation)(C._wrap_Operation_GET_RECENT_CANDLESTICKS_Request_ccapi_00042a34e9364138())
	return swig_r
}

var RequestOperation_GET_RECENT_CANDLESTICKS CcapiRequestOperation = _swig_getRequest_Operation_GET_RECENT_CANDLESTICKS_Request()
func _swig_getRequest_Operation_GET_HISTORICAL_CANDLESTICKS_Request() (_swig_ret CcapiRequestOperation) {
	var swig_r CcapiRequestOperation
	swig_r = (CcapiRequestOperation)(C._wrap_Operation_GET_HISTORICAL_CANDLESTICKS_Request_ccapi_00042a34e9364138())
	return swig_r
}

var RequestOperation_GET_HISTORICAL_CANDLESTICKS CcapiRequestOperation = _swig_getRequest_Operation_GET_HISTORICAL_CANDLESTICKS_Request()
func _swig_getRequest_Operation_GET_MARKET_DEPTH_Request() (_swig_ret CcapiRequestOperation) {
	var swig_r CcapiRequestOperation
	swig_r = (CcapiRequestOperation)(C._wrap_Operation_GET_MARKET_DEPTH_Request_ccapi_00042a34e9364138())
	return swig_r
}

var RequestOperation_GET_MARKET_DEPTH CcapiRequestOperation = _swig_getRequest_Operation_GET_MARKET_DEPTH_Request()
func _swig_getRequest_Operation_GET_INSTRUMENT_Request() (_swig_ret CcapiRequestOperation) {
	var swig_r CcapiRequestOperation
	swig_r = (CcapiRequestOperation)(C._wrap_Operation_GET_INSTRUMENT_Request_ccapi_00042a34e9364138())
	return swig_r
}

var RequestOperation_GET_INSTRUMENT CcapiRequestOperation = _swig_getRequest_Operation_GET_INSTRUMENT_Request()
func _swig_getRequest_Operation_GET_INSTRUMENTS_Request() (_swig_ret CcapiRequestOperation) {
	var swig_r CcapiRequestOperation
	swig_r = (CcapiRequestOperation)(C._wrap_Operation_GET_INSTRUMENTS_Request_ccapi_00042a34e9364138())
	return swig_r
}

var RequestOperation_GET_INSTRUMENTS CcapiRequestOperation = _swig_getRequest_Operation_GET_INSTRUMENTS_Request()
func _swig_getRequest_Operation_CREATE_ORDER_Request() (_swig_ret CcapiRequestOperation) {
	var swig_r CcapiRequestOperation
	swig_r = (CcapiRequestOperation)(C._wrap_Operation_CREATE_ORDER_Request_ccapi_00042a34e9364138())
	return swig_r
}

var RequestOperation_CREATE_ORDER CcapiRequestOperation = _swig_getRequest_Operation_CREATE_ORDER_Request()
func _swig_getRequest_Operation_CANCEL_ORDER_Request() (_swig_ret CcapiRequestOperation) {
	var swig_r CcapiRequestOperation
	swig_r = (CcapiRequestOperation)(C._wrap_Operation_CANCEL_ORDER_Request_ccapi_00042a34e9364138())
	return swig_r
}

var RequestOperation_CANCEL_ORDER CcapiRequestOperation = _swig_getRequest_Operation_CANCEL_ORDER_Request()
func _swig_getRequest_Operation_GET_ORDER_Request() (_swig_ret CcapiRequestOperation) {
	var swig_r CcapiRequestOperation
	swig_r = (CcapiRequestOperation)(C._wrap_Operation_GET_ORDER_Request_ccapi_00042a34e9364138())
	return swig_r
}

var RequestOperation_GET_ORDER CcapiRequestOperation = _swig_getRequest_Operation_GET_ORDER_Request()
func _swig_getRequest_Operation_GET_OPEN_ORDERS_Request() (_swig_ret CcapiRequestOperation) {
	var swig_r CcapiRequestOperation
	swig_r = (CcapiRequestOperation)(C._wrap_Operation_GET_OPEN_ORDERS_Request_ccapi_00042a34e9364138())
	return swig_r
}

var RequestOperation_GET_OPEN_ORDERS CcapiRequestOperation = _swig_getRequest_Operation_GET_OPEN_ORDERS_Request()
func _swig_getRequest_Operation_CANCEL_OPEN_ORDERS_Request() (_swig_ret CcapiRequestOperation) {
	var swig_r CcapiRequestOperation
	swig_r = (CcapiRequestOperation)(C._wrap_Operation_CANCEL_OPEN_ORDERS_Request_ccapi_00042a34e9364138())
	return swig_r
}

var RequestOperation_CANCEL_OPEN_ORDERS CcapiRequestOperation = _swig_getRequest_Operation_CANCEL_OPEN_ORDERS_Request()
func _swig_getRequest_Operation_GET_ACCOUNTS_Request() (_swig_ret CcapiRequestOperation) {
	var swig_r CcapiRequestOperation
	swig_r = (CcapiRequestOperation)(C._wrap_Operation_GET_ACCOUNTS_Request_ccapi_00042a34e9364138())
	return swig_r
}

var RequestOperation_GET_ACCOUNTS CcapiRequestOperation = _swig_getRequest_Operation_GET_ACCOUNTS_Request()
func _swig_getRequest_Operation_GET_ACCOUNT_BALANCES_Request() (_swig_ret CcapiRequestOperation) {
	var swig_r CcapiRequestOperation
	swig_r = (CcapiRequestOperation)(C._wrap_Operation_GET_ACCOUNT_BALANCES_Request_ccapi_00042a34e9364138())
	return swig_r
}

var RequestOperation_GET_ACCOUNT_BALANCES CcapiRequestOperation = _swig_getRequest_Operation_GET_ACCOUNT_BALANCES_Request()
func _swig_getRequest_Operation_GET_ACCOUNT_POSITIONS_Request() (_swig_ret CcapiRequestOperation) {
	var swig_r CcapiRequestOperation
	swig_r = (CcapiRequestOperation)(C._wrap_Operation_GET_ACCOUNT_POSITIONS_Request_ccapi_00042a34e9364138())
	return swig_r
}

var RequestOperation_GET_ACCOUNT_POSITIONS CcapiRequestOperation = _swig_getRequest_Operation_GET_ACCOUNT_POSITIONS_Request()
func RequestOperationToString(arg1 CcapiRequestOperation) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_Request_operationToString_ccapi_00042a34e9364138(C.swig_intgo(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func NewRequest__SWIG_0() (_swig_ret Request) {
	var swig_r Request
	swig_r = (Request)(SwigcptrRequest(C._wrap_new_Request__SWIG_0_ccapi_00042a34e9364138()))
	return swig_r
}

func NewRequest__SWIG_1(arg1 CcapiRequestOperation, arg2 string, arg3 string, arg4 string, arg5 MapStringString) (_swig_ret Request) {
	var swig_r Request
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := getSwigcptr(arg5)
	swig_r = (Request)(SwigcptrRequest(C._wrap_new_Request__SWIG_1_ccapi_00042a34e9364138(C.swig_intgo(_swig_i_0), *(*C.swig_type_118)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_119)(unsafe.Pointer(&_swig_i_2)), *(*C.swig_type_120)(unsafe.Pointer(&_swig_i_3)), C.uintptr_t(_swig_i_4))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg4
	}
	return swig_r
}

func NewRequest__SWIG_2(arg1 CcapiRequestOperation, arg2 string, arg3 string, arg4 string) (_swig_ret Request) {
	var swig_r Request
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (Request)(SwigcptrRequest(C._wrap_new_Request__SWIG_2_ccapi_00042a34e9364138(C.swig_intgo(_swig_i_0), *(*C.swig_type_121)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_122)(unsafe.Pointer(&_swig_i_2)), *(*C.swig_type_123)(unsafe.Pointer(&_swig_i_3)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg4
	}
	return swig_r
}

func NewRequest__SWIG_3(arg1 CcapiRequestOperation, arg2 string, arg3 string) (_swig_ret Request) {
	var swig_r Request
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	swig_r = (Request)(SwigcptrRequest(C._wrap_new_Request__SWIG_3_ccapi_00042a34e9364138(C.swig_intgo(_swig_i_0), *(*C.swig_type_124)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_125)(unsafe.Pointer(&_swig_i_2)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	return swig_r
}

func NewRequest__SWIG_4(arg1 CcapiRequestOperation, arg2 string) (_swig_ret Request) {
	var swig_r Request
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r = (Request)(SwigcptrRequest(C._wrap_new_Request__SWIG_4_ccapi_00042a34e9364138(C.swig_intgo(_swig_i_0), *(*C.swig_type_126)(unsafe.Pointer(&_swig_i_1)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	return swig_r
}

func NewRequest(a ...interface{}) Request {
	argc := len(a)
	if argc == 0 {
		return NewRequest__SWIG_0()
	}
	if argc == 2 {
		return NewRequest__SWIG_4(a[0].(CcapiRequestOperation), a[1].(string))
	}
	if argc == 3 {
		return NewRequest__SWIG_3(a[0].(CcapiRequestOperation), a[1].(string), a[2].(string))
	}
	if argc == 4 {
		return NewRequest__SWIG_2(a[0].(CcapiRequestOperation), a[1].(string), a[2].(string), a[3].(string))
	}
	if argc == 5 {
		return NewRequest__SWIG_1(a[0].(CcapiRequestOperation), a[1].(string), a[2].(string), a[3].(string), a[4].(MapStringString))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrRequest) ToString() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_Request_toString_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (arg1 SwigcptrRequest) GetCorrelationId() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_Request_getCorrelationId_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (arg1 SwigcptrRequest) GetSecondaryCorrelationId() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_Request_getSecondaryCorrelationId_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (arg1 SwigcptrRequest) GetExchange() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_Request_getExchange_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (arg1 SwigcptrRequest) GetMarginType() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_Request_getMarginType_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (arg1 SwigcptrRequest) GetInstrument() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_Request_getInstrument_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (arg1 SwigcptrRequest) GetCredential() (_swig_ret MapStringString) {
	var swig_r MapStringString
	_swig_i_0 := arg1
	swig_r = (MapStringString)(SwigcptrMapStringString(C._wrap_Request_getCredential_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrRequest) GetServiceName() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_Request_getServiceName_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (arg1 SwigcptrRequest) AppendParam(arg2 MapStringString) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_Request_appendParam_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrRequest) AppendParamFix(arg2 VectorPairIntString) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_Request_appendParamFix_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrRequest) AppendParamListFix(arg2 Std_vector_Sl_std_vector_Sl_std_pair_Sl_int_Sc_std_string_Sg__Sg__Sg_) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_Request_appendParamListFix_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrRequest) SetParamListFix(arg2 Std_vector_Sl_std_vector_Sl_std_pair_Sl_int_Sc_std_string_Sg__Sg__Sg_) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_Request_setParamListFix_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrRequest) GetOperation() (_swig_ret CcapiRequestOperation) {
	var swig_r CcapiRequestOperation
	_swig_i_0 := arg1
	swig_r = (CcapiRequestOperation)(C._wrap_Request_getOperation_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrRequest) GetParamList() (_swig_ret Std_vector_Sl_std_map_Sl_std_string_Sc_std_string_Sg__Sg_) {
	var swig_r Std_vector_Sl_std_map_Sl_std_string_Sc_std_string_Sg__Sg_
	_swig_i_0 := arg1
	swig_r = (Std_vector_Sl_std_map_Sl_std_string_Sc_std_string_Sg__Sg_)(SwigcptrStd_vector_Sl_std_map_Sl_std_string_Sc_std_string_Sg__Sg_(C._wrap_Request_getParamList_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrRequest) GetParamListFix() (_swig_ret Std_vector_Sl_std_vector_Sl_std_pair_Sl_int_Sc_std_string_Sg__Sg__Sg_) {
	var swig_r Std_vector_Sl_std_vector_Sl_std_pair_Sl_int_Sc_std_string_Sg__Sg__Sg_
	_swig_i_0 := arg1
	swig_r = (Std_vector_Sl_std_vector_Sl_std_pair_Sl_int_Sc_std_string_Sg__Sg__Sg_)(SwigcptrStd_vector_Sl_std_vector_Sl_std_pair_Sl_int_Sc_std_string_Sg__Sg__Sg_(C._wrap_Request_getParamListFix_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrRequest) SetParamList(arg2 Std_vector_Sl_std_map_Sl_std_string_Sc_std_string_Sg__Sg_) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_Request_setParamList_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrRequest) GetFirstParamWithDefault__SWIG_0(arg2 MapStringString) (_swig_ret MapStringString) {
	var swig_r MapStringString
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (MapStringString)(SwigcptrMapStringString(C._wrap_Request_getFirstParamWithDefault__SWIG_0_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func (arg1 SwigcptrRequest) GetFirstParamWithDefault__SWIG_1() (_swig_ret MapStringString) {
	var swig_r MapStringString
	_swig_i_0 := arg1
	swig_r = (MapStringString)(SwigcptrMapStringString(C._wrap_Request_getFirstParamWithDefault__SWIG_1_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (p SwigcptrRequest) GetFirstParamWithDefault(a ...interface{}) MapStringString {
	argc := len(a)
	if argc == 0 {
		return p.GetFirstParamWithDefault__SWIG_1()
	}
	if argc == 1 {
		return p.GetFirstParamWithDefault__SWIG_0(a[0].(MapStringString))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrRequest) GetTimeSent() (_swig_ret Std_chrono_time_point_Sl_std_chrono_system_clock_Sc_std_chrono_nanoseconds_Sg_) {
	var swig_r Std_chrono_time_point_Sl_std_chrono_system_clock_Sc_std_chrono_nanoseconds_Sg_
	_swig_i_0 := arg1
	swig_r = (Std_chrono_time_point_Sl_std_chrono_system_clock_Sc_std_chrono_nanoseconds_Sg_)(SwigcptrStd_chrono_time_point_Sl_std_chrono_system_clock_Sc_std_chrono_nanoseconds_Sg_(C._wrap_Request_getTimeSent_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrRequest) GetTimeSentISO() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_Request_getTimeSentISO_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (arg1 SwigcptrRequest) GetTimeSentPair() (_swig_ret PairLongLongLongLong) {
	var swig_r PairLongLongLongLong
	_swig_i_0 := arg1
	swig_r = (PairLongLongLongLong)(SwigcptrPairLongLongLongLong(C._wrap_Request_getTimeSentPair_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrRequest) SetTimeSent(arg2 Std_chrono_time_point_Sl_std_chrono_system_clock_Sc_std_chrono_nanoseconds_Sg_) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_Request_setTimeSent_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrRequest) GetIndex() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_Request_getIndex_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrRequest) GetLocalIpAddress() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_Request_getLocalIpAddress_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (arg1 SwigcptrRequest) GetBaseUrl() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_Request_getBaseUrl_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (arg1 SwigcptrRequest) GetHost() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_Request_getHost_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (arg1 SwigcptrRequest) GetPort() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_Request_getPort_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (arg1 SwigcptrRequest) SetIndex(arg2 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Request_setIndex_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrRequest) SetCredential(arg2 MapStringString) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_Request_setCredential_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrRequest) SetCorrelationId(arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Request_setCorrelationId_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), *(*C.swig_type_139)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrRequest) SetSecondaryCorrelationId(arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Request_setSecondaryCorrelationId_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), *(*C.swig_type_140)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrRequest) SetMarginType(arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Request_setMarginType_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), *(*C.swig_type_141)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrRequest) SetLocalIpAddress(arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Request_setLocalIpAddress_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), *(*C.swig_type_142)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrRequest) SetBaseUrl(arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Request_setBaseUrl_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), *(*C.swig_type_143)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrRequest) SetBaseUrlParts() {
	_swig_i_0 := arg1
	C._wrap_Request_setBaseUrlParts_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0))
}

func DeleteRequest(arg1 Request) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_Request_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0))
}

type Request interface {
	Swigcptr() uintptr
	SwigIsRequest()
	ToString() (_swig_ret string)
	GetCorrelationId() (_swig_ret string)
	GetSecondaryCorrelationId() (_swig_ret string)
	GetExchange() (_swig_ret string)
	GetMarginType() (_swig_ret string)
	GetInstrument() (_swig_ret string)
	GetCredential() (_swig_ret MapStringString)
	GetServiceName() (_swig_ret string)
	AppendParam(arg2 MapStringString)
	AppendParamFix(arg2 VectorPairIntString)
	AppendParamListFix(arg2 Std_vector_Sl_std_vector_Sl_std_pair_Sl_int_Sc_std_string_Sg__Sg__Sg_)
	SetParamListFix(arg2 Std_vector_Sl_std_vector_Sl_std_pair_Sl_int_Sc_std_string_Sg__Sg__Sg_)
	GetOperation() (_swig_ret CcapiRequestOperation)
	GetParamList() (_swig_ret Std_vector_Sl_std_map_Sl_std_string_Sc_std_string_Sg__Sg_)
	GetParamListFix() (_swig_ret Std_vector_Sl_std_vector_Sl_std_pair_Sl_int_Sc_std_string_Sg__Sg__Sg_)
	SetParamList(arg2 Std_vector_Sl_std_map_Sl_std_string_Sc_std_string_Sg__Sg_)
	GetFirstParamWithDefault(a ...interface{}) MapStringString
	GetTimeSent() (_swig_ret Std_chrono_time_point_Sl_std_chrono_system_clock_Sc_std_chrono_nanoseconds_Sg_)
	GetTimeSentISO() (_swig_ret string)
	GetTimeSentPair() (_swig_ret PairLongLongLongLong)
	SetTimeSent(arg2 Std_chrono_time_point_Sl_std_chrono_system_clock_Sc_std_chrono_nanoseconds_Sg_)
	GetIndex() (_swig_ret int)
	GetLocalIpAddress() (_swig_ret string)
	GetBaseUrl() (_swig_ret string)
	GetHost() (_swig_ret string)
	GetPort() (_swig_ret string)
	SetIndex(arg2 int)
	SetCredential(arg2 MapStringString)
	SetCorrelationId(arg2 string)
	SetSecondaryCorrelationId(arg2 string)
	SetMarginType(arg2 string)
	SetLocalIpAddress(arg2 string)
	SetBaseUrl(arg2 string)
	SetBaseUrlParts()
}

type SwigcptrSessionOptions uintptr

func (p SwigcptrSessionOptions) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrSessionOptions) SwigIsSessionOptions() {
}

func (arg1 SwigcptrSessionOptions) ToString() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_SessionOptions_toString_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (arg1 SwigcptrSessionOptions) SetEnableCheckSequence(arg2 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_SessionOptions_enableCheckSequence_set_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))
}

func (arg1 SwigcptrSessionOptions) GetEnableCheckSequence() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_SessionOptions_enableCheckSequence_get_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrSessionOptions) SetEnableCheckOrderBookChecksum(arg2 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_SessionOptions_enableCheckOrderBookChecksum_set_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))
}

func (arg1 SwigcptrSessionOptions) GetEnableCheckOrderBookChecksum() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_SessionOptions_enableCheckOrderBookChecksum_get_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrSessionOptions) SetEnableCheckOrderBookCrossed(arg2 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_SessionOptions_enableCheckOrderBookCrossed_set_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))
}

func (arg1 SwigcptrSessionOptions) GetEnableCheckOrderBookCrossed() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_SessionOptions_enableCheckOrderBookCrossed_get_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrSessionOptions) SetEnableCheckPingPongWebsocketProtocolLevel(arg2 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_SessionOptions_enableCheckPingPongWebsocketProtocolLevel_set_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))
}

func (arg1 SwigcptrSessionOptions) GetEnableCheckPingPongWebsocketProtocolLevel() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_SessionOptions_enableCheckPingPongWebsocketProtocolLevel_get_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrSessionOptions) SetEnableCheckPingPongWebsocketApplicationLevel(arg2 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_SessionOptions_enableCheckPingPongWebsocketApplicationLevel_set_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))
}

func (arg1 SwigcptrSessionOptions) GetEnableCheckPingPongWebsocketApplicationLevel() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_SessionOptions_enableCheckPingPongWebsocketApplicationLevel_get_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrSessionOptions) SetEnableCheckHeartbeatFix(arg2 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_SessionOptions_enableCheckHeartbeatFix_set_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))
}

func (arg1 SwigcptrSessionOptions) GetEnableCheckHeartbeatFix() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_SessionOptions_enableCheckHeartbeatFix_get_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrSessionOptions) SetPingWebsocketProtocolLevelIntervalMilliseconds(arg2 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_SessionOptions_pingWebsocketProtocolLevelIntervalMilliseconds_set_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), C.swig_type_145(_swig_i_1))
}

func (arg1 SwigcptrSessionOptions) GetPingWebsocketProtocolLevelIntervalMilliseconds() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_SessionOptions_pingWebsocketProtocolLevelIntervalMilliseconds_get_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrSessionOptions) SetPongWebsocketProtocolLevelTimeoutMilliseconds(arg2 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_SessionOptions_pongWebsocketProtocolLevelTimeoutMilliseconds_set_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), C.swig_type_147(_swig_i_1))
}

func (arg1 SwigcptrSessionOptions) GetPongWebsocketProtocolLevelTimeoutMilliseconds() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_SessionOptions_pongWebsocketProtocolLevelTimeoutMilliseconds_get_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrSessionOptions) SetPingWebsocketApplicationLevelIntervalMilliseconds(arg2 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_SessionOptions_pingWebsocketApplicationLevelIntervalMilliseconds_set_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), C.swig_type_149(_swig_i_1))
}

func (arg1 SwigcptrSessionOptions) GetPingWebsocketApplicationLevelIntervalMilliseconds() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_SessionOptions_pingWebsocketApplicationLevelIntervalMilliseconds_get_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrSessionOptions) SetPongWebsocketApplicationLevelTimeoutMilliseconds(arg2 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_SessionOptions_pongWebsocketApplicationLevelTimeoutMilliseconds_set_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), C.swig_type_151(_swig_i_1))
}

func (arg1 SwigcptrSessionOptions) GetPongWebsocketApplicationLevelTimeoutMilliseconds() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_SessionOptions_pongWebsocketApplicationLevelTimeoutMilliseconds_get_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrSessionOptions) SetHeartbeatFixIntervalMilliseconds(arg2 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_SessionOptions_heartbeatFixIntervalMilliseconds_set_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), C.swig_type_153(_swig_i_1))
}

func (arg1 SwigcptrSessionOptions) GetHeartbeatFixIntervalMilliseconds() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_SessionOptions_heartbeatFixIntervalMilliseconds_get_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrSessionOptions) SetHeartbeatFixTimeoutMilliseconds(arg2 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_SessionOptions_heartbeatFixTimeoutMilliseconds_set_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), C.swig_type_155(_swig_i_1))
}

func (arg1 SwigcptrSessionOptions) GetHeartbeatFixTimeoutMilliseconds() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_SessionOptions_heartbeatFixTimeoutMilliseconds_get_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrSessionOptions) SetMaxEventQueueSize(arg2 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_SessionOptions_maxEventQueueSize_set_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrSessionOptions) GetMaxEventQueueSize() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_SessionOptions_maxEventQueueSize_get_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrSessionOptions) SetHttpMaxNumRetry(arg2 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_SessionOptions_httpMaxNumRetry_set_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrSessionOptions) GetHttpMaxNumRetry() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_SessionOptions_httpMaxNumRetry_get_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrSessionOptions) SetHttpMaxNumRedirect(arg2 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_SessionOptions_httpMaxNumRedirect_set_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrSessionOptions) GetHttpMaxNumRedirect() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_SessionOptions_httpMaxNumRedirect_get_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrSessionOptions) SetHttpRequestTimeoutMilliseconds(arg2 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_SessionOptions_httpRequestTimeoutMilliseconds_set_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), C.swig_type_157(_swig_i_1))
}

func (arg1 SwigcptrSessionOptions) GetHttpRequestTimeoutMilliseconds() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_SessionOptions_httpRequestTimeoutMilliseconds_get_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrSessionOptions) SetHttpConnectionPoolMaxSize(arg2 int) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_SessionOptions_httpConnectionPoolMaxSize_set_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1))
}

func (arg1 SwigcptrSessionOptions) GetHttpConnectionPoolMaxSize() (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1
	swig_r = (int)(C._wrap_SessionOptions_httpConnectionPoolMaxSize_get_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrSessionOptions) SetHttpConnectionKeepAliveTimeoutSeconds(arg2 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_SessionOptions_httpConnectionKeepAliveTimeoutSeconds_set_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), C.swig_type_159(_swig_i_1))
}

func (arg1 SwigcptrSessionOptions) GetHttpConnectionKeepAliveTimeoutSeconds() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_SessionOptions_httpConnectionKeepAliveTimeoutSeconds_get_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrSessionOptions) SetEnableOneHttpConnectionPerRequest(arg2 bool) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_SessionOptions_enableOneHttpConnectionPerRequest_set_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), C._Bool(_swig_i_1))
}

func (arg1 SwigcptrSessionOptions) GetEnableOneHttpConnectionPerRequest() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_SessionOptions_enableOneHttpConnectionPerRequest_get_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrSessionOptions) SetWebsocketConnectTimeoutMilliseconds(arg2 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_SessionOptions_websocketConnectTimeoutMilliseconds_set_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), C.swig_type_161(_swig_i_1))
}

func (arg1 SwigcptrSessionOptions) GetWebsocketConnectTimeoutMilliseconds() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_SessionOptions_websocketConnectTimeoutMilliseconds_get_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func NewSessionOptions() (_swig_ret SessionOptions) {
	var swig_r SessionOptions
	swig_r = (SessionOptions)(SwigcptrSessionOptions(C._wrap_new_SessionOptions_ccapi_00042a34e9364138()))
	return swig_r
}

func DeleteSessionOptions(arg1 SessionOptions) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_SessionOptions_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0))
}

type SessionOptions interface {
	Swigcptr() uintptr
	SwigIsSessionOptions()
	ToString() (_swig_ret string)
	SetEnableCheckSequence(arg2 bool)
	GetEnableCheckSequence() (_swig_ret bool)
	SetEnableCheckOrderBookChecksum(arg2 bool)
	GetEnableCheckOrderBookChecksum() (_swig_ret bool)
	SetEnableCheckOrderBookCrossed(arg2 bool)
	GetEnableCheckOrderBookCrossed() (_swig_ret bool)
	SetEnableCheckPingPongWebsocketProtocolLevel(arg2 bool)
	GetEnableCheckPingPongWebsocketProtocolLevel() (_swig_ret bool)
	SetEnableCheckPingPongWebsocketApplicationLevel(arg2 bool)
	GetEnableCheckPingPongWebsocketApplicationLevel() (_swig_ret bool)
	SetEnableCheckHeartbeatFix(arg2 bool)
	GetEnableCheckHeartbeatFix() (_swig_ret bool)
	SetPingWebsocketProtocolLevelIntervalMilliseconds(arg2 int64)
	GetPingWebsocketProtocolLevelIntervalMilliseconds() (_swig_ret int64)
	SetPongWebsocketProtocolLevelTimeoutMilliseconds(arg2 int64)
	GetPongWebsocketProtocolLevelTimeoutMilliseconds() (_swig_ret int64)
	SetPingWebsocketApplicationLevelIntervalMilliseconds(arg2 int64)
	GetPingWebsocketApplicationLevelIntervalMilliseconds() (_swig_ret int64)
	SetPongWebsocketApplicationLevelTimeoutMilliseconds(arg2 int64)
	GetPongWebsocketApplicationLevelTimeoutMilliseconds() (_swig_ret int64)
	SetHeartbeatFixIntervalMilliseconds(arg2 int64)
	GetHeartbeatFixIntervalMilliseconds() (_swig_ret int64)
	SetHeartbeatFixTimeoutMilliseconds(arg2 int64)
	GetHeartbeatFixTimeoutMilliseconds() (_swig_ret int64)
	SetMaxEventQueueSize(arg2 int)
	GetMaxEventQueueSize() (_swig_ret int)
	SetHttpMaxNumRetry(arg2 int)
	GetHttpMaxNumRetry() (_swig_ret int)
	SetHttpMaxNumRedirect(arg2 int)
	GetHttpMaxNumRedirect() (_swig_ret int)
	SetHttpRequestTimeoutMilliseconds(arg2 int64)
	GetHttpRequestTimeoutMilliseconds() (_swig_ret int64)
	SetHttpConnectionPoolMaxSize(arg2 int)
	GetHttpConnectionPoolMaxSize() (_swig_ret int)
	SetHttpConnectionKeepAliveTimeoutSeconds(arg2 int64)
	GetHttpConnectionKeepAliveTimeoutSeconds() (_swig_ret int64)
	SetEnableOneHttpConnectionPerRequest(arg2 bool)
	GetEnableOneHttpConnectionPerRequest() (_swig_ret bool)
	SetWebsocketConnectTimeoutMilliseconds(arg2 int64)
	GetWebsocketConnectTimeoutMilliseconds() (_swig_ret int64)
}

type SwigcptrSessionConfigs uintptr

func (p SwigcptrSessionConfigs) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrSessionConfigs) SwigIsSessionConfigs() {
}

func NewSessionConfigs__SWIG_0(arg1 MapStringString) (_swig_ret SessionConfigs) {
	var swig_r SessionConfigs
	_swig_i_0 := getSwigcptr(arg1)
	swig_r = (SessionConfigs)(SwigcptrSessionConfigs(C._wrap_new_SessionConfigs__SWIG_0_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func NewSessionConfigs__SWIG_1() (_swig_ret SessionConfigs) {
	var swig_r SessionConfigs
	swig_r = (SessionConfigs)(SwigcptrSessionConfigs(C._wrap_new_SessionConfigs__SWIG_1_ccapi_00042a34e9364138()))
	return swig_r
}

func NewSessionConfigs(a ...interface{}) SessionConfigs {
	argc := len(a)
	if argc == 0 {
		return NewSessionConfigs__SWIG_1()
	}
	if argc == 1 {
		return NewSessionConfigs__SWIG_0(a[0].(MapStringString))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrSessionConfigs) GetExchangeFieldMap() (_swig_ret Std_map_Sl_std_string_Sc_std_vector_Sl_std_string_Sg__Sc_std_less_Sl_std_string_Sg__Sg_) {
	var swig_r Std_map_Sl_std_string_Sc_std_vector_Sl_std_string_Sg__Sc_std_less_Sl_std_string_Sg__Sg_
	_swig_i_0 := arg1
	swig_r = (Std_map_Sl_std_string_Sc_std_vector_Sl_std_string_Sg__Sc_std_less_Sl_std_string_Sg__Sg_)(SwigcptrStd_map_Sl_std_string_Sc_std_vector_Sl_std_string_Sg__Sc_std_less_Sl_std_string_Sg__Sg_(C._wrap_SessionConfigs_getExchangeFieldMap_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrSessionConfigs) GetExchangeFieldWebsocketChannelMap() (_swig_ret MapStringMapStringString) {
	var swig_r MapStringMapStringString
	_swig_i_0 := arg1
	swig_r = (MapStringMapStringString)(SwigcptrMapStringMapStringString(C._wrap_SessionConfigs_getExchangeFieldWebsocketChannelMap_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrSessionConfigs) GetUrlWebsocketBase() (_swig_ret MapStringString) {
	var swig_r MapStringString
	_swig_i_0 := arg1
	swig_r = (MapStringString)(SwigcptrMapStringString(C._wrap_SessionConfigs_getUrlWebsocketBase_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrSessionConfigs) GetUrlRestBase() (_swig_ret MapStringString) {
	var swig_r MapStringString
	_swig_i_0 := arg1
	swig_r = (MapStringString)(SwigcptrMapStringString(C._wrap_SessionConfigs_getUrlRestBase_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrSessionConfigs) GetUrlFixBase() (_swig_ret MapStringString) {
	var swig_r MapStringString
	_swig_i_0 := arg1
	swig_r = (MapStringString)(SwigcptrMapStringString(C._wrap_SessionConfigs_getUrlFixBase_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrSessionConfigs) GetInitialSequenceByExchangeMap() (_swig_ret Std_map_Sl_std_string_Sc_int_Sc_std_less_Sl_std_string_Sg__Sg_) {
	var swig_r Std_map_Sl_std_string_Sc_int_Sc_std_less_Sl_std_string_Sg__Sg_
	_swig_i_0 := arg1
	swig_r = (Std_map_Sl_std_string_Sc_int_Sc_std_less_Sl_std_string_Sg__Sg_)(SwigcptrStd_map_Sl_std_string_Sc_int_Sc_std_less_Sl_std_string_Sg__Sg_(C._wrap_SessionConfigs_getInitialSequenceByExchangeMap_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrSessionConfigs) GetCredential() (_swig_ret MapStringString) {
	var swig_r MapStringString
	_swig_i_0 := arg1
	swig_r = (MapStringString)(SwigcptrMapStringString(C._wrap_SessionConfigs_getCredential_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrSessionConfigs) SetUrlWebsocketBase(arg2 MapStringString) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_SessionConfigs_setUrlWebsocketBase_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrSessionConfigs) SetUrlRestBase(arg2 MapStringString) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_SessionConfigs_setUrlRestBase_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrSessionConfigs) SetUrlFixBase(arg2 MapStringString) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_SessionConfigs_setUrlFixBase_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrSessionConfigs) SetCredential(arg2 MapStringString) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_SessionConfigs_setCredential_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func DeleteSessionConfigs(arg1 SessionConfigs) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_SessionConfigs_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0))
}

type SessionConfigs interface {
	Swigcptr() uintptr
	SwigIsSessionConfigs()
	GetExchangeFieldMap() (_swig_ret Std_map_Sl_std_string_Sc_std_vector_Sl_std_string_Sg__Sc_std_less_Sl_std_string_Sg__Sg_)
	GetExchangeFieldWebsocketChannelMap() (_swig_ret MapStringMapStringString)
	GetUrlWebsocketBase() (_swig_ret MapStringString)
	GetUrlRestBase() (_swig_ret MapStringString)
	GetUrlFixBase() (_swig_ret MapStringString)
	GetInitialSequenceByExchangeMap() (_swig_ret Std_map_Sl_std_string_Sc_int_Sc_std_less_Sl_std_string_Sg__Sg_)
	GetCredential() (_swig_ret MapStringString)
	SetUrlWebsocketBase(arg2 MapStringString)
	SetUrlRestBase(arg2 MapStringString)
	SetUrlFixBase(arg2 MapStringString)
	SetCredential(arg2 MapStringString)
}

type SwigcptrSession uintptr

func (p SwigcptrSession) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrSession) SwigIsSession() {
}

func NewSession__SWIG_0(arg1 SessionOptions, arg2 SessionConfigs, arg3 EventHandler, arg4 EventDispatcher) (_swig_ret Session) {
	var swig_r Session
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := getSwigcptr(arg4)
	swig_r = (Session)(SwigcptrSession(C._wrap_new_Session__SWIG_0_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.uintptr_t(_swig_i_3))))
	return swig_r
}

func NewSession__SWIG_1(arg1 SessionOptions, arg2 SessionConfigs, arg3 EventHandler) (_swig_ret Session) {
	var swig_r Session
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	swig_r = (Session)(SwigcptrSession(C._wrap_new_Session__SWIG_1_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))))
	return swig_r
}

func NewSession__SWIG_2(arg1 SessionOptions, arg2 SessionConfigs) (_swig_ret Session) {
	var swig_r Session
	_swig_i_0 := getSwigcptr(arg1)
	_swig_i_1 := getSwigcptr(arg2)
	swig_r = (Session)(SwigcptrSession(C._wrap_new_Session__SWIG_2_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))))
	return swig_r
}

func NewSession__SWIG_3(arg1 SessionOptions) (_swig_ret Session) {
	var swig_r Session
	_swig_i_0 := getSwigcptr(arg1)
	swig_r = (Session)(SwigcptrSession(C._wrap_new_Session__SWIG_3_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func NewSession__SWIG_4() (_swig_ret Session) {
	var swig_r Session
	swig_r = (Session)(SwigcptrSession(C._wrap_new_Session__SWIG_4_ccapi_00042a34e9364138()))
	return swig_r
}

func NewSession(a ...interface{}) Session {
	argc := len(a)
	if argc == 0 {
		return NewSession__SWIG_4()
	}
	if argc == 1 {
		return NewSession__SWIG_3(a[0].(SessionOptions))
	}
	if argc == 2 {
		return NewSession__SWIG_2(a[0].(SessionOptions), a[1].(SessionConfigs))
	}
	if argc == 3 {
		return NewSession__SWIG_1(a[0].(SessionOptions), a[1].(SessionConfigs), a[2].(EventHandler))
	}
	if argc == 4 {
		return NewSession__SWIG_0(a[0].(SessionOptions), a[1].(SessionConfigs), a[2].(EventHandler), a[3].(EventDispatcher))
	}
	panic("No match for overloaded function call")
}

func DeleteSession(arg1 Session) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_Session_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrSession) Start() {
	_swig_i_0 := arg1
	C._wrap_Session_start_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrSession) Stop() {
	_swig_i_0 := arg1
	C._wrap_Session_stop_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrSession) Subscribe__SWIG_0(arg2 Subscription) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_Session_subscribe__SWIG_0_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrSession) Subscribe__SWIG_1(arg2 SubscriptionList) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_Session_subscribe__SWIG_1_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (p SwigcptrSession) Subscribe(a ...interface{}) {
	argc := len(a)
	if argc == 1 {
		if _, ok := a[0].(Subscription); !ok {
			goto check_1
		}
		p.Subscribe__SWIG_0(a[0].(Subscription))
		return
	}
check_1:
	if argc == 1 {
		p.Subscribe__SWIG_1(a[0].(SubscriptionList))
		return
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrSession) SubscribeByFix__SWIG_0(arg2 Subscription) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_Session_subscribeByFix__SWIG_0_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrSession) SubscribeByFix__SWIG_1(arg2 SubscriptionList) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_Session_subscribeByFix__SWIG_1_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (p SwigcptrSession) SubscribeByFix(a ...interface{}) {
	argc := len(a)
	if argc == 1 {
		if _, ok := a[0].(Subscription); !ok {
			goto check_1
		}
		p.SubscribeByFix__SWIG_0(a[0].(Subscription))
		return
	}
check_1:
	if argc == 1 {
		p.SubscribeByFix__SWIG_1(a[0].(SubscriptionList))
		return
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrSession) OnEvent(arg2 Event, arg3 EventQueue) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	C._wrap_Session_onEvent_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))
}

func (arg1 SwigcptrSession) SendRequestByFix__SWIG_0(arg2 Request) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_Session_sendRequestByFix__SWIG_0_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrSession) SendRequestByFix__SWIG_1(arg2 RequestList) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_Session_sendRequestByFix__SWIG_1_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (p SwigcptrSession) SendRequestByFix(a ...interface{}) {
	argc := len(a)
	if argc == 1 {
		if _, ok := a[0].(Request); !ok {
			goto check_1
		}
		p.SendRequestByFix__SWIG_0(a[0].(Request))
		return
	}
check_1:
	if argc == 1 {
		p.SendRequestByFix__SWIG_1(a[0].(RequestList))
		return
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrSession) SendRequestByWebsocket__SWIG_0(arg2 Request) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_Session_sendRequestByWebsocket__SWIG_0_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrSession) SendRequestByWebsocket__SWIG_1(arg2 RequestList) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_Session_sendRequestByWebsocket__SWIG_1_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (p SwigcptrSession) SendRequestByWebsocket(a ...interface{}) {
	argc := len(a)
	if argc == 1 {
		if _, ok := a[0].(Request); !ok {
			goto check_1
		}
		p.SendRequestByWebsocket__SWIG_0(a[0].(Request))
		return
	}
check_1:
	if argc == 1 {
		p.SendRequestByWebsocket__SWIG_1(a[0].(RequestList))
		return
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrSession) SendRequest__SWIG_0(arg2 Request, arg3 EventQueue, arg4 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := arg4
	C._wrap_Session_sendRequest__SWIG_0_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.swig_type_163(_swig_i_3))
}

func (arg1 SwigcptrSession) SendRequest__SWIG_1(arg2 Request, arg3 EventQueue) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	C._wrap_Session_sendRequest__SWIG_1_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))
}

func (arg1 SwigcptrSession) SendRequest__SWIG_2(arg2 Request) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_Session_sendRequest__SWIG_2_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrSession) SendRequest__SWIG_3(arg2 RequestList, arg3 EventQueue, arg4 int64) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := arg4
	C._wrap_Session_sendRequest__SWIG_3_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.swig_type_164(_swig_i_3))
}

func (arg1 SwigcptrSession) SendRequest__SWIG_4(arg2 RequestList, arg3 EventQueue) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	C._wrap_Session_sendRequest__SWIG_4_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))
}

func (arg1 SwigcptrSession) SendRequest__SWIG_5(arg2 RequestList) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_Session_sendRequest__SWIG_5_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (p SwigcptrSession) SendRequest(a ...interface{}) {
	argc := len(a)
	if argc == 1 {
		if _, ok := a[0].(Request); !ok {
			goto check_1
		}
		p.SendRequest__SWIG_2(a[0].(Request))
		return
	}
check_1:
	if argc == 1 {
		p.SendRequest__SWIG_5(a[0].(RequestList))
		return
	}
	if argc == 2 {
		if _, ok := a[0].(RequestList); !ok {
			goto check_3
		}
		p.SendRequest__SWIG_4(a[0].(RequestList), a[1].(EventQueue))
		return
	}
check_3:
	if argc == 2 {
		p.SendRequest__SWIG_1(a[0].(Request), a[1].(EventQueue))
		return
	}
	if argc == 3 {
		if _, ok := a[0].(Request); !ok {
			goto check_5
		}
		p.SendRequest__SWIG_0(a[0].(Request), a[1].(EventQueue), a[2].(int64))
		return
	}
check_5:
	if argc == 3 {
		p.SendRequest__SWIG_3(a[0].(RequestList), a[1].(EventQueue), a[2].(int64))
		return
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrSession) GetEventQueue() (_swig_ret EventQueue) {
	var swig_r EventQueue
	_swig_i_0 := arg1
	swig_r = (EventQueue)(SwigcptrEventQueue(C._wrap_Session_getEventQueue_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrSession) OnError__SWIG_0(arg2 CcapiEventType, arg3 CcapiMessageType, arg4 string, arg5 EventQueue) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := getSwigcptr(arg5)
	C._wrap_Session_onError__SWIG_0_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.swig_intgo(_swig_i_2), *(*C.swig_type_165)(unsafe.Pointer(&_swig_i_3)), C.uintptr_t(_swig_i_4))
	if Swig_escape_always_false {
		Swig_escape_val = arg4
	}
}

func (arg1 SwigcptrSession) OnError__SWIG_1(arg2 CcapiEventType, arg3 CcapiMessageType, arg4 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	C._wrap_Session_onError__SWIG_1_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), C.swig_intgo(_swig_i_1), C.swig_intgo(_swig_i_2), *(*C.swig_type_166)(unsafe.Pointer(&_swig_i_3)))
	if Swig_escape_always_false {
		Swig_escape_val = arg4
	}
}

func (p SwigcptrSession) OnError(a ...interface{}) {
	argc := len(a)
	if argc == 3 {
		p.OnError__SWIG_1(a[0].(CcapiEventType), a[1].(CcapiMessageType), a[2].(string))
		return
	}
	if argc == 4 {
		p.OnError__SWIG_0(a[0].(CcapiEventType), a[1].(CcapiMessageType), a[2].(string), a[3].(EventQueue))
		return
	}
	panic("No match for overloaded function call")
}

type Session interface {
	Swigcptr() uintptr
	SwigIsSession()
	Start()
	Stop()
	Subscribe(a ...interface{})
	SubscribeByFix(a ...interface{})
	OnEvent(arg2 Event, arg3 EventQueue)
	SendRequestByFix(a ...interface{})
	SendRequestByWebsocket(a ...interface{})
	SendRequest(a ...interface{})
	GetEventQueue() (_swig_ret EventQueue)
	OnError(a ...interface{})
}

const CCAPI_LOGGER_FILE_SEPARATOR byte = '/'
type _swig_DirectorLogger struct {
	SwigcptrLogger
	v interface{}
}

func (p *_swig_DirectorLogger) Swigcptr() uintptr {
	return getSwigcptr(p.SwigcptrLogger)
}

func (p *_swig_DirectorLogger) SwigIsLogger() {
}

func (p *_swig_DirectorLogger) DirectorInterface() interface{} {
	return p.v
}

func NewDirectorLogger(v interface{}) Logger {
	p := &_swig_DirectorLogger{0, v}
	p.SwigcptrLogger = SwigcptrLogger(C._wrap__swig_NewDirectorLoggerLogger_ccapi_00042a34e9364138(C.int(swigDirectorAdd(p))))
	return p
}

func DeleteDirectorLogger(arg1 Logger) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_DeleteDirectorLogger_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0))
}

//export Swiggo_DeleteDirector_Logger_ccapi_00042a34e9364138
func Swiggo_DeleteDirector_Logger_ccapi_00042a34e9364138(c int) {
	swigDirectorLookup(c).(*_swig_DirectorLogger).SwigcptrLogger = 0
	swigDirectorDelete(c)
}

type _swig_DirectorInterfaceLoggerLogMessage interface {
	LogMessage(string, string, string, string, string, string)
}

func (swig_p *_swig_DirectorLogger) LogMessage(severity string, threadId string, timeISO string, fileName string, lineNumber string, message string) {
	if swig_g, swig_ok := swig_p.v.(_swig_DirectorInterfaceLoggerLogMessage); swig_ok {
		swig_g.LogMessage(severity, threadId, timeISO, fileName, lineNumber, message)
		return
	}
	_swig_i_0 := severity
	_swig_i_1 := threadId
	_swig_i_2 := timeISO
	_swig_i_3 := fileName
	_swig_i_4 := lineNumber
	_swig_i_5 := message
	C._wrap__swig_DirectorLogger_upcall_LogMessage_ccapi_00042a34e9364138(C.uintptr_t(swig_p.SwigcptrLogger), *(*C.swig_type_167)(unsafe.Pointer(&_swig_i_0)), *(*C.swig_type_168)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_169)(unsafe.Pointer(&_swig_i_2)), *(*C.swig_type_170)(unsafe.Pointer(&_swig_i_3)), *(*C.swig_type_171)(unsafe.Pointer(&_swig_i_4)), *(*C.swig_type_172)(unsafe.Pointer(&_swig_i_5)))
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_0
	}
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_1
	}
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_2
	}
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_3
	}
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_4
	}
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_5
	}
}

func DirectorLoggerLogMessage(swig_p Logger, severity string, threadId string, timeISO string, fileName string, lineNumber string, message string) {
	_swig_i_0 := severity
	_swig_i_1 := threadId
	_swig_i_2 := timeISO
	_swig_i_3 := fileName
	_swig_i_4 := lineNumber
	_swig_i_5 := message
	C._wrap__swig_DirectorLogger_upcall_LogMessage_ccapi_00042a34e9364138(C.uintptr_t(swig_p.(*_swig_DirectorLogger).SwigcptrLogger), *(*C.swig_type_167)(unsafe.Pointer(&_swig_i_0)), *(*C.swig_type_168)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_169)(unsafe.Pointer(&_swig_i_2)), *(*C.swig_type_170)(unsafe.Pointer(&_swig_i_3)), *(*C.swig_type_171)(unsafe.Pointer(&_swig_i_4)), *(*C.swig_type_172)(unsafe.Pointer(&_swig_i_5)))
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_0
	}
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_1
	}
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_2
	}
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_3
	}
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_4
	}
	if Swig_escape_always_false {
		Swig_escape_val = _swig_i_5
	}
}

//export Swig_DirectorLogger_callback_logMessage_ccapi_00042a34e9364138
func Swig_DirectorLogger_callback_logMessage_ccapi_00042a34e9364138(swig_c int, arg2 string, arg3 string, arg4 string, arg5 string, arg6 string, arg7 string) {
	var _swig_i_0 string
	var _swig_i_1 string
	var _swig_i_2 string
	var _swig_i_3 string
	var _swig_i_4 string
	var _swig_i_5 string
	swig_p := swigDirectorLookup(swig_c).(*_swig_DirectorLogger)
 _swig_i_0 = swigCopyString(arg2) 
 _swig_i_1 = swigCopyString(arg3) 
 _swig_i_2 = swigCopyString(arg4) 
 _swig_i_3 = swigCopyString(arg5) 
 _swig_i_4 = swigCopyString(arg6) 
 _swig_i_5 = swigCopyString(arg7) 
	swig_p.LogMessage(_swig_i_0, _swig_i_1, _swig_i_2, _swig_i_3, _swig_i_4, _swig_i_5)
}

type SwigcptrLogger uintptr

func (p SwigcptrLogger) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrLogger) SwigIsLogger() {
}

func (p SwigcptrLogger) DirectorInterface() interface{} {
	return nil
}

func (arg1 SwigcptrLogger) SetLOG_SEVERITY_FATAL(arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Logger_LOG_SEVERITY_FATAL_set_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), *(*C.swig_type_173)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrLogger) GetLOG_SEVERITY_FATAL() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_Logger_LOG_SEVERITY_FATAL_get_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (arg1 SwigcptrLogger) SetLOG_SEVERITY_ERROR(arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Logger_LOG_SEVERITY_ERROR_set_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), *(*C.swig_type_175)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrLogger) GetLOG_SEVERITY_ERROR() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_Logger_LOG_SEVERITY_ERROR_get_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (arg1 SwigcptrLogger) SetLOG_SEVERITY_WARN(arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Logger_LOG_SEVERITY_WARN_set_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), *(*C.swig_type_177)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrLogger) GetLOG_SEVERITY_WARN() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_Logger_LOG_SEVERITY_WARN_get_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (arg1 SwigcptrLogger) SetLOG_SEVERITY_INFO(arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Logger_LOG_SEVERITY_INFO_set_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), *(*C.swig_type_179)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrLogger) GetLOG_SEVERITY_INFO() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_Logger_LOG_SEVERITY_INFO_get_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (arg1 SwigcptrLogger) SetLOG_SEVERITY_DEBUG(arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Logger_LOG_SEVERITY_DEBUG_set_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), *(*C.swig_type_181)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrLogger) GetLOG_SEVERITY_DEBUG() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_Logger_LOG_SEVERITY_DEBUG_get_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (arg1 SwigcptrLogger) SetLOG_SEVERITY_TRACE(arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_Logger_LOG_SEVERITY_TRACE_set_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), *(*C.swig_type_183)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrLogger) GetLOG_SEVERITY_TRACE() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_Logger_LOG_SEVERITY_TRACE_get_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func DeleteLogger(arg1 Logger) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_Logger_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0))
}

func (arg1 SwigcptrLogger) Fatal(arg2 Std_thread_id, arg3 Std_chrono_system_clock_time_point, arg4 string, arg5 string, arg6 string) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	C._wrap_Logger_fatal_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), *(*C.swig_type_185)(unsafe.Pointer(&_swig_i_3)), *(*C.swig_type_186)(unsafe.Pointer(&_swig_i_4)), *(*C.swig_type_187)(unsafe.Pointer(&_swig_i_5)))
	if Swig_escape_always_false {
		Swig_escape_val = arg4
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg5
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg6
	}
}

func (arg1 SwigcptrLogger) Error(arg2 Std_thread_id, arg3 Std_chrono_system_clock_time_point, arg4 string, arg5 string, arg6 string) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	C._wrap_Logger_error_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), *(*C.swig_type_188)(unsafe.Pointer(&_swig_i_3)), *(*C.swig_type_189)(unsafe.Pointer(&_swig_i_4)), *(*C.swig_type_190)(unsafe.Pointer(&_swig_i_5)))
	if Swig_escape_always_false {
		Swig_escape_val = arg4
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg5
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg6
	}
}

func (arg1 SwigcptrLogger) Warn(arg2 Std_thread_id, arg3 Std_chrono_system_clock_time_point, arg4 string, arg5 string, arg6 string) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	C._wrap_Logger_warn_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), *(*C.swig_type_191)(unsafe.Pointer(&_swig_i_3)), *(*C.swig_type_192)(unsafe.Pointer(&_swig_i_4)), *(*C.swig_type_193)(unsafe.Pointer(&_swig_i_5)))
	if Swig_escape_always_false {
		Swig_escape_val = arg4
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg5
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg6
	}
}

func (arg1 SwigcptrLogger) Info(arg2 Std_thread_id, arg3 Std_chrono_system_clock_time_point, arg4 string, arg5 string, arg6 string) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	C._wrap_Logger_info_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), *(*C.swig_type_194)(unsafe.Pointer(&_swig_i_3)), *(*C.swig_type_195)(unsafe.Pointer(&_swig_i_4)), *(*C.swig_type_196)(unsafe.Pointer(&_swig_i_5)))
	if Swig_escape_always_false {
		Swig_escape_val = arg4
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg5
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg6
	}
}

func (arg1 SwigcptrLogger) Debug(arg2 Std_thread_id, arg3 Std_chrono_system_clock_time_point, arg4 string, arg5 string, arg6 string) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	C._wrap_Logger_debug_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), *(*C.swig_type_197)(unsafe.Pointer(&_swig_i_3)), *(*C.swig_type_198)(unsafe.Pointer(&_swig_i_4)), *(*C.swig_type_199)(unsafe.Pointer(&_swig_i_5)))
	if Swig_escape_always_false {
		Swig_escape_val = arg4
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg5
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg6
	}
}

func (arg1 SwigcptrLogger) Trace(arg2 Std_thread_id, arg3 Std_chrono_system_clock_time_point, arg4 string, arg5 string, arg6 string) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	_swig_i_2 := getSwigcptr(arg3)
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	C._wrap_Logger_trace_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), *(*C.swig_type_200)(unsafe.Pointer(&_swig_i_3)), *(*C.swig_type_201)(unsafe.Pointer(&_swig_i_4)), *(*C.swig_type_202)(unsafe.Pointer(&_swig_i_5)))
	if Swig_escape_always_false {
		Swig_escape_val = arg4
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg5
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg6
	}
}

func SetLoggerLogger(arg1 Logger) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_Logger_logger_set_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0))
}

func GetLoggerLogger() (_swig_ret Logger) {
	var swig_r Logger
	swig_r = (Logger)(SwigcptrLogger(C._wrap_Logger_logger_get_ccapi_00042a34e9364138()))
	return swig_r
}

func (arg1 SwigcptrLogger) LogMessage(arg2 string, arg3 string, arg4 string, arg5 string, arg6 string, arg7 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	_swig_i_5 := arg6
	_swig_i_6 := arg7
	C._wrap_Logger_logMessage_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), *(*C.swig_type_167)(unsafe.Pointer(&_swig_i_1)), *(*C.swig_type_168)(unsafe.Pointer(&_swig_i_2)), *(*C.swig_type_169)(unsafe.Pointer(&_swig_i_3)), *(*C.swig_type_170)(unsafe.Pointer(&_swig_i_4)), *(*C.swig_type_171)(unsafe.Pointer(&_swig_i_5)), *(*C.swig_type_172)(unsafe.Pointer(&_swig_i_6)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg3
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg4
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg5
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg6
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg7
	}
}

func NewLogger() (_swig_ret Logger) {
	var swig_r Logger
	swig_r = (Logger)(SwigcptrLogger(C._wrap_new_Logger_ccapi_00042a34e9364138()))
	return swig_r
}

type Logger interface {
	Swigcptr() uintptr
	SwigIsLogger()
	DirectorInterface() interface{}
	SetLOG_SEVERITY_FATAL(arg2 string)
	GetLOG_SEVERITY_FATAL() (_swig_ret string)
	SetLOG_SEVERITY_ERROR(arg2 string)
	GetLOG_SEVERITY_ERROR() (_swig_ret string)
	SetLOG_SEVERITY_WARN(arg2 string)
	GetLOG_SEVERITY_WARN() (_swig_ret string)
	SetLOG_SEVERITY_INFO(arg2 string)
	GetLOG_SEVERITY_INFO() (_swig_ret string)
	SetLOG_SEVERITY_DEBUG(arg2 string)
	GetLOG_SEVERITY_DEBUG() (_swig_ret string)
	SetLOG_SEVERITY_TRACE(arg2 string)
	GetLOG_SEVERITY_TRACE() (_swig_ret string)
	Fatal(arg2 Std_thread_id, arg3 Std_chrono_system_clock_time_point, arg4 string, arg5 string, arg6 string)
	Error(arg2 Std_thread_id, arg3 Std_chrono_system_clock_time_point, arg4 string, arg5 string, arg6 string)
	Warn(arg2 Std_thread_id, arg3 Std_chrono_system_clock_time_point, arg4 string, arg5 string, arg6 string)
	Info(arg2 Std_thread_id, arg3 Std_chrono_system_clock_time_point, arg4 string, arg5 string, arg6 string)
	Debug(arg2 Std_thread_id, arg3 Std_chrono_system_clock_time_point, arg4 string, arg5 string, arg6 string)
	Trace(arg2 Std_thread_id, arg3 Std_chrono_system_clock_time_point, arg4 string, arg5 string, arg6 string)
	LogMessage(arg2 string, arg3 string, arg4 string, arg5 string, arg6 string, arg7 string)
}

type SwigcptrEventQueue uintptr

func (p SwigcptrEventQueue) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrEventQueue) SwigIsEventQueue() {
}

func (arg1 SwigcptrEventQueue) SetEXCEPTION_QUEUE_FULL(arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_EventQueue_EXCEPTION_QUEUE_FULL_set_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), *(*C.swig_type_203)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrEventQueue) GetEXCEPTION_QUEUE_FULL() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_EventQueue_EXCEPTION_QUEUE_FULL_get_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func (arg1 SwigcptrEventQueue) SetEXCEPTION_QUEUE_EMPTY(arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_EventQueue_EXCEPTION_QUEUE_EMPTY_set_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), *(*C.swig_type_205)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrEventQueue) GetEXCEPTION_QUEUE_EMPTY() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_EventQueue_EXCEPTION_QUEUE_EMPTY_get_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
 swig_r_1 = swigCopyString(swig_r) 
	return swig_r_1
}

func NewEventQueue__SWIG_0(arg1 int64) (_swig_ret EventQueue) {
	var swig_r EventQueue
	_swig_i_0 := arg1
	swig_r = (EventQueue)(SwigcptrEventQueue(C._wrap_new_EventQueue__SWIG_0_ccapi_00042a34e9364138(C.swig_type_207(_swig_i_0))))
	return swig_r
}

func NewEventQueue__SWIG_1() (_swig_ret EventQueue) {
	var swig_r EventQueue
	swig_r = (EventQueue)(SwigcptrEventQueue(C._wrap_new_EventQueue__SWIG_1_ccapi_00042a34e9364138()))
	return swig_r
}

func NewEventQueue(a ...interface{}) EventQueue {
	argc := len(a)
	if argc == 0 {
		return NewEventQueue__SWIG_1()
	}
	if argc == 1 {
		return NewEventQueue__SWIG_0(a[0].(int64))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrEventQueue) PushBack__SWIG_0(arg2 Event) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_EventQueue_pushBack__SWIG_0_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrEventQueue) PushBack__SWIG_1(arg2 uintptr) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_EventQueue_pushBack__SWIG_1_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (p SwigcptrEventQueue) PushBack(a ...interface{}) {
	argc := len(a)
	if argc == 1 {
		if _, ok := a[0].(Event); !ok {
			goto check_1
		}
		p.PushBack__SWIG_0(a[0].(Event))
		return
	}
check_1:
	if argc == 1 {
		p.PushBack__SWIG_1(a[0].(uintptr))
		return
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrEventQueue) PopBack() (_swig_ret Event) {
	var swig_r Event
	_swig_i_0 := arg1
	swig_r = (Event)(SwigcptrEvent(C._wrap_EventQueue_popBack_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrEventQueue) Purge() (_swig_ret EventList) {
	var swig_r EventList
	_swig_i_0 := arg1
	swig_r = (EventList)(SwigcptrEventList(C._wrap_EventQueue_purge_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrEventQueue) RemoveAll(arg2 EventList) {
	_swig_i_0 := arg1
	_swig_i_1 := getSwigcptr(arg2)
	C._wrap_EventQueue_removeAll_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrEventQueue) Size() (_swig_ret int64) {
	var swig_r int64
	_swig_i_0 := arg1
	swig_r = (int64)(C._wrap_EventQueue_size_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrEventQueue) Empty() (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	swig_r = (bool)(C._wrap_EventQueue_empty_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func DeleteEventQueue(arg1 EventQueue) {
	_swig_i_0 := getSwigcptr(arg1)
	C._wrap_delete_EventQueue_ccapi_00042a34e9364138(C.uintptr_t(_swig_i_0))
}

type EventQueue interface {
	Swigcptr() uintptr
	SwigIsEventQueue()
	SetEXCEPTION_QUEUE_FULL(arg2 string)
	GetEXCEPTION_QUEUE_FULL() (_swig_ret string)
	SetEXCEPTION_QUEUE_EMPTY(arg2 string)
	GetEXCEPTION_QUEUE_EMPTY() (_swig_ret string)
	PushBack(a ...interface{})
	PopBack() (_swig_ret Event)
	Purge() (_swig_ret EventList)
	RemoveAll(arg2 EventList)
	Size() (_swig_ret int64)
	Empty() (_swig_ret bool)
}


type SwigcptrStd_chrono_time_point_Sl_std_chrono_system_clock_Sc_std_chrono_nanoseconds_Sg_ uintptr
type Std_chrono_time_point_Sl_std_chrono_system_clock_Sc_std_chrono_nanoseconds_Sg_ interface {
	Swigcptr() uintptr;
}
func (p SwigcptrStd_chrono_time_point_Sl_std_chrono_system_clock_Sc_std_chrono_nanoseconds_Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrSwigDirector_EventHandler uintptr
type SwigDirector_EventHandler interface {
	Swigcptr() uintptr;
}
func (p SwigcptrSwigDirector_EventHandler) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrSwigDirector_Logger uintptr
type SwigDirector_Logger interface {
	Swigcptr() uintptr;
}
func (p SwigcptrSwigDirector_Logger) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrStd_function_Sl_void_Sp__SP__Sg_ uintptr
type Std_function_Sl_void_Sp__SP__Sg_ interface {
	Swigcptr() uintptr;
}
func (p SwigcptrStd_function_Sl_void_Sp__SP__Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrStd_thread_id uintptr
type Std_thread_id interface {
	Swigcptr() uintptr;
}
func (p SwigcptrStd_thread_id) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrStd_vector_Sl_std_map_Sl_std_string_Sc_std_string_Sg__Sg_ uintptr
type Std_vector_Sl_std_map_Sl_std_string_Sc_std_string_Sg__Sg_ interface {
	Swigcptr() uintptr;
}
func (p SwigcptrStd_vector_Sl_std_map_Sl_std_string_Sc_std_string_Sg__Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrStd_set_Sl_std_string_Sg_ uintptr
type Std_set_Sl_std_string_Sg_ interface {
	Swigcptr() uintptr;
}
func (p SwigcptrStd_set_Sl_std_string_Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrStd_map_Sl_std_string_Sc_std_vector_Sl_std_string_Sg__Sc_std_less_Sl_std_string_Sg__Sg_ uintptr
type Std_map_Sl_std_string_Sc_std_vector_Sl_std_string_Sg__Sc_std_less_Sl_std_string_Sg__Sg_ interface {
	Swigcptr() uintptr;
}
func (p SwigcptrStd_map_Sl_std_string_Sc_std_vector_Sl_std_string_Sg__Sc_std_less_Sl_std_string_Sg__Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrStd_map_Sl_std_string_Sc_int_Sc_std_less_Sl_std_string_Sg__Sg_ uintptr
type Std_map_Sl_std_string_Sc_int_Sc_std_less_Sl_std_string_Sg__Sg_ interface {
	Swigcptr() uintptr;
}
func (p SwigcptrStd_map_Sl_std_string_Sc_int_Sc_std_less_Sl_std_string_Sg__Sg_) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrStd_chrono_system_clock_time_point uintptr
type Std_chrono_system_clock_time_point interface {
	Swigcptr() uintptr;
}
func (p SwigcptrStd_chrono_system_clock_time_point) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrStd_vector_Sl_std_vector_Sl_std_pair_Sl_int_Sc_std_string_Sg__Sg__Sg_ uintptr
type Std_vector_Sl_std_vector_Sl_std_pair_Sl_int_Sc_std_string_Sg__Sg__Sg_ interface {
	Swigcptr() uintptr;
}
func (p SwigcptrStd_vector_Sl_std_vector_Sl_std_pair_Sl_int_Sc_std_string_Sg__Sg__Sg_) Swigcptr() uintptr {
	return uintptr(p)
}



var swigDirectorTrack struct {
	sync.Mutex
	m map[int]interface{}
	c int
}

func swigDirectorAdd(v interface{}) int {
	swigDirectorTrack.Lock()
	defer swigDirectorTrack.Unlock()
	if swigDirectorTrack.m == nil {
		swigDirectorTrack.m = make(map[int]interface{})
	}
	swigDirectorTrack.c++
	ret := swigDirectorTrack.c
	swigDirectorTrack.m[ret] = v
	return ret
}

func swigDirectorLookup(c int) interface{} {
	swigDirectorTrack.Lock()
	defer swigDirectorTrack.Unlock()
	ret := swigDirectorTrack.m[c]
	if ret == nil {
		panic("C++ director pointer not found (possible	use-after-free)")
	}
	return ret
}

func swigDirectorDelete(c int) {
	swigDirectorTrack.Lock()
	defer swigDirectorTrack.Unlock()
	if swigDirectorTrack.m[c] == nil {
		if c > swigDirectorTrack.c {
			panic("C++ director pointer invalid (possible memory corruption")
		} else {
			panic("C++ director pointer not found (possible use-after-free)")
		}
	}
	delete(swigDirectorTrack.m, c)
}


